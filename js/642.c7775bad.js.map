{"version":3,"file":"js/642.c7775bad.js","mappings":"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AAY,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,cAAc,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,eAAe,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,eAAe,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,W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AAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,GAAG,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,eAAe,CAAC,KAAK,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,eChB98tB,MAEDK,GAAa,IAAIhG,IAAI,CACvB,CAAC,GAAI,UACL,CAAC,GAAI,SACL,CAAC,GAAI,UACL,CAAC,GAAI,QACL,CAAC,GAAI,UAMLrR,OAAOW,UAAU2W,YAmErB,SAASC,GACLC,EACAtG,GAEA,OAAO,SAAgBuG,GACnB,IAAIxH,EACAyH,EAAU,EACVtL,EAAS,GAEb,MAAQ6D,EAAQuH,EAAM1H,KAAK2H,GACnBC,IAAYzH,EAAM5I,QAClB+E,GAAUqL,EAAKE,UAAUD,EAASzH,EAAM5I,QAI5C+E,GAAU8E,EAAI/M,IAAI8L,EAAM,GAAGpE,WAAW,IAGtC6L,EAAUzH,EAAM5I,MAAQ,EAG5B,OAAO+E,EAASqL,EAAKE,UAAUD,EACnC,CACJ,CAS0BH,GAAW,WAAYF,IAQlBE,GAC3B,cACA,IAAIlG,IAAI,CACJ,CAAC,GAAI,UACL,CAAC,GAAI,SACL,CAAC,IAAK,aAUYkG,GACtB,eACA,IAAIlG,IAAI,CACJ,CAAC,GAAI,SACL,CAAC,GAAI,QACL,CAAC,GAAI,QACL,CAAC,IAAK,aCnId,IAAYuG,GAOAC,GCVZ,SAASC,GAAQC,GAAO,OAAOpT,OAAOhE,UAAUmL,SAASkM,KAAKD,EAAK,CAEnE,SAASE,GAAUF,GAAO,MAAuB,oBAAhBD,GAAOC,EAA2B,EDCnE,SAAYH,GAERA,EAAAA,EAAA,gBAEAA,EAAAA,EAAA,iBACH,EALD,CAAYA,KAAAA,GAAW,KAOvB,SAAYC,GAKRA,EAAAA,EAAA,kBAMAA,EAAAA,EAAA,oBAKAA,EAAAA,EAAA,4BAKAA,EAAAA,EAAA,4BAKAA,EAAAA,EAAA,iBACH,CA3BD,CAAYA,KAAAA,GAAY,KCNxB,MAAMK,GAAkBvT,OAAOhE,UAAUwX,eAEzC,SAASC,GAAKC,EAAQC,GACpB,OAAOJ,GAAgBF,KAAKK,EAAQC,EACtC,CAIA,SAASC,GAAQR,GACf,MAAMS,EAAU7O,MAAMhJ,UAAUM,MAAM+W,KAAKvN,UAAW,GActD,OAZA+N,EAAQC,SAAQ,SAAUC,GACxB,GAAKA,EAAL,CAEA,GAAsB,kBAAXA,EACT,MAAM,IAAIxY,UAAUwY,EAAS,kBAG/B/T,OAAOgU,KAAKD,GAAQD,SAAQ,SAAUH,GACpCP,EAAIO,GAAOI,EAAOJ,EACpB,GARsB,CASxB,IAEOP,CACT,CAIA,SAASa,GAAgBC,EAAKC,EAAKC,GACjC,MAAO,GAAG1K,OAAOwK,EAAI5X,MAAM,EAAG6X,GAAMC,EAAaF,EAAI5X,MAAM6X,EAAM,GACnE,CAEA,SAASE,GAAmB7H,GAG1B,QAAIA,GAAK,OAAUA,GAAK,WAEpBA,GAAK,OAAUA,GAAK,SACH,SAAZ,MAAJA,IAA2C,SAAZ,MAAJA,OAE5BA,GAAK,GAAQA,GAAK,KACZ,KAANA,MACAA,GAAK,IAAQA,GAAK,QAClBA,GAAK,KAAQA,GAAK,QAElBA,EAAI,cAEV,CAEA,SAASG,GAAeH,GAEtB,GAAIA,EAAI,MAAQ,CACdA,GAAK,MACL,MAAM8H,EAAa,OAAU9H,GAAK,IAC5B+H,EAAa,OAAc,KAAJ/H,GAE7B,OAAOnR,OAAO2L,aAAasN,EAAYC,EACzC,CACA,OAAOlZ,OAAO2L,aAAawF,EAC7B,CAEA,MAAMgI,GAAkB,6CAClBC,GAAkB,6BAClBC,GAAkB,IAAIC,OAAOH,GAAeT,OAAS,IAAMU,GAAUV,OAAQ,MAE7Ea,GAAyB,sCAE/B,SAASC,GAAsBvJ,EAAO7G,GACpC,GAA2B,KAAvBA,EAAKyC,WAAW,IAAsB0N,GAAuB7P,KAAKN,GAAO,CAC3E,MAAM6D,EAAiC,MAA1B7D,EAAK,GAAG2G,cACjBxD,SAASnD,EAAKnI,MAAM,GAAI,IACxBsL,SAASnD,EAAKnI,MAAM,GAAI,IAE5B,OAAI+X,GAAkB/L,GACbqE,GAAcrE,GAGhBgD,CACT,CAEA,MAAMwJ,EAAU5C,GAAW5G,GAC3B,OAAIwJ,IAAYxJ,EACPwJ,EAGFxJ,CACT,CAQA,SAASyJ,GAAYhG,GACnB,OAAIA,EAAIhG,QAAQ,MAAQ,EAAYgG,EAC7BA,EAAIxH,QAAQiN,GAAgB,KACrC,CAEA,SAASQ,GAAajG,GACpB,OAAIA,EAAIhG,QAAQ,MAAQ,GAAKgG,EAAIhG,QAAQ,KAAO,EAAYgG,EAErDA,EAAIxH,QAAQmN,IAAiB,SAAUpJ,EAAO2J,EAASC,GAC5D,OAAID,GACGJ,GAAqBvJ,EAAO4J,EACrC,GACF,CAEA,MAAMC,GAAsB,SACtBC,GAAyB,UACzBC,GAAoB,CACxB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,UAGP,SAASC,GAAmBvO,GAC1B,OAAOsO,GAAkBtO,EAC3B,CAEA,SAASwO,GAAYxG,GACnB,OAAIoG,GAAoBpQ,KAAKgK,GACpBA,EAAIxH,QAAQ6N,GAAwBE,IAEtCvG,CACT,CAEA,MAAMyG,GAAmB,uBAEzB,SAASC,GAAU1G,GACjB,OAAOA,EAAIxH,QAAQiO,GAAkB,OACvC,CAEA,SAASE,GAASpN,GAChB,OAAQA,GACN,KAAK,EACL,KAAK,GACH,OAAO,EAEX,OAAO,CACT,CAGA,SAASqN,GAAcrN,GACrB,GAAIA,GAAQ,MAAUA,GAAQ,KAAU,OAAO,EAC/C,OAAQA,GACN,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACH,OAAO,EAEX,OAAO,CACT,CAKA,SAASsN,GAAa7O,GACpB,OAAO8O,EAAU9Q,KAAKgC,IAAO8O,EAAU9Q,KAAKgC,EAC9C,CASA,SAAS+O,GAAgB/O,GACvB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,OAAO,EACT,QACE,OAAO,EAEb,CAIA,SAASgP,GAAoBhH,GA+C3B,OA5CAA,EAAMA,EAAI/D,OAAOzD,QAAQ,OAAQ,KAQP,MAAtB,IAAI6D,gBACN2D,EAAMA,EAAIxH,QAAQ,KAAM,MAmCnBwH,EAAI3D,cAAchE,aAC3B,CAMA,MAAM4O,GAAM,CAAEC,MAAK,EAAEJ,QAAOA,GCtRb,SAASK,GAAgB5U,EAAOsO,EAAOuG,GACpD,IAAIC,EAAOC,EAAOC,EAAQC,EAE1B,MAAMzF,EAAMxP,EAAMkV,OACZC,EAASnV,EAAM6S,IAErB7S,EAAM6S,IAAMvE,EAAQ,EACpBwG,EAAQ,EAER,MAAO9U,EAAM6S,IAAMrD,EAAK,CAEtB,GADAwF,EAAShV,EAAM4S,IAAIhN,WAAW5F,EAAM6S,KACrB,KAAXmC,IACFF,IACc,IAAVA,GAAa,CACfC,GAAQ,EACR,KACF,CAKF,GAFAE,EAAUjV,EAAM6S,IAChB7S,EAAMoV,GAAGC,OAAOC,UAAUtV,GACX,KAAXgV,EACF,GAAIC,IAAYjV,EAAM6S,IAAM,EAE1BiC,SACK,GAAID,EAET,OADA7U,EAAM6S,IAAMsC,GACJ,CAGd,CAEA,IAAII,GAAY,EAShB,OAPIR,IACFQ,EAAWvV,EAAM6S,KAInB7S,EAAM6S,IAAMsC,EAELI,CACT,CC3Ce,SAASC,GAAsB/H,EAAKa,EAAOkB,GACxD,IAAIxI,EACA6L,EAAMvE,EAEV,MAAMnI,EAAS,CACbsP,IAAI,EACJ5C,IAAK,EACLpF,IAAK,IAGP,GAA4B,KAAxBA,EAAI7H,WAAWiN,GAAuB,CACxCA,IACA,MAAOA,EAAMrD,EAAK,CAEhB,GADAxI,EAAOyG,EAAI7H,WAAWiN,GACT,KAAT7L,EAA0B,OAAOb,EACrC,GAAa,KAATa,EAAyB,OAAOb,EACpC,GAAa,KAATa,EAIF,OAHAb,EAAO0M,IAAMA,EAAM,EACnB1M,EAAOsH,IAAMiG,GAAYjG,EAAIzS,MAAMsT,EAAQ,EAAGuE,IAC9C1M,EAAOsP,IAAK,EACLtP,EAEI,KAATa,GAAyB6L,EAAM,EAAIrD,EACrCqD,GAAO,EAITA,GACF,CAGA,OAAO1M,CACT,CAIA,IAAI2O,EAAQ,EACZ,MAAOjC,EAAMrD,EAAK,CAGhB,GAFAxI,EAAOyG,EAAI7H,WAAWiN,GAET,KAAT7L,EAAiB,MAGrB,GAAIA,EAAO,IAAiB,MAATA,EAAiB,MAEpC,GAAa,KAATA,GAAyB6L,EAAM,EAAIrD,EAAvC,CACE,GAAgC,KAA5B/B,EAAI7H,WAAWiN,EAAM,GAAe,MACxCA,GAAO,CAET,KAJA,CAMA,GAAa,KAAT7L,IACF8N,IACIA,EAAQ,IAAM,OAAO3O,EAG3B,GAAa,KAATa,EAAuB,CACzB,GAAc,IAAV8N,EAAe,MACnBA,GACF,CAEAjC,GAZA,CAaF,CAEA,OAAIvE,IAAUuE,GACA,IAAViC,IAEJ3O,EAAOsH,IAAMiG,GAAYjG,EAAIzS,MAAMsT,EAAOuE,IAC1C1M,EAAO0M,IAAMA,EACb1M,EAAOsP,IAAK,GALgBtP,CAO9B,CCpEe,SAASuP,GAAgBjI,EAAKa,EAAOkB,EAAKmG,GACvD,IAAI3O,EACA6L,EAAMvE,EAEV,MAAMtO,EAAQ,CAEZyV,IAAI,EAEJG,cAAc,EAEd/C,IAAK,EAELpF,IAAK,GAELuH,OAAQ,GAGV,GAAIW,EAGF3V,EAAMyN,IAAMkI,EAAWlI,IACvBzN,EAAMgV,OAASW,EAAWX,WACrB,CACL,GAAInC,GAAOrD,EAAO,OAAOxP,EAEzB,IAAIgV,EAASvH,EAAI7H,WAAWiN,GAC5B,GAAe,KAAXmC,GAAsC,KAAXA,GAAsC,KAAXA,EAA2B,OAAOhV,EAE5FsO,IACAuE,IAGe,KAAXmC,IAAmBA,EAAS,IAEhChV,EAAMgV,OAASA,CACjB,CAEA,MAAOnC,EAAMrD,EAAK,CAEhB,GADAxI,EAAOyG,EAAI7H,WAAWiN,GAClB7L,IAAShH,EAAMgV,OAIjB,OAHAhV,EAAM6S,IAAMA,EAAM,EAClB7S,EAAMyN,KAAOiG,GAAYjG,EAAIzS,MAAMsT,EAAOuE,IAC1C7S,EAAMyV,IAAK,EACJzV,EACF,GAAa,KAATgH,GAA0C,KAAjBhH,EAAMgV,OACxC,OAAOhV,EACW,KAATgH,GAAyB6L,EAAM,EAAIrD,GAC5CqD,IAGFA,GACF,CAKA,OAFA7S,EAAM4V,cAAe,EACrB5V,EAAMyN,KAAOiG,GAAYjG,EAAIzS,MAAMsT,EAAOuE,IACnC7S,CACT,CCvDA,MAAM6V,GAAgB,CAAC,EAuGvB,SAASC,KA6BP/U,KAAKgV,MAAQzD,GAAO,CAAC,EAAGuD,GAC1B,CAnIAA,GAAcG,YAAc,SAAUC,EAAQC,EAAK1Z,EAAS2Z,EAAKC,GAC/D,MAAMC,EAAQJ,EAAOC,GAErB,MAAQ,QAAUE,EAAIE,YAAYD,GAAS,IACnCpC,GAAWoC,EAAME,SACjB,SACV,EAEAV,GAAcW,WAAa,SAAUP,EAAQC,EAAK1Z,EAAS2Z,EAAKC,GAC9D,MAAMC,EAAQJ,EAAOC,GAErB,MAAQ,OAASE,EAAIE,YAAYD,GAAS,UAClCpC,GAAWgC,EAAOC,GAAKK,SACvB,iBACV,EAEAV,GAAcY,MAAQ,SAAUR,EAAQC,EAAK1Z,EAAS2Z,EAAKC,GACzD,MAAMC,EAAQJ,EAAOC,GACfQ,EAAOL,EAAMK,KAAOhD,GAAY2C,EAAMK,MAAMhN,OAAS,GAC3D,IASIiN,EATAC,EAAW,GACXC,EAAY,GAEhB,GAAIH,EAAM,CACR,MAAM1F,EAAM0F,EAAK/M,MAAM,UACvBiN,EAAW5F,EAAI,GACf6F,EAAY7F,EAAIhW,MAAM,GAAG+P,KAAK,GAChC,CASA,GALE4L,EADEna,EAAQsa,WACIta,EAAQsa,UAAUT,EAAME,QAASK,EAAUC,IAE3C5C,GAAWoC,EAAME,SAGG,IAAhCI,EAAYlP,QAAQ,QACtB,OAAOkP,EAAc,KAMvB,GAAID,EAAM,CACR,MAAM9Z,EAAIyZ,EAAMU,UAAU,SACpBC,EAAWX,EAAMY,MAAQZ,EAAMY,MAAMjc,QAAU,GAEjD4B,EAAI,EACNoa,EAASrR,KAAK,CAAC,QAASnJ,EAAQ0a,WAAaN,KAE7CI,EAASpa,GAAKoa,EAASpa,GAAG5B,QAC1Bgc,EAASpa,GAAG,IAAM,IAAMJ,EAAQ0a,WAAaN,GAI/C,MAAMO,EAAW,CACfF,MAAOD,GAGT,MAAO,aAAaZ,EAAIE,YAAYa,MAAaR,kBACnD,CAEA,MAAO,aAAaP,EAAIE,YAAYD,MAAUM,kBAChD,EAEAd,GAAcuB,MAAQ,SAAUnB,EAAQC,EAAK1Z,EAAS2Z,EAAKC,GACzD,MAAMC,EAAQJ,EAAOC,GAUrB,OAHAG,EAAMY,MAAMZ,EAAMU,UAAU,QAAQ,GAClCX,EAAIiB,mBAAmBhB,EAAMiB,SAAU9a,EAAS2Z,GAE3CC,EAAImB,YAAYtB,EAAQC,EAAK1Z,EACtC,EAEAqZ,GAAc2B,UAAY,SAAUvB,EAAQC,EAAK1Z,GAC/C,OAAOA,EAAQib,SAAW,WAAa,QACzC,EACA5B,GAAc6B,UAAY,SAAUzB,EAAQC,EAAK1Z,GAC/C,OAAOA,EAAQmb,OAAUnb,EAAQib,SAAW,WAAa,SAAY,IACvE,EAEA5B,GAAc+B,KAAO,SAAU3B,EAAQC,GACrC,OAAOjC,GAAWgC,EAAOC,GAAKK,QAChC,EAEAV,GAAcgC,WAAa,SAAU5B,EAAQC,GAC3C,OAAOD,EAAOC,GAAKK,OACrB,EACAV,GAAciC,YAAc,SAAU7B,EAAQC,GAC5C,OAAOD,EAAOC,GAAKK,OACrB,EA4CAT,GAASpb,UAAU4b,YAAc,SAAsBD,GACrD,IAAIzZ,EAAGwJ,EAAGD,EAEV,IAAKkQ,EAAMY,MAAS,MAAO,GAI3B,IAFA9Q,EAAS,GAEJvJ,EAAI,EAAGwJ,EAAIiQ,EAAMY,MAAMtU,OAAQ/F,EAAIwJ,EAAGxJ,IACzCuJ,GAAU,IAAM8N,GAAWoC,EAAMY,MAAMra,GAAG,IAAM,KAAOqX,GAAWoC,EAAMY,MAAMra,GAAG,IAAM,IAGzF,OAAOuJ,CACT,EAWA2P,GAASpb,UAAU6c,YAAc,SAAsBtB,EAAQC,EAAK1Z,GAClE,MAAM6Z,EAAQJ,EAAOC,GACrB,IAAI/P,EAAS,GAGb,GAAIkQ,EAAM0B,OACR,MAAO,GAUL1B,EAAM2B,QAA4B,IAAnB3B,EAAM4B,SAAkB/B,GAAOD,EAAOC,EAAM,GAAG6B,SAChE5R,GAAU,MAIZA,KAA8B,IAAnBkQ,EAAM4B,QAAiB,KAAO,KAAO5B,EAAM6B,IAGtD/R,GAAUpF,KAAKuV,YAAYD,GAGL,IAAlBA,EAAM4B,SAAiBzb,EAAQib,WACjCtR,GAAU,MAIZ,IAAIgS,GAAS,EACb,GAAI9B,EAAM2B,QACRG,GAAS,EAEa,IAAlB9B,EAAM4B,SACJ/B,EAAM,EAAID,EAAOtT,QAAQ,CAC3B,MAAMyV,EAAYnC,EAAOC,EAAM,IAER,WAAnBkC,EAAUC,MAAqBD,EAAUL,SAIX,IAAvBK,EAAUH,SAAkBG,EAAUF,MAAQ7B,EAAM6B,OAD7DC,GAAS,EAMb,CAMJ,OAFAhS,GAAUgS,EAAS,MAAQ,IAEpBhS,CACT,EAUA2P,GAASpb,UAAU4d,aAAe,SAAUrC,EAAQzZ,EAAS2Z,GAC3D,IAAIhQ,EAAS,GACb,MAAM4P,EAAQhV,KAAKgV,MAEnB,IAAK,IAAInZ,EAAI,EAAG0E,EAAM2U,EAAOtT,OAAQ/F,EAAI0E,EAAK1E,IAAK,CACjD,MAAMyb,EAAOpC,EAAOrZ,GAAGyb,KAEI,qBAAhBtC,EAAMsC,GACflS,GAAU4P,EAAMsC,GAAMpC,EAAQrZ,EAAGJ,EAAS2Z,EAAKpV,MAE/CoF,GAAUpF,KAAKwW,YAAYtB,EAAQrZ,EAAGJ,EAE1C,CAEA,OAAO2J,CACT,EAYA2P,GAASpb,UAAU2c,mBAAqB,SAAUpB,EAAQzZ,EAAS2Z,GACjE,IAAIhQ,EAAS,GAEb,IAAK,IAAIvJ,EAAI,EAAG0E,EAAM2U,EAAOtT,OAAQ/F,EAAI0E,EAAK1E,IAC5C,OAAQqZ,EAAOrZ,GAAGyb,MAChB,IAAK,OACHlS,GAAU8P,EAAOrZ,GAAG2Z,QACpB,MACF,IAAK,QACHpQ,GAAUpF,KAAKsW,mBAAmBpB,EAAOrZ,GAAG0a,SAAU9a,EAAS2Z,GAC/D,MACF,IAAK,cACL,IAAK,aACHhQ,GAAU8P,EAAOrZ,GAAG2Z,QACpB,MACF,IAAK,YACL,IAAK,YACHpQ,GAAU,KACV,MACF,SAKJ,OAAOA,CACT,EAWA2P,GAASpb,UAAU6d,OAAS,SAAUtC,EAAQzZ,EAAS2Z,GACrD,IAAIhQ,EAAS,GACb,MAAM4P,EAAQhV,KAAKgV,MAEnB,IAAK,IAAInZ,EAAI,EAAG0E,EAAM2U,EAAOtT,OAAQ/F,EAAI0E,EAAK1E,IAAK,CACjD,MAAMyb,EAAOpC,EAAOrZ,GAAGyb,KAEV,WAATA,EACFlS,GAAUpF,KAAKuX,aAAarC,EAAOrZ,GAAG0a,SAAU9a,EAAS2Z,GACzB,qBAAhBJ,EAAMsC,GACtBlS,GAAU4P,EAAMsC,GAAMpC,EAAQrZ,EAAGJ,EAAS2Z,EAAKpV,MAE/CoF,GAAUpF,KAAKwW,YAAYtB,EAAQrZ,EAAGJ,EAAS2Z,EAEnD,CAEA,OAAOhQ,CACT,EAEA,UC5SA,SAASqS,KAUPzX,KAAK0X,UAAY,GAOjB1X,KAAK2X,UAAY,IACnB,CAMAF,GAAM9d,UAAUie,SAAW,SAAUxV,GACnC,IAAK,IAAIvG,EAAI,EAAGA,EAAImE,KAAK0X,UAAU9V,OAAQ/F,IACzC,GAAImE,KAAK0X,UAAU7b,GAAGuG,OAASA,EAC7B,OAAOvG,EAGX,OAAQ,CACV,EAIA4b,GAAM9d,UAAUke,YAAc,WAC5B,MAAMC,EAAO9X,KACP+X,EAAS,CAAC,IAGhBD,EAAKJ,UAAUjG,SAAQ,SAAUuG,GAC1BA,EAAKC,SAEVD,EAAKE,IAAIzG,SAAQ,SAAU0G,GACrBJ,EAAOrR,QAAQyR,GAAW,GAC5BJ,EAAOnT,KAAKuT,EAEhB,GACF,IAEAL,EAAKH,UAAY,CAAC,EAElBI,EAAOtG,SAAQ,SAAU2G,GACvBN,EAAKH,UAAUS,GAAS,GACxBN,EAAKJ,UAAUjG,SAAQ,SAAUuG,GAC1BA,EAAKC,UAENG,GAASJ,EAAKE,IAAIxR,QAAQ0R,GAAS,GAEvCN,EAAKH,UAAUS,GAAOxT,KAAKoT,EAAKK,IAClC,GACF,GACF,EA2BAZ,GAAM9d,UAAU2e,GAAK,SAAUlW,EAAMiW,EAAI5c,GACvC,MAAM4E,EAAQL,KAAK4X,SAASxV,GACtBmW,EAAM9c,GAAW,CAAC,EAExB,IAAe,IAAX4E,EAAgB,MAAM,IAAImY,MAAM,0BAA4BpW,GAEhEpC,KAAK0X,UAAUrX,GAAOgY,GAAKA,EAC3BrY,KAAK0X,UAAUrX,GAAO6X,IAAMK,EAAIL,KAAO,GACvClY,KAAK2X,UAAY,IACnB,EA0BAF,GAAM9d,UAAU8e,OAAS,SAAUC,EAAYC,EAAUN,EAAI5c,GAC3D,MAAM4E,EAAQL,KAAK4X,SAASc,GACtBH,EAAM9c,GAAW,CAAC,EAExB,IAAe,IAAX4E,EAAgB,MAAM,IAAImY,MAAM,0BAA4BE,GAEhE1Y,KAAK0X,UAAUkB,OAAOvY,EAAO,EAAG,CAC9B+B,KAAMuW,EACNV,SAAS,EACTI,KACAH,IAAKK,EAAIL,KAAO,KAGlBlY,KAAK2X,UAAY,IACnB,EA0BAF,GAAM9d,UAAUkf,MAAQ,SAAUC,EAAWH,EAAUN,EAAI5c,GACzD,MAAM4E,EAAQL,KAAK4X,SAASkB,GACtBP,EAAM9c,GAAW,CAAC,EAExB,IAAe,IAAX4E,EAAgB,MAAM,IAAImY,MAAM,0BAA4BM,GAEhE9Y,KAAK0X,UAAUkB,OAAOvY,EAAQ,EAAG,EAAG,CAClC+B,KAAMuW,EACNV,SAAS,EACTI,KACAH,IAAKK,EAAIL,KAAO,KAGlBlY,KAAK2X,UAAY,IACnB,EAyBAF,GAAM9d,UAAUiL,KAAO,SAAU+T,EAAUN,EAAI5c,GAC7C,MAAM8c,EAAM9c,GAAW,CAAC,EAExBuE,KAAK0X,UAAU9S,KAAK,CAClBxC,KAAMuW,EACNV,SAAS,EACTI,KACAH,IAAKK,EAAIL,KAAO,KAGlBlY,KAAK2X,UAAY,IACnB,EAcAF,GAAM9d,UAAUof,OAAS,SAAUC,EAAMC,GAClCtW,MAAMuW,QAAQF,KAASA,EAAO,CAACA,IAEpC,MAAM5T,EAAS,GAef,OAZA4T,EAAKvH,SAAQ,SAAUrP,GACrB,MAAM+S,EAAMnV,KAAK4X,SAASxV,GAE1B,GAAI+S,EAAM,EAAG,CACX,GAAI8D,EAAiB,OACrB,MAAM,IAAIT,MAAM,oCAAsCpW,EACxD,CACApC,KAAK0X,UAAUvC,GAAK8C,SAAU,EAC9B7S,EAAOR,KAAKxC,EACd,GAAGpC,MAEHA,KAAK2X,UAAY,KACVvS,CACT,EAYAqS,GAAM9d,UAAUwf,WAAa,SAAUH,EAAMC,GACtCtW,MAAMuW,QAAQF,KAASA,EAAO,CAACA,IAEpChZ,KAAK0X,UAAUjG,SAAQ,SAAUuG,GAAQA,EAAKC,SAAU,CAAM,IAE9DjY,KAAK+Y,OAAOC,EAAMC,EACpB,EAcAxB,GAAM9d,UAAUyf,QAAU,SAAUJ,EAAMC,GACnCtW,MAAMuW,QAAQF,KAASA,EAAO,CAACA,IAEpC,MAAM5T,EAAS,GAef,OAZA4T,EAAKvH,SAAQ,SAAUrP,GACrB,MAAM+S,EAAMnV,KAAK4X,SAASxV,GAE1B,GAAI+S,EAAM,EAAG,CACX,GAAI8D,EAAiB,OACrB,MAAM,IAAIT,MAAM,oCAAsCpW,EACxD,CACApC,KAAK0X,UAAUvC,GAAK8C,SAAU,EAC9B7S,EAAOR,KAAKxC,EACd,GAAGpC,MAEHA,KAAK2X,UAAY,KACVvS,CACT,EAWAqS,GAAM9d,UAAU0f,SAAW,SAAUC,GAMnC,OALuB,OAAnBtZ,KAAK2X,WACP3X,KAAK6X,cAIA7X,KAAK2X,UAAU2B,IAAc,EACtC,EAEA,UCxUA,SAASC,GAAOjC,EAAMH,EAAKD,GAMzBlX,KAAKsX,KAAWA,EAOhBtX,KAAKmX,IAAWA,EAOhBnX,KAAKkW,MAAW,KAOhBlW,KAAKkK,IAAW,KAWhBlK,KAAKkX,QAAWA,EAOhBlX,KAAK+T,MAAW,EAOhB/T,KAAKuW,SAAW,KAQhBvW,KAAKwV,QAAW,GAOhBxV,KAAKwZ,OAAW,GAWhBxZ,KAAK2V,KAAW,GAOhB3V,KAAKyZ,KAAW,KAQhBzZ,KAAKiX,OAAW,EAQhBjX,KAAKgX,QAAW,CAClB,CAOAuC,GAAM5f,UAAUqc,UAAY,SAAoB5T,GAC9C,IAAKpC,KAAKkW,MAAS,OAAQ,EAE3B,MAAMA,EAAQlW,KAAKkW,MAEnB,IAAK,IAAIra,EAAI,EAAG0E,EAAM2V,EAAMtU,OAAQ/F,EAAI0E,EAAK1E,IAC3C,GAAIqa,EAAMra,GAAG,KAAOuG,EAAQ,OAAOvG,EAErC,OAAQ,CACV,EAOA0d,GAAM5f,UAAU+f,SAAW,SAAmBC,GACxC3Z,KAAKkW,MACPlW,KAAKkW,MAAMtR,KAAK+U,GAEhB3Z,KAAKkW,MAAQ,CAACyD,EAElB,EAOAJ,GAAM5f,UAAUigB,QAAU,SAAkBxX,EAAM9B,GAChD,MAAM6U,EAAMnV,KAAKgW,UAAU5T,GACrBuX,EAAW,CAACvX,EAAM9B,GAEpB6U,EAAM,EACRnV,KAAK0Z,SAASC,GAEd3Z,KAAKkW,MAAMf,GAAOwE,CAEtB,EAOAJ,GAAM5f,UAAUkgB,QAAU,SAAkBzX,GAC1C,MAAM+S,EAAMnV,KAAKgW,UAAU5T,GAC3B,IAAI9B,EAAQ,KAIZ,OAHI6U,GAAO,IACT7U,EAAQN,KAAKkW,MAAMf,GAAK,IAEnB7U,CACT,EAQAiZ,GAAM5f,UAAUmgB,SAAW,SAAmB1X,EAAM9B,GAClD,MAAM6U,EAAMnV,KAAKgW,UAAU5T,GAEvB+S,EAAM,EACRnV,KAAK0Z,SAAS,CAACtX,EAAM9B,IAErBN,KAAKkW,MAAMf,GAAK,GAAKnV,KAAKkW,MAAMf,GAAK,GAAK,IAAM7U,CAEpD,EAEA,UCzLA,SAASyZ,GAAWlI,EAAKwC,EAAIe,GAC3BpV,KAAK6R,IAAMA,EACX7R,KAAKoV,IAAMA,EACXpV,KAAKkV,OAAS,GACdlV,KAAKga,YAAa,EAClBha,KAAKqU,GAAKA,CACZ,CAGA0F,GAAUpgB,UAAU4f,MAAQA,GAE5B,UCbA,MAAMU,GAAe,YACfC,GAAe,MAEN,SAASC,GAAWlb,GACjC,IAAIyN,EAGJA,EAAMzN,EAAM4S,IAAI3M,QAAQ+U,GAAa,MAGrCvN,EAAMA,EAAIxH,QAAQgV,GAAS,KAE3Bjb,EAAM4S,IAAMnF,CACd,CChBe,SAASuK,GAAOhY,GAC7B,IAAIqW,EAEArW,EAAM+a,YACR1E,EAAiB,IAAIrW,EAAMsa,MAAM,SAAU,GAAI,GAC/CjE,EAAME,QAAWvW,EAAM4S,IACvByD,EAAMpL,IAAW,CAAC,EAAG,GACrBoL,EAAMiB,SAAW,GACjBtX,EAAMiW,OAAOtQ,KAAK0Q,IAElBrW,EAAMoV,GAAG4C,MAAM1O,MAAMtJ,EAAM4S,IAAK5S,EAAMoV,GAAIpV,EAAMmW,IAAKnW,EAAMiW,OAE/D,CCZe,SAASZ,GAAQrV,GAC9B,MAAMiW,EAASjW,EAAMiW,OAGrB,IAAK,IAAIrZ,EAAI,EAAGwJ,EAAI6P,EAAOtT,OAAQ/F,EAAIwJ,EAAGxJ,IAAK,CAC7C,MAAMue,EAAMlF,EAAOrZ,GACF,WAAbue,EAAI9C,MACNrY,EAAMoV,GAAGC,OAAO/L,MAAM6R,EAAI5E,QAASvW,EAAMoV,GAAIpV,EAAMmW,IAAKgF,EAAI7D,SAEhE,CACF,CCHA,SAAS8D,GAAY3N,GACnB,MAAO,YAAYhK,KAAKgK,EAC1B,CACA,SAAS4N,GAAa5N,GACpB,MAAO,aAAahK,KAAKgK,EAC3B,CAEe,SAAS6N,GAAStb,GAC/B,MAAMub,EAAcvb,EAAMiW,OAE1B,GAAKjW,EAAMoV,GAAG5Y,QAAQ8e,QAEtB,IAAK,IAAI5Q,EAAI,EAAGtE,EAAImV,EAAY5Y,OAAQ+H,EAAItE,EAAGsE,IAAK,CAClD,GAA4B,WAAxB6Q,EAAY7Q,GAAG2N,OACdrY,EAAMoV,GAAGkG,QAAQE,QAAQD,EAAY7Q,GAAG6L,SAC3C,SAGF,IAAIN,EAASsF,EAAY7Q,GAAG4M,SAExBmE,EAAgB,EAIpB,IAAK,IAAI7e,EAAIqZ,EAAOtT,OAAS,EAAG/F,GAAK,EAAGA,IAAK,CAC3C,MAAM8e,EAAezF,EAAOrZ,GAG5B,GAA0B,eAAtB8e,EAAarD,MAiBjB,GAR0B,gBAAtBqD,EAAarD,OACX+C,GAAWM,EAAanF,UAAYkF,EAAgB,GACtDA,IAEEJ,GAAYK,EAAanF,UAC3BkF,OAGAA,EAAgB,IAEM,SAAtBC,EAAarD,MAAmBrY,EAAMoV,GAAGkG,QAAQ7X,KAAKiY,EAAanF,SAAU,CAC/E,MAAMqB,EAAO8D,EAAanF,QAC1B,IAAIoF,EAAQ3b,EAAMoV,GAAGkG,QAAQtR,MAAM4N,GAGnC,MAAMgE,EAAQ,GACd,IAAI9G,EAAQ4G,EAAa5G,MACrB+G,EAAU,EAKVF,EAAMhZ,OAAS,GACI,IAAnBgZ,EAAM,GAAGva,OACTxE,EAAI,GACmB,iBAAvBqZ,EAAOrZ,EAAI,GAAGyb,OAChBsD,EAAQA,EAAM3gB,MAAM,IAGtB,IAAK,IAAI8gB,EAAK,EAAGA,EAAKH,EAAMhZ,OAAQmZ,IAAM,CACxC,MAAM1U,EAAMuU,EAAMG,GAAI1U,IAChB2U,EAAU/b,EAAMoV,GAAG4G,cAAc5U,GACvC,IAAKpH,EAAMoV,GAAG6G,aAAaF,GAAY,SAEvC,IAAIG,EAAUP,EAAMG,GAAIlE,KAWtBsE,EALGP,EAAMG,GAAIK,OAEiB,YAArBR,EAAMG,GAAIK,QAAyB,YAAY1Y,KAAKyY,GAGnDlc,EAAMoV,GAAGgH,kBAAkBF,GAF3Blc,EAAMoV,GAAGgH,kBAAkB,UAAYF,GAASjW,QAAQ,WAAY,IAFpEjG,EAAMoV,GAAGgH,kBAAkB,UAAYF,GAASjW,QAAQ,aAAc,IAOlF,MAAM4M,EAAM8I,EAAMG,GAAI1a,MAEtB,GAAIyR,EAAMgJ,EAAS,CACjB,MAAMxF,EAAU,IAAIrW,EAAMsa,MAAM,OAAQ,GAAI,GAC5CjE,EAAME,QAAUqB,EAAK5c,MAAM6gB,EAAShJ,GACpCwD,EAAMvB,MAAUA,EAChB8G,EAAMjW,KAAK0Q,EACb,CAEA,MAAMgG,EAAY,IAAIrc,EAAMsa,MAAM,YAAa,IAAK,GACpD+B,EAAQpF,MAAU,CAAC,CAAC,OAAQ8E,IAC5BM,EAAQvH,MAAUA,IAClBuH,EAAQ9B,OAAU,UAClB8B,EAAQ3F,KAAU,OAClBkF,EAAMjW,KAAK0W,GAEX,MAAMC,EAAY,IAAItc,EAAMsa,MAAM,OAAQ,GAAI,GAC9CgC,EAAQ/F,QAAU2F,EAClBI,EAAQxH,MAAUA,EAClB8G,EAAMjW,KAAK2W,GAEX,MAAMC,EAAY,IAAIvc,EAAMsa,MAAM,aAAc,KAAM,GACtDiC,EAAQzH,QAAYA,EACpByH,EAAQhC,OAAU,UAClBgC,EAAQ7F,KAAU,OAClBkF,EAAMjW,KAAK4W,GAEXV,EAAUF,EAAMG,GAAI/L,SACtB,CACA,GAAI8L,EAAUjE,EAAKjV,OAAQ,CACzB,MAAM0T,EAAU,IAAIrW,EAAMsa,MAAM,OAAQ,GAAI,GAC5CjE,EAAME,QAAUqB,EAAK5c,MAAM6gB,GAC3BxF,EAAMvB,MAAUA,EAChB8G,EAAMjW,KAAK0Q,EACb,CAGAkF,EAAY7Q,GAAG4M,SAAWrB,EAAStD,GAAesD,EAAQrZ,EAAGgf,EAC/D,MA/FA,CACEhf,IACA,MAAOqZ,EAAOrZ,GAAGkY,QAAU4G,EAAa5G,OAA4B,cAAnBmB,EAAOrZ,GAAGyb,KACzDzb,GAGJ,CA0FF,CACF,CACF,CCtHA,MAAM4f,GAAU,+BAIVC,GAAsB,gBAEtBC,GAAiB,iBACjBC,GAAc,CAClBzR,EAAG,IACH0R,EAAG,IACHC,GAAI,KAGN,SAASC,GAAW9S,EAAO7G,GACzB,OAAOwZ,GAAYxZ,EAAK2G,cAC1B,CAEA,SAASiT,GAAgBC,GACvB,IAAIC,EAAkB,EAEtB,IAAK,IAAIrgB,EAAIogB,EAAara,OAAS,EAAG/F,GAAK,EAAGA,IAAK,CACjD,MAAMyZ,EAAQ2G,EAAapgB,GAER,SAAfyZ,EAAMgC,MAAoB4E,IAC5B5G,EAAME,QAAUF,EAAME,QAAQtQ,QAAQyW,GAAgBI,KAGrC,cAAfzG,EAAMgC,MAAuC,SAAfhC,EAAMK,MACtCuG,IAGiB,eAAf5G,EAAMgC,MAAwC,SAAfhC,EAAMK,MACvCuG,GAEJ,CACF,CAEA,SAASC,GAAcF,GACrB,IAAIC,EAAkB,EAEtB,IAAK,IAAIrgB,EAAIogB,EAAara,OAAS,EAAG/F,GAAK,EAAGA,IAAK,CACjD,MAAMyZ,EAAQ2G,EAAapgB,GAER,SAAfyZ,EAAMgC,MAAoB4E,GACxBT,GAAQ/Y,KAAK4S,EAAME,WACrBF,EAAME,QAAUF,EAAME,QACnBtQ,QAAQ,OAAQ,KAGhBA,QAAQ,UAAW,KAAKA,QAAQ,WAAY,QAC5CA,QAAQ,cAAe,UAAUA,QAAQ,SAAU,KAEnDA,QAAQ,0BAA2B,OAEnCA,QAAQ,qBAAsB,OAC9BA,QAAQ,6BAA8B,QAI1B,cAAfoQ,EAAMgC,MAAuC,SAAfhC,EAAMK,MACtCuG,IAGiB,eAAf5G,EAAMgC,MAAwC,SAAfhC,EAAMK,MACvCuG,GAEJ,CACF,CAEe,SAAShX,GAASjG,GAC/B,IAAImd,EAEJ,GAAKnd,EAAMoV,GAAG5Y,QAAQ4gB,YAEtB,IAAKD,EAASnd,EAAMiW,OAAOtT,OAAS,EAAGwa,GAAU,EAAGA,IAChB,WAA9Bnd,EAAMiW,OAAOkH,GAAQ9E,OAErBoE,GAAoBhZ,KAAKzD,EAAMiW,OAAOkH,GAAQ5G,UAChDwG,GAAe/c,EAAMiW,OAAOkH,GAAQ7F,UAGlCkF,GAAQ/Y,KAAKzD,EAAMiW,OAAOkH,GAAQ5G,UACpC2G,GAAald,EAAMiW,OAAOkH,GAAQ7F,UAGxC,CC/FA,MAAM+F,GAAgB,OAChBC,GAAW,QACXC,GAAa,IAEnB,SAASC,GAAW/P,EAAKrM,EAAOqE,GAC9B,OAAOgI,EAAIzS,MAAM,EAAGoG,GAASqE,EAAKgI,EAAIzS,MAAMoG,EAAQ,EACtD,CAEA,SAASqc,GAAiBxH,EAAQjW,GAChC,IAAI0K,EAEJ,MAAMgT,EAAQ,GAEd,IAAK,IAAI9gB,EAAI,EAAGA,EAAIqZ,EAAOtT,OAAQ/F,IAAK,CACtC,MAAMyZ,EAAQJ,EAAOrZ,GAEf+gB,EAAY1H,EAAOrZ,GAAGkY,MAE5B,IAAKpK,EAAIgT,EAAM/a,OAAS,EAAG+H,GAAK,EAAGA,IACjC,GAAIgT,EAAMhT,GAAGoK,OAAS6I,EAAa,MAIrC,GAFAD,EAAM/a,OAAS+H,EAAI,EAEA,SAAf2L,EAAMgC,KAAmB,SAE7B,IAAIT,EAAOvB,EAAME,QACb1D,EAAM,EACNrD,EAAMoI,EAAKjV,OAGfib,EACA,MAAO/K,EAAMrD,EAAK,CAChB8N,GAASvN,UAAY8C,EACrB,MAAMgL,EAAIP,GAASzT,KAAK+N,GACxB,IAAKiG,EAAK,MAEV,IAAIC,GAAU,EACVC,GAAW,EACflL,EAAMgL,EAAEzc,MAAQ,EAChB,MAAM4c,EAAqB,MAATH,EAAE,GAKpB,IAAII,EAAW,GAEf,GAAIJ,EAAEzc,MAAQ,GAAK,EACjB6c,EAAWrG,EAAKhS,WAAWiY,EAAEzc,MAAQ,QAErC,IAAKsJ,EAAI9N,EAAI,EAAG8N,GAAK,EAAGA,IAAK,CAC3B,GAAuB,cAAnBuL,EAAOvL,GAAG2N,MAA2C,cAAnBpC,EAAOvL,GAAG2N,KAAsB,MACtE,GAAKpC,EAAOvL,GAAG6L,QAAf,CAEA0H,EAAWhI,EAAOvL,GAAG6L,QAAQ3Q,WAAWqQ,EAAOvL,GAAG6L,QAAQ5T,OAAS,GACnE,KAHgC,CAIlC,CAMF,IAAIub,EAAW,GAEf,GAAIrL,EAAMrD,EACR0O,EAAWtG,EAAKhS,WAAWiN,QAE3B,IAAKnI,EAAI9N,EAAI,EAAG8N,EAAIuL,EAAOtT,OAAQ+H,IAAK,CACtC,GAAuB,cAAnBuL,EAAOvL,GAAG2N,MAA2C,cAAnBpC,EAAOvL,GAAG2N,KAAsB,MACtE,GAAKpC,EAAOvL,GAAG6L,QAAf,CAEA2H,EAAWjI,EAAOvL,GAAG6L,QAAQ3Q,WAAW,GACxC,KAHgC,CAIlC,CAGF,MAAMuY,EAAkB3J,GAAeyJ,IAAa3J,GAAYva,OAAO2L,aAAauY,IAC9EG,EAAkB5J,GAAe0J,IAAa5J,GAAYva,OAAO2L,aAAawY,IAE9EG,EAAmBhK,GAAa4J,GAChCK,EAAmBjK,GAAa6J,GAqCtC,GAnCII,EACFR,GAAU,EACDM,IACHC,GAAoBF,IACxBL,GAAU,IAIVO,EACFN,GAAW,EACFI,IACHG,GAAoBF,IACxBL,GAAW,IAIE,KAAbG,GAAsC,MAATL,EAAE,IAC7BI,GAAY,IAAgBA,GAAY,KAE1CF,EAAWD,GAAU,GAIrBA,GAAWC,IAQbD,EAAUK,EACVJ,EAAWK,GAGRN,GAAYC,EAAjB,CAQA,GAAIA,EAEF,IAAKrT,EAAIgT,EAAM/a,OAAS,EAAG+H,GAAK,EAAGA,IAAK,CACtC,IAAI6T,EAAOb,EAAMhT,GACjB,GAAIgT,EAAMhT,GAAGoK,MAAQ6I,EAAa,MAClC,GAAIY,EAAKC,SAAWR,GAAYN,EAAMhT,GAAGoK,QAAU6I,EAAW,CAG5D,IAAIc,EACAC,EAHJH,EAAOb,EAAMhT,GAITsT,GACFS,EAAYze,EAAMoV,GAAG5Y,QAAQmiB,OAAO,GACpCD,EAAa1e,EAAMoV,GAAG5Y,QAAQmiB,OAAO,KAErCF,EAAYze,EAAMoV,GAAG5Y,QAAQmiB,OAAO,GACpCD,EAAa1e,EAAMoV,GAAG5Y,QAAQmiB,OAAO,IAMvCtI,EAAME,QAAUiH,GAAUnH,EAAME,QAASsH,EAAEzc,MAAOsd,GAClDzI,EAAOsI,EAAKlI,OAAOE,QAAUiH,GAC3BvH,EAAOsI,EAAKlI,OAAOE,QAASgI,EAAK1L,IAAK4L,GAExC5L,GAAO6L,EAAW/b,OAAS,EACvB4b,EAAKlI,QAAUzZ,IAAKiW,GAAO4L,EAAU9b,OAAS,GAElDiV,EAAOvB,EAAME,QACb/G,EAAMoI,EAAKjV,OAEX+a,EAAM/a,OAAS+H,EACf,SAASkT,CACX,CACF,CAGEE,EACFJ,EAAM/X,KAAK,CACT0Q,MAAOzZ,EACPiW,IAAKgL,EAAEzc,MACPod,OAAQR,EACRlJ,MAAO6I,IAEAI,GAAYC,IACrB3H,EAAME,QAAUiH,GAAUnH,EAAME,QAASsH,EAAEzc,MAAOmc,IA/CpD,MAJMS,IACF3H,EAAME,QAAUiH,GAAUnH,EAAME,QAASsH,EAAEzc,MAAOmc,IAoDxD,CACF,CACF,CAEe,SAASqB,GAAa5e,GAEnC,GAAKA,EAAMoV,GAAG5Y,QAAQ4gB,YAEtB,IAAK,IAAID,EAASnd,EAAMiW,OAAOtT,OAAS,EAAGwa,GAAU,EAAGA,IACpB,WAA9Bnd,EAAMiW,OAAOkH,GAAQ9E,MACpBgF,GAAc5Z,KAAKzD,EAAMiW,OAAOkH,GAAQ5G,UAI7CkH,GAAgBzd,EAAMiW,OAAOkH,GAAQ7F,SAAUtX,EAEnD,CCxLe,SAAS6e,GAAW7e,GACjC,IAAI8e,EAAMC,EACV,MAAMxD,EAAcvb,EAAMiW,OACpB7P,EAAImV,EAAY5Y,OAEtB,IAAK,IAAI+H,EAAI,EAAGA,EAAItE,EAAGsE,IAAK,CAC1B,GAA4B,WAAxB6Q,EAAY7Q,GAAG2N,KAAmB,SAEtC,MAAMpC,EAASsF,EAAY7Q,GAAG4M,SACxB9H,EAAMyG,EAAOtT,OAEnB,IAAKmc,EAAO,EAAGA,EAAOtP,EAAKsP,IACC,iBAAtB7I,EAAO6I,GAAMzG,OACfpC,EAAO6I,GAAMzG,KAAO,QAIxB,IAAKyG,EAAOC,EAAO,EAAGD,EAAOtP,EAAKsP,IACN,SAAtB7I,EAAO6I,GAAMzG,MACbyG,EAAO,EAAItP,GACe,SAA1ByG,EAAO6I,EAAO,GAAGzG,KAEnBpC,EAAO6I,EAAO,GAAGvI,QAAUN,EAAO6I,GAAMvI,QAAUN,EAAO6I,EAAO,GAAGvI,SAE/DuI,IAASC,IAAQ9I,EAAO8I,GAAQ9I,EAAO6I,IAE3CC,KAIAD,IAASC,IACX9I,EAAOtT,OAASoc,EAEpB,CACF,CCxBA,MAAMC,GAAS,CACb,CAAC,YAAkBC,IACnB,CAAC,QAAkBC,IACnB,CAAC,SAAkBC,IACnB,CAAC,UAAkBC,IACnB,CAAC,eAAkBC,IACnB,CAAC,cAAkBC,IAGnB,CAAC,YAAkBC,KAMrB,SAASC,KAMPze,KAAK0e,MAAQ,IAAIjH,GAEjB,IAAK,IAAI5b,EAAI,EAAGA,EAAIoiB,GAAOrc,OAAQ/F,IACjCmE,KAAK0e,MAAM9Z,KAAKqZ,GAAOpiB,GAAG,GAAIoiB,GAAOpiB,GAAG,GAE5C,CAOA4iB,GAAK9kB,UAAUqI,QAAU,SAAU/C,GACjC,MAAM+V,EAAQhV,KAAK0e,MAAMrF,SAAS,IAElC,IAAK,IAAIxd,EAAI,EAAGwJ,EAAI2P,EAAMpT,OAAQ/F,EAAIwJ,EAAGxJ,IACvCmZ,EAAMnZ,GAAGoD,EAEb,EAEAwf,GAAK9kB,UAAUglB,MAAQ5E,GAEvB,UCxDA,SAAS6E,GAAY/M,EAAKwC,EAAIe,EAAKF,GACjClV,KAAK6R,IAAMA,EAGX7R,KAAKqU,GAASA,EAEdrU,KAAKoV,IAAMA,EAMXpV,KAAKkV,OAASA,EAEdlV,KAAK6e,OAAS,GACd7e,KAAK8e,OAAS,GACd9e,KAAK+e,OAAS,GACd/e,KAAKgf,OAAS,GAYdhf,KAAKif,QAAU,GAMfjf,KAAKkf,UAAa,EAClBlf,KAAKmf,KAAa,EAClBnf,KAAKof,QAAa,EAClBpf,KAAKqf,OAAa,EAClBrf,KAAKsf,UAAc,EACnBtf,KAAKuf,YAAc,EAInBvf,KAAKwf,WAAa,OAElBxf,KAAK+T,MAAQ,EAIb,MAAM0L,EAAIzf,KAAK6R,IAEf,IAAK,IAAItE,EAAQ,EAAGuE,EAAM,EAAG4N,EAAS,EAAG/S,EAAS,EAAGpM,EAAMkf,EAAE7d,OAAQ+d,GAAe,EAAO7N,EAAMvR,EAAKuR,IAAO,CAC3G,MAAMpN,EAAK+a,EAAE5a,WAAWiN,GAExB,IAAK6N,EAAc,CACjB,GAAItM,GAAQ3O,GAAK,CACfgb,IAEW,IAAPhb,EACFiI,GAAU,EAAIA,EAAS,EAEvBA,IAEF,QACF,CACEgT,GAAe,CAEnB,CAEW,KAAPjb,GAAeoN,IAAQvR,EAAM,IACpB,KAAPmE,GAAeoN,IACnB9R,KAAK6e,OAAOja,KAAK2I,GACjBvN,KAAK8e,OAAOla,KAAKkN,GACjB9R,KAAK+e,OAAOna,KAAK8a,GACjB1f,KAAKgf,OAAOpa,KAAK+H,GACjB3M,KAAKif,QAAQra,KAAK,GAElB+a,GAAe,EACfD,EAAS,EACT/S,EAAS,EACTY,EAAQuE,EAAM,EAElB,CAGA9R,KAAK6e,OAAOja,KAAK6a,EAAE7d,QACnB5B,KAAK8e,OAAOla,KAAK6a,EAAE7d,QACnB5B,KAAK+e,OAAOna,KAAK,GACjB5E,KAAKgf,OAAOpa,KAAK,GACjB5E,KAAKif,QAAQra,KAAK,GAElB5E,KAAKof,QAAUpf,KAAK6e,OAAOjd,OAAS,CACtC,CAIAgd,GAAWjlB,UAAUiL,KAAO,SAAU0S,EAAMH,EAAKD,GAC/C,MAAM5B,EAAQ,IAAIiE,GAAMjC,EAAMH,EAAKD,GAQnC,OAPA5B,EAAM2B,OAAQ,EAEVC,EAAU,GAAGlX,KAAK+T,QACtBuB,EAAMvB,MAAQ/T,KAAK+T,MACfmD,EAAU,GAAGlX,KAAK+T,QAEtB/T,KAAKkV,OAAOtQ,KAAK0Q,GACVA,CACT,EAEAsJ,GAAWjlB,UAAUimB,QAAU,SAAkBT,GAC/C,OAAOnf,KAAK6e,OAAOM,GAAQnf,KAAK+e,OAAOI,IAASnf,KAAK8e,OAAOK,EAC9D,EAEAP,GAAWjlB,UAAUkmB,eAAiB,SAAyBC,GAC7D,IAAK,IAAIrR,EAAMzO,KAAKof,QAASU,EAAOrR,EAAKqR,IACvC,GAAI9f,KAAK6e,OAAOiB,GAAQ9f,KAAK+e,OAAOe,GAAQ9f,KAAK8e,OAAOgB,GACtD,MAGJ,OAAOA,CACT,EAGAlB,GAAWjlB,UAAUomB,WAAa,SAAqBjO,GACrD,IAAK,IAAIrD,EAAMzO,KAAK6R,IAAIjQ,OAAQkQ,EAAMrD,EAAKqD,IAAO,CAChD,MAAMpN,EAAK1E,KAAK6R,IAAIhN,WAAWiN,GAC/B,IAAKuB,GAAQ3O,GAAO,KACtB,CACA,OAAOoN,CACT,EAGA8M,GAAWjlB,UAAUqmB,eAAiB,SAAyBlO,EAAKpX,GAClE,GAAIoX,GAAOpX,EAAO,OAAOoX,EAEzB,MAAOA,EAAMpX,EACX,IAAK2Y,GAAQrT,KAAK6R,IAAIhN,aAAaiN,IAAS,OAAOA,EAAM,EAE3D,OAAOA,CACT,EAGA8M,GAAWjlB,UAAUsmB,UAAY,SAAoBnO,EAAK7L,GACxD,IAAK,IAAIwI,EAAMzO,KAAK6R,IAAIjQ,OAAQkQ,EAAMrD,EAAKqD,IACzC,GAAI9R,KAAK6R,IAAIhN,WAAWiN,KAAS7L,EAAQ,MAE3C,OAAO6L,CACT,EAGA8M,GAAWjlB,UAAUumB,cAAgB,SAAwBpO,EAAK7L,EAAMvL,GACtE,GAAIoX,GAAOpX,EAAO,OAAOoX,EAEzB,MAAOA,EAAMpX,EACX,GAAIuL,IAASjG,KAAK6R,IAAIhN,aAAaiN,GAAQ,OAAOA,EAAM,EAE1D,OAAOA,CACT,EAGA8M,GAAWjlB,UAAUwmB,SAAW,SAAmBC,EAAO5S,EAAKkS,EAAQW,GACrE,GAAID,GAAS5S,EACX,MAAO,GAGT,MAAM8S,EAAQ,IAAI3d,MAAM6K,EAAM4S,GAE9B,IAAK,IAAIvkB,EAAI,EAAGsjB,EAAOiB,EAAOjB,EAAO3R,EAAK2R,IAAQtjB,IAAK,CACrD,IAAI0kB,EAAa,EACjB,MAAMC,EAAYxgB,KAAK6e,OAAOM,GAC9B,IACInB,EADAyC,EAAQD,EAKVxC,EAFEmB,EAAO,EAAI3R,GAAO6S,EAEbrgB,KAAK8e,OAAOK,GAAQ,EAEpBnf,KAAK8e,OAAOK,GAGrB,MAAOsB,EAAQzC,GAAQuC,EAAab,EAAQ,CAC1C,MAAMhb,EAAK1E,KAAK6R,IAAIhN,WAAW4b,GAE/B,GAAIpN,GAAQ3O,GACC,IAAPA,EACF6b,GAAc,GAAKA,EAAavgB,KAAKif,QAAQE,IAAS,EAEtDoB,QAEG,MAAIE,EAAQD,EAAYxgB,KAAK+e,OAAOI,IAIzC,MAFAoB,GAGF,CAEAE,GACF,CAKEH,EAAMzkB,GAHJ0kB,EAAab,EAGJ,IAAI/c,MAAM4d,EAAab,EAAS,GAAG1V,KAAK,KAAOhK,KAAK6R,IAAI5X,MAAMwmB,EAAOzC,GAErEhe,KAAK6R,IAAI5X,MAAMwmB,EAAOzC,EAErC,CAEA,OAAOsC,EAAMtW,KAAK,GACpB,EAGA4U,GAAWjlB,UAAU4f,MAAQA,GAE7B,UCjNA,MAAMmH,GAA0B,MAEhC,SAASC,GAAS1hB,EAAOkgB,GACvB,MAAMrN,EAAM7S,EAAM4f,OAAOM,GAAQlgB,EAAM8f,OAAOI,GACxC1Q,EAAMxP,EAAM6f,OAAOK,GAEzB,OAAOlgB,EAAM4S,IAAI5X,MAAM6X,EAAKrD,EAC9B,CAEA,SAASmS,GAAclU,GACrB,MAAMtH,EAAS,GACTqJ,EAAM/B,EAAI9K,OAEhB,IAAIkQ,EAAM,EACNpN,EAAKgI,EAAI7H,WAAWiN,GACpB+O,GAAY,EACZ/F,EAAU,EACVzM,EAAU,GAEd,MAAOyD,EAAMrD,EACA,MAAP/J,IACGmc,GAOHxS,GAAW3B,EAAIiE,UAAUmK,EAAShJ,EAAM,GACxCgJ,EAAUhJ,IANV1M,EAAOR,KAAKyJ,EAAU3B,EAAIiE,UAAUmK,EAAShJ,IAC7CzD,EAAU,GACVyM,EAAUhJ,EAAM,IAQpB+O,EAAoB,KAAPnc,EACboN,IAEApN,EAAKgI,EAAI7H,WAAWiN,GAKtB,OAFA1M,EAAOR,KAAKyJ,EAAU3B,EAAIiE,UAAUmK,IAE7B1V,CACT,CAEe,SAAS0b,GAAO7hB,EAAO8hB,EAAWC,EAASC,GAExD,GAAIF,EAAY,EAAIC,EAAW,OAAO,EAEtC,IAAIE,EAAWH,EAAY,EAE3B,GAAI9hB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,UAAa,OAAO,EAGvD,GAAIjgB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,WAAa,EAAK,OAAO,EAM5D,IAAIpN,EAAM7S,EAAM4f,OAAOqC,GAAYjiB,EAAM8f,OAAOmC,GAChD,GAAIpP,GAAO7S,EAAM6f,OAAOoC,GAAa,OAAO,EAE5C,MAAMC,EAAUliB,EAAM4S,IAAIhN,WAAWiN,KACrC,GAAgB,MAAZqP,GAAuC,KAAZA,GAAuC,KAAZA,EAA2B,OAAO,EAE5F,GAAIrP,GAAO7S,EAAM6f,OAAOoC,GAAa,OAAO,EAE5C,MAAME,EAAWniB,EAAM4S,IAAIhN,WAAWiN,KACtC,GAAiB,MAAbsP,GAAyC,KAAbA,GAAyC,KAAbA,IAA6B/N,GAAQ+N,GAC/F,OAAO,EAKT,GAAgB,KAAZD,GAA2B9N,GAAQ+N,GAAa,OAAO,EAE3D,MAAOtP,EAAM7S,EAAM6f,OAAOoC,GAAW,CACnC,MAAMxc,EAAKzF,EAAM4S,IAAIhN,WAAWiN,GAEhC,GAAW,MAAPpN,GAA6B,KAAPA,GAA6B,KAAPA,IAAuB2O,GAAQ3O,GAAO,OAAO,EAE7FoN,GACF,CAEA,IAAIuP,EAAWV,GAAQ1hB,EAAO8hB,EAAY,GACtCO,EAAUD,EAASzY,MAAM,KAC7B,MAAM2Y,EAAS,GACf,IAAK,IAAI1lB,EAAI,EAAGA,EAAIylB,EAAQ1f,OAAQ/F,IAAK,CACvC,MAAMihB,EAAIwE,EAAQzlB,GAAG8M,OACrB,IAAKmU,EAAG,CAGN,GAAU,IAANjhB,GAAWA,IAAMylB,EAAQ1f,OAAS,EACpC,SAEA,OAAO,CAEX,CAEA,IAAK,WAAWc,KAAKoa,GAAM,OAAO,EACC,KAA/BA,EAAEjY,WAAWiY,EAAElb,OAAS,GAC1B2f,EAAO3c,KAAyB,KAApBkY,EAAEjY,WAAW,GAAqB,SAAW,SAC5B,KAApBiY,EAAEjY,WAAW,GACtB0c,EAAO3c,KAAK,QAEZ2c,EAAO3c,KAAK,GAEhB,CAGA,GADAyc,EAAWV,GAAQ1hB,EAAO8hB,GAAWpY,QACN,IAA3B0Y,EAAS3a,QAAQ,KAAe,OAAO,EAC3C,GAAIzH,EAAM+f,OAAO+B,GAAa9hB,EAAMigB,WAAa,EAAK,OAAO,EAC7DoC,EAAUV,GAAaS,GACnBC,EAAQ1f,QAAyB,KAAf0f,EAAQ,IAAWA,EAAQE,QAC7CF,EAAQ1f,QAA0C,KAAhC0f,EAAQA,EAAQ1f,OAAS,IAAW0f,EAAQG,MAIlE,MAAMC,EAAcJ,EAAQ1f,OAC5B,GAAoB,IAAhB8f,GAAqBA,IAAgBH,EAAO3f,OAAU,OAAO,EAEjE,GAAIqf,EAAU,OAAO,EAErB,MAAMU,EAAgB1iB,EAAMugB,WAC5BvgB,EAAMugB,WAAa,QAInB,MAAMoC,EAAkB3iB,EAAMoV,GAAG4C,MAAMyH,MAAMrF,SAAS,cAEhDwI,EAAW5iB,EAAM2F,KAAK,aAAc,QAAS,GAC7Ckd,EAAa,CAACf,EAAW,GAC/Bc,EAAS3X,IAAM4X,EAEf,MAAMC,EAAY9iB,EAAM2F,KAAK,aAAc,QAAS,GACpDmd,EAAU7X,IAAM,CAAC6W,EAAWA,EAAY,GAExC,MAAMiB,EAAa/iB,EAAM2F,KAAK,UAAW,KAAM,GAC/Cod,EAAW9X,IAAM,CAAC6W,EAAWA,EAAY,GAEzC,IAAK,IAAIllB,EAAI,EAAGA,EAAIylB,EAAQ1f,OAAQ/F,IAAK,CACvC,MAAMomB,EAAWhjB,EAAM2F,KAAK,UAAW,KAAM,GACzC2c,EAAO1lB,KACTomB,EAAS/L,MAAS,CAAC,CAAC,QAAS,cAAgBqL,EAAO1lB,MAGtD,MAAMqmB,EAAWjjB,EAAM2F,KAAK,SAAU,GAAI,GAC1Csd,EAAS1M,QAAW8L,EAAQzlB,GAAG8M,OAC/BuZ,EAAS3L,SAAW,GAEpBtX,EAAM2F,KAAK,WAAY,MAAO,EAChC,CAKA,IAAIud,EAHJljB,EAAM2F,KAAK,WAAY,MAAO,GAC9B3F,EAAM2F,KAAK,cAAe,SAAU,GAGpC,IAAIwd,EAAqB,EAEzB,IAAKlB,EAAWH,EAAY,EAAGG,EAAWF,EAASE,IAAY,CAC7D,GAAIjiB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,UAAa,MAEhD,IAAImD,GAAY,EAChB,IAAK,IAAIxmB,EAAI,EAAGwJ,EAAIuc,EAAgBhgB,OAAQ/F,EAAIwJ,EAAGxJ,IACjD,GAAI+lB,EAAgB/lB,GAAGoD,EAAOiiB,EAAUF,GAAS,GAAO,CACtDqB,GAAY,EACZ,KACF,CAGF,GAAIA,EAAa,MAEjB,GADAhB,EAAWV,GAAQ1hB,EAAOiiB,GAAUvY,QAC/B0Y,EAAY,MACjB,GAAIpiB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,WAAa,EAAK,MAQrD,GAPAoC,EAAUV,GAAaS,GACnBC,EAAQ1f,QAAyB,KAAf0f,EAAQ,IAAWA,EAAQE,QAC7CF,EAAQ1f,QAA0C,KAAhC0f,EAAQA,EAAQ1f,OAAS,IAAW0f,EAAQG,MAIlEW,GAAsBV,EAAcJ,EAAQ1f,OACxCwgB,EAAqB1B,GAA2B,MAEpD,GAAIQ,IAAaH,EAAY,EAAG,CAC9B,MAAMuB,EAAYrjB,EAAM2F,KAAK,aAAc,QAAS,GACpD0d,EAAUpY,IAAMiY,EAAa,CAACpB,EAAY,EAAG,EAC/C,CAEA,MAAMwB,EAAYtjB,EAAM2F,KAAK,UAAW,KAAM,GAC9C2d,EAAUrY,IAAM,CAACgX,EAAUA,EAAW,GAEtC,IAAK,IAAIrlB,EAAI,EAAGA,EAAI6lB,EAAa7lB,IAAK,CACpC,MAAM2mB,EAAYvjB,EAAM2F,KAAK,UAAW,KAAM,GAC1C2c,EAAO1lB,KACT2mB,EAAUtM,MAAS,CAAC,CAAC,QAAS,cAAgBqL,EAAO1lB,MAGvD,MAAMqmB,EAAWjjB,EAAM2F,KAAK,SAAU,GAAI,GAC1Csd,EAAS1M,QAAW8L,EAAQzlB,GAAKylB,EAAQzlB,GAAG8M,OAAS,GACrDuZ,EAAS3L,SAAW,GAEpBtX,EAAM2F,KAAK,WAAY,MAAO,EAChC,CACA3F,EAAM2F,KAAK,WAAY,MAAO,EAChC,CAYA,OAVIud,IACFljB,EAAM2F,KAAK,cAAe,SAAU,GACpCud,EAAW,GAAKjB,GAGlBjiB,EAAM2F,KAAK,cAAe,SAAU,GACpCkd,EAAW,GAAKZ,EAEhBjiB,EAAMugB,WAAamC,EACnB1iB,EAAMkgB,KAAO+B,GACN,CACT,CCjOe,SAASjb,GAAMhH,EAAO8hB,EAAWC,GAC9C,GAAI/hB,EAAM+f,OAAO+B,GAAa9hB,EAAMigB,UAAY,EAAK,OAAO,EAE5D,IAAIgC,EAAWH,EAAY,EACvB/C,EAAOkD,EAEX,MAAOA,EAAWF,EAChB,GAAI/hB,EAAM2gB,QAAQsB,GAChBA,QADF,CAKA,KAAIjiB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,WAAa,GAKhD,MAJEgC,IACAlD,EAAOkD,CAJT,CAUFjiB,EAAMkgB,KAAOnB,EAEb,MAAM1I,EAAUrW,EAAM2F,KAAK,aAAc,OAAQ,GAIjD,OAHA0Q,EAAME,QAAUvW,EAAMkhB,SAASY,EAAW/C,EAAM,EAAI/e,EAAMigB,WAAW,GAAS,KAC9E5J,EAAMpL,IAAU,CAAC6W,EAAW9hB,EAAMkgB,OAE3B,CACT,CC3Be,SAASzJ,GAAOzW,EAAO8hB,EAAWC,EAASC,GACxD,IAAInP,EAAM7S,EAAM4f,OAAOkC,GAAa9hB,EAAM8f,OAAOgC,GAC7CtS,EAAMxP,EAAM6f,OAAOiC,GAGvB,GAAI9hB,EAAM+f,OAAO+B,GAAa9hB,EAAMigB,WAAa,EAAK,OAAO,EAE7D,GAAIpN,EAAM,EAAIrD,EAAO,OAAO,EAE5B,MAAMwF,EAAShV,EAAM4S,IAAIhN,WAAWiN,GAEpC,GAAe,MAAXmC,GAAqC,KAAXA,EAC5B,OAAO,EAIT,IAAIwO,EAAM3Q,EACVA,EAAM7S,EAAMghB,UAAUnO,EAAKmC,GAE3B,IAAI1T,EAAMuR,EAAM2Q,EAEhB,GAAIliB,EAAM,EAAK,OAAO,EAEtB,MAAMiZ,EAASva,EAAM4S,IAAI5X,MAAMwoB,EAAK3Q,GAC9B4Q,EAASzjB,EAAM4S,IAAI5X,MAAM6X,EAAKrD,GAEpC,GAAe,KAAXwF,GACEyO,EAAOhc,QAAQ1N,OAAO2L,aAAasP,KAAY,EACjD,OAAO,EAKX,GAAIgN,EAAU,OAAO,EAGrB,IAAIC,EAAWH,EACX4B,GAAgB,EAEpB,OAAS,CAEP,GADAzB,IACIA,GAAYF,EAGd,MAMF,GAHAlP,EAAM2Q,EAAMxjB,EAAM4f,OAAOqC,GAAYjiB,EAAM8f,OAAOmC,GAClDzS,EAAMxP,EAAM6f,OAAOoC,GAEfpP,EAAMrD,GAAOxP,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,UAI9C,MAGF,GAAIjgB,EAAM4S,IAAIhN,WAAWiN,KAASmC,MAE9BhV,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,WAAa,KAKhDpN,EAAM7S,EAAMghB,UAAUnO,EAAKmC,KAGvBnC,EAAM2Q,EAAMliB,KAGhBuR,EAAM7S,EAAM8gB,WAAWjO,KAEnBA,EAAMrD,MAAV,CAEAkU,GAAgB,EAEhB,KAJ0B,CAK5B,CAGApiB,EAAMtB,EAAM+f,OAAO+B,GAEnB9hB,EAAMkgB,KAAO+B,GAAYyB,EAAgB,EAAI,GAE7C,MAAMrN,EAAUrW,EAAM2F,KAAK,QAAS,OAAQ,GAM5C,OALA0Q,EAAMK,KAAU+M,EAChBpN,EAAME,QAAUvW,EAAMkhB,SAASY,EAAY,EAAGG,EAAU3gB,GAAK,GAC7D+U,EAAMkE,OAAUA,EAChBlE,EAAMpL,IAAU,CAAC6W,EAAW9hB,EAAMkgB,OAE3B,CACT,CCzFe,SAASyD,GAAY3jB,EAAO8hB,EAAWC,EAASC,GAC7D,IAAInP,EAAM7S,EAAM4f,OAAOkC,GAAa9hB,EAAM8f,OAAOgC,GAC7CtS,EAAMxP,EAAM6f,OAAOiC,GAEvB,MAAM8B,EAAa5jB,EAAMmgB,QAGzB,GAAIngB,EAAM+f,OAAO+B,GAAa9hB,EAAMigB,WAAa,EAAK,OAAO,EAG7D,GAAkC,KAA9BjgB,EAAM4S,IAAIhN,WAAWiN,GAAwB,OAAO,EAIxD,GAAImP,EAAU,OAAO,EAErB,MAAM6B,EAAa,GACbC,EAAa,GACbC,EAAa,GACbC,EAAa,GAEbrB,EAAkB3iB,EAAMoV,GAAG4C,MAAMyH,MAAMrF,SAAS,cAEhDsI,EAAgB1iB,EAAMugB,WAC5BvgB,EAAMugB,WAAa,aACnB,IACI0B,EADAgC,GAAgB,EAqBpB,IAAKhC,EAAWH,EAAWG,EAAWF,EAASE,IAAY,CASzD,MAAMiC,EAAclkB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,UAKnD,GAHApN,EAAM7S,EAAM4f,OAAOqC,GAAYjiB,EAAM8f,OAAOmC,GAC5CzS,EAAMxP,EAAM6f,OAAOoC,GAEfpP,GAAOrD,EAET,MAGF,GAAoC,KAAhCxP,EAAM4S,IAAIhN,WAAWiN,OAA2BqR,EAAa,CAI/D,IACIC,EACAC,EAFAC,EAAUrkB,EAAM+f,OAAOkC,GAAY,EAKL,KAA9BjiB,EAAM4S,IAAIhN,WAAWiN,IAGvBA,IACAwR,IACAD,GAAY,EACZD,GAAmB,GACoB,IAA9BnkB,EAAM4S,IAAIhN,WAAWiN,IAC9BsR,GAAmB,GAEdnkB,EAAMggB,QAAQiC,GAAYoC,GAAW,IAAM,GAG9CxR,IACAwR,IACAD,GAAY,GAKZA,GAAY,GAGdD,GAAmB,EAGrB,IAAIzW,EAAS2W,EACbR,EAAUle,KAAK3F,EAAM4f,OAAOqC,IAC5BjiB,EAAM4f,OAAOqC,GAAYpP,EAEzB,MAAOA,EAAMrD,EAAK,CAChB,MAAM/J,EAAKzF,EAAM4S,IAAIhN,WAAWiN,GAEhC,IAAIuB,GAAQ3O,GAOV,MANW,IAAPA,EACFiI,GAAU,GAAKA,EAAS1N,EAAMggB,QAAQiC,IAAamC,EAAY,EAAI,IAAM,EAEzE1W,IAMJmF,GACF,CAEAoR,EAAgBpR,GAAOrD,EAEvBsU,EAAWne,KAAK3F,EAAMggB,QAAQiC,IAC9BjiB,EAAMggB,QAAQiC,GAAYjiB,EAAM+f,OAAOkC,GAAY,GAAKkC,EAAmB,EAAI,GAE/EJ,EAAUpe,KAAK3F,EAAM+f,OAAOkC,IAC5BjiB,EAAM+f,OAAOkC,GAAYvU,EAAS2W,EAElCL,EAAUre,KAAK3F,EAAM8f,OAAOmC,IAC5BjiB,EAAM8f,OAAOmC,GAAYpP,EAAM7S,EAAM4f,OAAOqC,GAC5C,QACF,CAGA,GAAIgC,EAAiB,MAGrB,IAAIb,GAAY,EAChB,IAAK,IAAIxmB,EAAI,EAAGwJ,EAAIuc,EAAgBhgB,OAAQ/F,EAAIwJ,EAAGxJ,IACjD,GAAI+lB,EAAgB/lB,GAAGoD,EAAOiiB,EAAUF,GAAS,GAAO,CACtDqB,GAAY,EACZ,KACF,CAGF,GAAIA,EAAW,CAKbpjB,EAAMmgB,QAAU8B,EAEQ,IAApBjiB,EAAMigB,YAIR4D,EAAUle,KAAK3F,EAAM4f,OAAOqC,IAC5B6B,EAAWne,KAAK3F,EAAMggB,QAAQiC,IAC9B+B,EAAUre,KAAK3F,EAAM8f,OAAOmC,IAC5B8B,EAAUpe,KAAK3F,EAAM+f,OAAOkC,IAC5BjiB,EAAM+f,OAAOkC,IAAajiB,EAAMigB,WAGlC,KACF,CAEA4D,EAAUle,KAAK3F,EAAM4f,OAAOqC,IAC5B6B,EAAWne,KAAK3F,EAAMggB,QAAQiC,IAC9B+B,EAAUre,KAAK3F,EAAM8f,OAAOmC,IAC5B8B,EAAUpe,KAAK3F,EAAM+f,OAAOkC,IAI5BjiB,EAAM+f,OAAOkC,IAAa,CAC5B,CAEA,MAAMqC,EAAYtkB,EAAMigB,UACxBjgB,EAAMigB,UAAY,EAElB,MAAM5D,EAAWrc,EAAM2F,KAAK,kBAAmB,aAAc,GAC7D0W,EAAQ9B,OAAS,IACjB,MAAMgK,EAAQ,CAACzC,EAAW,GAC1BzF,EAAQpR,IAASsZ,EAEjBvkB,EAAMoV,GAAG4C,MAAMwM,SAASxkB,EAAO8hB,EAAWG,GAE1C,MAAM1F,EAAWvc,EAAM2F,KAAK,mBAAoB,cAAe,GAC/D4W,EAAQhC,OAAS,IAEjBva,EAAMmgB,QAAUyD,EAChB5jB,EAAMugB,WAAamC,EACnB6B,EAAM,GAAKvkB,EAAMkgB,KAIjB,IAAK,IAAItjB,EAAI,EAAGA,EAAIonB,EAAUrhB,OAAQ/F,IACpCoD,EAAM4f,OAAOhjB,EAAIklB,GAAa+B,EAAUjnB,GACxCoD,EAAM8f,OAAOljB,EAAIklB,GAAakC,EAAUpnB,GACxCoD,EAAM+f,OAAOnjB,EAAIklB,GAAaiC,EAAUnnB,GACxCoD,EAAMggB,QAAQpjB,EAAIklB,GAAagC,EAAWlnB,GAI5C,OAFAoD,EAAMigB,UAAYqE,GAEX,CACT,CC5Me,SAASG,GAAIzkB,EAAO8hB,EAAWC,EAASC,GACrD,MAAMxS,EAAMxP,EAAM6f,OAAOiC,GAEzB,GAAI9hB,EAAM+f,OAAO+B,GAAa9hB,EAAMigB,WAAa,EAAK,OAAO,EAE7D,IAAIpN,EAAM7S,EAAM4f,OAAOkC,GAAa9hB,EAAM8f,OAAOgC,GACjD,MAAM9M,EAAShV,EAAM4S,IAAIhN,WAAWiN,KAGpC,GAAe,KAAXmC,GACW,KAAXA,GACW,KAAXA,EACF,OAAO,EAKT,IAAI0P,EAAM,EACV,MAAO7R,EAAMrD,EAAK,CAChB,MAAM/J,EAAKzF,EAAM4S,IAAIhN,WAAWiN,KAChC,GAAIpN,IAAOuP,IAAWZ,GAAQ3O,GAAO,OAAO,EACxCA,IAAOuP,GAAU0P,GACvB,CAEA,GAAIA,EAAM,EAAK,OAAO,EAEtB,GAAI1C,EAAU,OAAO,EAErBhiB,EAAMkgB,KAAO4B,EAAY,EAEzB,MAAMzL,EAASrW,EAAM2F,KAAK,KAAM,KAAM,GAItC,OAHA0Q,EAAMpL,IAAS,CAAC6W,EAAW9hB,EAAMkgB,MACjC7J,EAAMkE,OAAS7W,MAAMghB,EAAM,GAAG3Z,KAAKhR,OAAO2L,aAAasP,KAEhD,CACT,CCjCA,SAAS2P,GAAsB3kB,EAAO8hB,GACpC,MAAMtS,EAAMxP,EAAM6f,OAAOiC,GACzB,IAAIjP,EAAM7S,EAAM4f,OAAOkC,GAAa9hB,EAAM8f,OAAOgC,GAEjD,MAAM9M,EAAShV,EAAM4S,IAAIhN,WAAWiN,KAEpC,GAAe,KAAXmC,GACW,KAAXA,GACW,KAAXA,EACF,OAAQ,EAGV,GAAInC,EAAMrD,EAAK,CACb,MAAM/J,EAAKzF,EAAM4S,IAAIhN,WAAWiN,GAEhC,IAAKuB,GAAQ3O,GAEX,OAAQ,CAEZ,CAEA,OAAOoN,CACT,CAIA,SAAS+R,GAAuB5kB,EAAO8hB,GACrC,MAAMxT,EAAQtO,EAAM4f,OAAOkC,GAAa9hB,EAAM8f,OAAOgC,GAC/CtS,EAAMxP,EAAM6f,OAAOiC,GACzB,IAAIjP,EAAMvE,EAGV,GAAIuE,EAAM,GAAKrD,EAAO,OAAQ,EAE9B,IAAI/J,EAAKzF,EAAM4S,IAAIhN,WAAWiN,KAE9B,GAAIpN,EAAK,IAAeA,EAAK,GAAe,OAAQ,EAEpD,OAAS,CAEP,GAAIoN,GAAOrD,EAAO,OAAQ,EAI1B,GAFA/J,EAAKzF,EAAM4S,IAAIhN,WAAWiN,OAEtBpN,GAAM,IAAeA,GAAM,IAA/B,CASA,GAAW,KAAPA,GAA6B,KAAPA,EACxB,MAGF,OAAQ,CAPR,CAHE,GAAIoN,EAAMvE,GAAS,GAAM,OAAQ,CAWrC,CAEA,OAAIuE,EAAMrD,IACR/J,EAAKzF,EAAM4S,IAAIhN,WAAWiN,IAErBuB,GAAQ3O,KAEH,EAGLoN,CACT,CAEA,SAASgS,GAAqB7kB,EAAOkW,GACnC,MAAMpB,EAAQ9U,EAAM8U,MAAQ,EAE5B,IAAK,IAAIlY,EAAIsZ,EAAM,EAAG9P,EAAIpG,EAAMiW,OAAOtT,OAAS,EAAG/F,EAAIwJ,EAAGxJ,IACpDoD,EAAMiW,OAAOrZ,GAAGkY,QAAUA,GAAkC,mBAAzB9U,EAAMiW,OAAOrZ,GAAGyb,OACrDrY,EAAMiW,OAAOrZ,EAAI,GAAGmb,QAAS,EAC7B/X,EAAMiW,OAAOrZ,GAAGmb,QAAS,EACzBnb,GAAK,EAGX,CAEe,SAASmd,GAAM/Z,EAAO8hB,EAAWC,EAASC,GACvD,IAAIxS,EAAKqD,EAAKvE,EAAO+H,EACjB4L,EAAWH,EACX1B,GAAQ,EAGZ,GAAIpgB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,WAAa,EAAK,OAAO,EAQ5D,GAAIjgB,EAAMsgB,YAAc,GACpBtgB,EAAM+f,OAAOkC,GAAYjiB,EAAMsgB,YAAc,GAC7CtgB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,UACjC,OAAO,EAGT,IAgBI6E,EACAC,EACAC,EAlBAC,GAAyB,EAmB7B,GAfIjD,GAA+B,cAArBhiB,EAAMugB,YAMdvgB,EAAM+f,OAAOkC,IAAajiB,EAAMigB,YAClCgF,GAAyB,IAQxBD,EAAiBJ,GAAsB5kB,EAAOiiB,KAAc,GAO/D,GANA6C,GAAY,EACZxW,EAAQtO,EAAM4f,OAAOqC,GAAYjiB,EAAM8f,OAAOmC,GAC9C8C,EAAcG,OAAOllB,EAAM4S,IAAI5X,MAAMsT,EAAO0W,EAAiB,IAIzDC,GAA0C,IAAhBF,EAAmB,OAAO,MACnD,OAAKC,EAAiBL,GAAqB3kB,EAAOiiB,KAAc,GAGrE,OAAO,EAFP6C,GAAY,CAGd,CAIA,GAAIG,GACEjlB,EAAM8gB,WAAWkE,IAAmBhlB,EAAM6f,OAAOoC,GAAW,OAAO,EAIzE,GAAID,EAAU,OAAO,EAGrB,MAAMmD,EAAiBnlB,EAAM4S,IAAIhN,WAAWof,EAAiB,GAGvDI,EAAaplB,EAAMiW,OAAOtT,OAE5BmiB,GACFzO,EAAcrW,EAAM2F,KAAK,oBAAqB,KAAM,GAChC,IAAhBof,IACF1O,EAAMY,MAAQ,CAAC,CAAC,QAAS8N,MAG3B1O,EAAcrW,EAAM2F,KAAK,mBAAoB,KAAM,GAGrD,MAAM0f,EAAY,CAACpD,EAAU,GAC7B5L,EAAMpL,IAASoa,EACfhP,EAAMkE,OAASxgB,OAAO2L,aAAayf,GAMnC,IAAIG,GAAe,EACnB,MAAM3C,EAAkB3iB,EAAMoV,GAAG4C,MAAMyH,MAAMrF,SAAS,QAEhDsI,EAAgB1iB,EAAMugB,WAC5BvgB,EAAMugB,WAAa,OAEnB,MAAO0B,EAAWF,EAAS,CACzBlP,EAAMmS,EACNxV,EAAMxP,EAAM6f,OAAOoC,GAEnB,MAAMoC,EAAUrkB,EAAM+f,OAAOkC,GAAY+C,GAAkBhlB,EAAM4f,OAAOqC,GAAYjiB,EAAM8f,OAAOmC,IACjG,IAAIvU,EAAS2W,EAEb,MAAOxR,EAAMrD,EAAK,CAChB,MAAM/J,EAAKzF,EAAM4S,IAAIhN,WAAWiN,GAEhC,GAAW,IAAPpN,EACFiI,GAAU,GAAKA,EAAS1N,EAAMggB,QAAQiC,IAAa,MAC9C,IAAW,KAAPxc,EAGT,MAFAiI,GAGF,CAEAmF,GACF,CAEA,MAAM0S,EAAe1S,EACrB,IAAI2S,EAIFA,EAFED,GAAgB/V,EAEE,EAEA9B,EAAS2W,EAK3BmB,EAAoB,IAAKA,EAAoB,GAIjD,MAAM/E,EAAS4D,EAAUmB,EAGzBnP,EAAerW,EAAM2F,KAAK,iBAAkB,KAAM,GAClD0Q,EAAMkE,OAASxgB,OAAO2L,aAAayf,GACnC,MAAMM,EAAY,CAACxD,EAAU,GAC7B5L,EAAMpL,IAASwa,EACXX,IACFzO,EAAMK,KAAO1W,EAAM4S,IAAI5X,MAAMsT,EAAO0W,EAAiB,IAIvD,MAAMU,EAAW1lB,EAAMogB,MACjB4D,EAAYhkB,EAAM8f,OAAOmC,GACzB8B,EAAY/jB,EAAM+f,OAAOkC,GAMzB0D,EAAgB3lB,EAAMsgB,WAyC5B,GAxCAtgB,EAAMsgB,WAAatgB,EAAMigB,UACzBjgB,EAAMigB,UAAYQ,EAElBzgB,EAAMogB,OAAQ,EACdpgB,EAAM8f,OAAOmC,GAAYsD,EAAevlB,EAAM4f,OAAOqC,GACrDjiB,EAAM+f,OAAOkC,GAAYvU,EAErB6X,GAAgB/V,GAAOxP,EAAM2gB,QAAQsB,EAAW,GAQlDjiB,EAAMkgB,KAAOxkB,KAAKD,IAAIuE,EAAMkgB,KAAO,EAAG6B,GAEtC/hB,EAAMoV,GAAG4C,MAAMwM,SAASxkB,EAAOiiB,EAAUF,GAAS,GAI/C/hB,EAAMogB,QAASkF,IAClBlF,GAAQ,GAIVkF,EAAgBtlB,EAAMkgB,KAAO+B,EAAY,GAAKjiB,EAAM2gB,QAAQ3gB,EAAMkgB,KAAO,GAEzElgB,EAAMigB,UAAYjgB,EAAMsgB,WACxBtgB,EAAMsgB,WAAaqF,EACnB3lB,EAAM8f,OAAOmC,GAAY+B,EACzBhkB,EAAM+f,OAAOkC,GAAY8B,EACzB/jB,EAAMogB,MAAQsF,EAEdrP,EAAerW,EAAM2F,KAAK,kBAAmB,MAAO,GACpD0Q,EAAMkE,OAASxgB,OAAO2L,aAAayf,GAEnClD,EAAWjiB,EAAMkgB,KACjBuF,EAAU,GAAKxD,EAEXA,GAAYF,EAAW,MAK3B,GAAI/hB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,UAAa,MAGhD,GAAIjgB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,WAAa,EAAK,MAGrD,IAAImD,GAAY,EAChB,IAAK,IAAIxmB,EAAI,EAAGwJ,EAAIuc,EAAgBhgB,OAAQ/F,EAAIwJ,EAAGxJ,IACjD,GAAI+lB,EAAgB/lB,GAAGoD,EAAOiiB,EAAUF,GAAS,GAAO,CACtDqB,GAAY,EACZ,KACF,CAEF,GAAIA,EAAa,MAGjB,GAAI0B,EAAW,CAEb,GADAE,EAAiBJ,GAAsB5kB,EAAOiiB,GAC1C+C,EAAiB,EAAK,MAC1B1W,EAAQtO,EAAM4f,OAAOqC,GAAYjiB,EAAM8f,OAAOmC,EAChD,MAEE,GADA+C,EAAiBL,GAAqB3kB,EAAOiiB,GACzC+C,EAAiB,EAAK,MAG5B,GAAIG,IAAmBnlB,EAAM4S,IAAIhN,WAAWof,EAAiB,GAAM,KACrE,CAoBA,OAhBE3O,EADEyO,EACM9kB,EAAM2F,KAAK,qBAAsB,MAAO,GAExC3F,EAAM2F,KAAK,oBAAqB,MAAO,GAEjD0Q,EAAMkE,OAASxgB,OAAO2L,aAAayf,GAEnCE,EAAU,GAAKpD,EACfjiB,EAAMkgB,KAAO+B,EAEbjiB,EAAMugB,WAAamC,EAGftC,GACFyE,GAAoB7kB,EAAOolB,IAGtB,CACT,CCxUe,SAASQ,GAAW5lB,EAAO8hB,EAAW+D,EAAU7D,GAC7D,IAAInP,EAAM7S,EAAM4f,OAAOkC,GAAa9hB,EAAM8f,OAAOgC,GAC7CtS,EAAMxP,EAAM6f,OAAOiC,GACnBG,EAAWH,EAAY,EAG3B,GAAI9hB,EAAM+f,OAAO+B,GAAa9hB,EAAMigB,WAAa,EAAK,OAAO,EAE7D,GAAkC,KAA9BjgB,EAAM4S,IAAIhN,WAAWiN,GAAwB,OAAO,EAExD,SAASiT,EAAa7D,GACpB,MAAMF,EAAU/hB,EAAMmgB,QAEtB,GAAI8B,GAAYF,GAAW/hB,EAAM2gB,QAAQsB,GAEvC,OAAO,KAGT,IAAI8D,GAAiB,EASrB,GALI/lB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,UAAY,IAAK8F,GAAiB,GAGjE/lB,EAAM+f,OAAOkC,GAAY,IAAK8D,GAAiB,IAE9CA,EAAgB,CACnB,MAAMpD,EAAkB3iB,EAAMoV,GAAG4C,MAAMyH,MAAMrF,SAAS,aAChDsI,EAAgB1iB,EAAMugB,WAC5BvgB,EAAMugB,WAAa,YAGnB,IAAI6C,GAAY,EAChB,IAAK,IAAIxmB,EAAI,EAAGwJ,EAAIuc,EAAgBhgB,OAAQ/F,EAAIwJ,EAAGxJ,IACjD,GAAI+lB,EAAgB/lB,GAAGoD,EAAOiiB,EAAUF,GAAS,GAAO,CACtDqB,GAAY,EACZ,KACF,CAIF,GADApjB,EAAMugB,WAAamC,EACfU,EAEF,OAAO,IAEX,CAEA,MAAMvQ,EAAM7S,EAAM4f,OAAOqC,GAAYjiB,EAAM8f,OAAOmC,GAC5CzS,EAAMxP,EAAM6f,OAAOoC,GAGzB,OAAOjiB,EAAM4S,IAAI5X,MAAM6X,EAAKrD,EAAM,EACpC,CAEA,IAAI/B,EAAMzN,EAAM4S,IAAI5X,MAAM6X,EAAKrD,EAAM,GAErCA,EAAM/B,EAAI9K,OACV,IAAI4S,GAAY,EAEhB,IAAK1C,EAAM,EAAGA,EAAMrD,EAAKqD,IAAO,CAC9B,MAAMpN,EAAKgI,EAAI7H,WAAWiN,GAC1B,GAAW,KAAPpN,EACF,OAAO,EACF,GAAW,KAAPA,EAAqB,CAC9B8P,EAAW1C,EACX,KACF,CAAO,GAAW,KAAPpN,EAAsB,CAC/B,MAAMugB,EAAcF,EAAY7D,GACZ,OAAhB+D,IACFvY,GAAOuY,EACPxW,EAAM/B,EAAI9K,OACVsf,IAEJ,MAAO,GAAW,KAAPxc,IACToN,IACIA,EAAMrD,GAA+B,KAAxB/B,EAAI7H,WAAWiN,IAAe,CAC7C,MAAMmT,EAAcF,EAAY7D,GACZ,OAAhB+D,IACFvY,GAAOuY,EACPxW,EAAM/B,EAAI9K,OACVsf,IAEJ,CAEJ,CAEA,GAAI1M,EAAW,GAAsC,KAAjC9H,EAAI7H,WAAW2P,EAAW,GAAsB,OAAO,EAI3E,IAAK1C,EAAM0C,EAAW,EAAG1C,EAAMrD,EAAKqD,IAAO,CACzC,MAAMpN,EAAKgI,EAAI7H,WAAWiN,GAC1B,GAAW,KAAPpN,EAAa,CACf,MAAMugB,EAAcF,EAAY7D,GACZ,OAAhB+D,IACFvY,GAAOuY,EACPxW,EAAM/B,EAAI9K,OACVsf,IAEJ,MAAO,IAAI7N,GAAQ3O,GAGjB,KAEJ,CAIA,MAAMwgB,EAAUjmB,EAAMoV,GAAG8Q,QAAQ1Q,qBAAqB/H,EAAKoF,EAAKrD,GAChE,IAAKyW,EAAQxQ,GAAM,OAAO,EAE1B,MAAM0Q,EAAOnmB,EAAMoV,GAAG4G,cAAciK,EAAQxY,KAC5C,IAAKzN,EAAMoV,GAAG6G,aAAakK,GAAS,OAAO,EAE3CtT,EAAMoT,EAAQpT,IAGd,MAAMuT,EAAavT,EACbwT,EAAgBpE,EAIhB3T,EAAQuE,EACd,KAAOA,EAAMrD,EAAKqD,IAAO,CACvB,MAAMpN,EAAKgI,EAAI7H,WAAWiN,GAC1B,GAAW,KAAPpN,EAAa,CACf,MAAMugB,EAAcF,EAAY7D,GACZ,OAAhB+D,IACFvY,GAAOuY,EACPxW,EAAM/B,EAAI9K,OACVsf,IAEJ,MAAO,IAAI7N,GAAQ3O,GAGjB,KAEJ,CAIA,IAUI6gB,EAVAC,EAAWvmB,EAAMoV,GAAG8Q,QAAQxQ,eAAejI,EAAKoF,EAAKrD,GACzD,MAAO+W,EAAS3Q,aAAc,CAC5B,MAAMoQ,EAAcF,EAAY7D,GAChC,GAAoB,OAAhB+D,EAAsB,MAC1BvY,GAAOuY,EACPnT,EAAMrD,EACNA,EAAM/B,EAAI9K,OACVsf,IACAsE,EAAWvmB,EAAMoV,GAAG8Q,QAAQxQ,eAAejI,EAAKoF,EAAKrD,EAAK+W,EAC5D,CAGI1T,EAAMrD,GAAOlB,IAAUuE,GAAO0T,EAAS9Q,IACzC6Q,EAAQC,EAAS9Y,IACjBoF,EAAM0T,EAAS1T,MAEfyT,EAAQ,GACRzT,EAAMuT,EACNnE,EAAWoE,GAIb,MAAOxT,EAAMrD,EAAK,CAChB,MAAM/J,EAAKgI,EAAI7H,WAAWiN,GAC1B,IAAKuB,GAAQ3O,GAAO,MACpBoN,GACF,CAEA,GAAIA,EAAMrD,GAA+B,KAAxB/B,EAAI7H,WAAWiN,IAC1ByT,EAAO,CAGTA,EAAQ,GACRzT,EAAMuT,EACNnE,EAAWoE,EACX,MAAOxT,EAAMrD,EAAK,CAChB,MAAM/J,EAAKgI,EAAI7H,WAAWiN,GAC1B,IAAKuB,GAAQ3O,GAAO,MACpBoN,GACF,CACF,CAGF,GAAIA,EAAMrD,GAA+B,KAAxB/B,EAAI7H,WAAWiN,GAE9B,OAAO,EAGT,MAAM2T,EAAQ/R,GAAmBhH,EAAIzS,MAAM,EAAGua,IAC9C,QAAKiR,IAODxE,IAEgC,qBAAzBhiB,EAAMmW,IAAIsQ,aACnBzmB,EAAMmW,IAAIsQ,WAAa,CAAC,GAEiB,qBAAhCzmB,EAAMmW,IAAIsQ,WAAWD,KAC9BxmB,EAAMmW,IAAIsQ,WAAWD,GAAS,CAAEF,QAAOH,SAGzCnmB,EAAMkgB,KAAO+B,IATQ,EAWvB,CChNA,QACE,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,SACA,UACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,MC/DF,MAAMyE,GAAgB,6BAEhBC,GAAgB,yBAChBC,GAAgB,UAChBC,GAAgB,UAEhBC,GAAc,MAAQH,GAAW,IAAMC,GAAgB,IAAMC,GAAgB,IAE7EE,GAAc,UAAYL,GAAY,eAAiBI,GAAa,MAEpEE,GAAc,2BAA6BD,GAAY,aAEvDE,GAAc,mCACdC,GAAc,iDACdC,GAAc,qBACdC,GAAc,mBACdC,GAAc,iCAEdC,GAAc,IAAIjU,OAAO,OAAS2T,GAAW,IAAMC,GAAY,IAAMC,GACnD,IAAMC,GAAa,IAAMC,GAAc,IAAMC,GAAQ,KACvEE,GAAyB,IAAIlU,OAAO,OAAS2T,GAAW,IAAMC,GAAY,KCd1EO,GAAiB,CACrB,CAAC,6CAA8C,oCAAoC,GACnF,CAAC,QAAgB,OAAS,GAC1B,CAAC,OAAgB,OAAS,GAC1B,CAAC,WAAgB,KAAS,GAC1B,CAAC,eAAgB,SAAS,GAC1B,CAAC,IAAInU,OAAO,QAAUoU,GAAY1c,KAAK,KAAO,mBAAoB,KAAM,MAAM,GAC9E,CAAC,IAAIsI,OAAOkU,GAAuB9U,OAAS,SAAW,MAAM,IAGhD,SAASoF,GAAY7X,EAAO8hB,EAAWC,EAASC,GAC7D,IAAInP,EAAM7S,EAAM4f,OAAOkC,GAAa9hB,EAAM8f,OAAOgC,GAC7CtS,EAAMxP,EAAM6f,OAAOiC,GAGvB,GAAI9hB,EAAM+f,OAAO+B,GAAa9hB,EAAMigB,WAAa,EAAK,OAAO,EAE7D,IAAKjgB,EAAMoV,GAAG5Y,QAAQkrB,KAAQ,OAAO,EAErC,GAAkC,KAA9B1nB,EAAM4S,IAAIhN,WAAWiN,GAAwB,OAAO,EAExD,IAAIuP,EAAWpiB,EAAM4S,IAAI5X,MAAM6X,EAAKrD,GAEhC5S,EAAI,EACR,KAAOA,EAAI4qB,GAAe7kB,OAAQ/F,IAChC,GAAI4qB,GAAe5qB,GAAG,GAAG6G,KAAK2e,GAAa,MAE7C,GAAIxlB,IAAM4qB,GAAe7kB,OAAU,OAAO,EAE1C,GAAIqf,EAEF,OAAOwF,GAAe5qB,GAAG,GAG3B,IAAIqlB,EAAWH,EAAY,EAI3B,IAAK0F,GAAe5qB,GAAG,GAAG6G,KAAK2e,GAC7B,KAAOH,EAAWF,EAASE,IAAY,CACrC,GAAIjiB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,UAAa,MAMhD,GAJApN,EAAM7S,EAAM4f,OAAOqC,GAAYjiB,EAAM8f,OAAOmC,GAC5CzS,EAAMxP,EAAM6f,OAAOoC,GACnBG,EAAWpiB,EAAM4S,IAAI5X,MAAM6X,EAAKrD,GAE5BgY,GAAe5qB,GAAG,GAAG6G,KAAK2e,GAAW,CACf,IAApBA,EAASzf,QAAgBsf,IAC7B,KACF,CACF,CAGFjiB,EAAMkgB,KAAO+B,EAEb,MAAM5L,EAAUrW,EAAM2F,KAAK,aAAc,GAAI,GAI7C,OAHA0Q,EAAMpL,IAAU,CAAC6W,EAAWG,GAC5B5L,EAAME,QAAUvW,EAAMkhB,SAASY,EAAWG,EAAUjiB,EAAMigB,WAAW,IAE9D,CACT,CChEe,SAAS0H,GAAS3nB,EAAO8hB,EAAWC,EAASC,GAC1D,IAAInP,EAAM7S,EAAM4f,OAAOkC,GAAa9hB,EAAM8f,OAAOgC,GAC7CtS,EAAMxP,EAAM6f,OAAOiC,GAGvB,GAAI9hB,EAAM+f,OAAO+B,GAAa9hB,EAAMigB,WAAa,EAAK,OAAO,EAE7D,IAAIxa,EAAMzF,EAAM4S,IAAIhN,WAAWiN,GAE/B,GAAW,KAAPpN,GAAsBoN,GAAOrD,EAAO,OAAO,EAG/C,IAAIsF,EAAQ,EACZrP,EAAKzF,EAAM4S,IAAIhN,aAAaiN,GAC5B,MAAc,KAAPpN,GAAsBoN,EAAMrD,GAAOsF,GAAS,EACjDA,IACArP,EAAKzF,EAAM4S,IAAIhN,aAAaiN,GAG9B,GAAIiC,EAAQ,GAAMjC,EAAMrD,IAAQ4E,GAAQ3O,GAAQ,OAAO,EAEvD,GAAIuc,EAAU,OAAO,EAIrBxS,EAAMxP,EAAM+gB,eAAevR,EAAKqD,GAChC,MAAM+U,EAAM5nB,EAAMihB,cAAczR,EAAK,GAAMqD,GACvC+U,EAAM/U,GAAOuB,GAAQpU,EAAM4S,IAAIhN,WAAWgiB,EAAM,MAClDpY,EAAMoY,GAGR5nB,EAAMkgB,KAAO4B,EAAY,EAEzB,MAAMzF,EAAWrc,EAAM2F,KAAK,eAAgB,IAAM5L,OAAO+a,GAAQ,GACjEuH,EAAQ9B,OAAS,WAAWvf,MAAM,EAAG8Z,GACrCuH,EAAQpR,IAAS,CAAC6W,EAAW9hB,EAAMkgB,MAEnC,MAAM2H,EAAa7nB,EAAM2F,KAAK,SAAU,GAAI,GAC5CkiB,EAAQtR,QAAWvW,EAAM4S,IAAI5X,MAAM6X,EAAKrD,GAAK9F,OAC7Cme,EAAQ5c,IAAW,CAAC6W,EAAW9hB,EAAMkgB,MACrC2H,EAAQvQ,SAAW,GAEnB,MAAMiF,EAAWvc,EAAM2F,KAAK,gBAAiB,IAAM5L,OAAO+a,IAAS,GAGnE,OAFAyH,EAAQhC,OAAS,WAAWvf,MAAM,EAAG8Z,IAE9B,CACT,CChDe,SAASgT,GAAU9nB,EAAO8hB,EAAWC,GAClD,MAAMY,EAAkB3iB,EAAMoV,GAAG4C,MAAMyH,MAAMrF,SAAS,aAGtD,GAAIpa,EAAM+f,OAAO+B,GAAa9hB,EAAMigB,WAAa,EAAK,OAAO,EAE7D,MAAMyC,EAAgB1iB,EAAMugB,WAC5BvgB,EAAMugB,WAAa,YAGnB,IACIvL,EADAF,EAAQ,EAERmN,EAAWH,EAAY,EAE3B,KAAOG,EAAWF,IAAY/hB,EAAM2gB,QAAQsB,GAAWA,IAAY,CAGjE,GAAIjiB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,UAAY,EAAK,SAKpD,GAAIjgB,EAAM+f,OAAOkC,IAAajiB,EAAMigB,UAAW,CAC7C,IAAIpN,EAAM7S,EAAM4f,OAAOqC,GAAYjiB,EAAM8f,OAAOmC,GAChD,MAAMzS,EAAMxP,EAAM6f,OAAOoC,GAEzB,GAAIpP,EAAMrD,IACRwF,EAAShV,EAAM4S,IAAIhN,WAAWiN,IAEf,KAAXmC,GAAqC,KAAXA,KAC5BnC,EAAM7S,EAAMghB,UAAUnO,EAAKmC,GAC3BnC,EAAM7S,EAAM8gB,WAAWjO,GAEnBA,GAAOrD,IAAK,CACdsF,EAAoB,KAAXE,EAAyB,EAAI,EACtC,KACF,CAGN,CAGA,GAAIhV,EAAM+f,OAAOkC,GAAY,EAAK,SAGlC,IAAImB,GAAY,EAChB,IAAK,IAAIxmB,EAAI,EAAGwJ,EAAIuc,EAAgBhgB,OAAQ/F,EAAIwJ,EAAGxJ,IACjD,GAAI+lB,EAAgB/lB,GAAGoD,EAAOiiB,EAAUF,GAAS,GAAO,CACtDqB,GAAY,EACZ,KACF,CAEF,GAAIA,EAAa,KACnB,CAEA,IAAKtO,EAEH,OAAO,EAGT,MAAMyB,EAAUvW,EAAMkhB,SAASY,EAAWG,EAAUjiB,EAAMigB,WAAW,GAAOvW,OAE5E1J,EAAMkgB,KAAO+B,EAAW,EAExB,MAAM5F,EAAarc,EAAM2F,KAAK,eAAgB,IAAM5L,OAAO+a,GAAQ,GACnEuH,EAAQ9B,OAAWxgB,OAAO2L,aAAasP,GACvCqH,EAAQpR,IAAW,CAAC6W,EAAW9hB,EAAMkgB,MAErC,MAAM2H,EAAa7nB,EAAM2F,KAAK,SAAU,GAAI,GAC5CkiB,EAAQtR,QAAWA,EACnBsR,EAAQ5c,IAAW,CAAC6W,EAAW9hB,EAAMkgB,KAAO,GAC5C2H,EAAQvQ,SAAW,GAEnB,MAAMiF,EAAavc,EAAM2F,KAAK,gBAAiB,IAAM5L,OAAO+a,IAAS,GAKrE,OAJAyH,EAAQhC,OAAWxgB,OAAO2L,aAAasP,GAEvChV,EAAMugB,WAAamC,GAEZ,CACT,CC/Ee,SAASqF,GAAW/nB,EAAO8hB,EAAWC,GACnD,MAAMY,EAAkB3iB,EAAMoV,GAAG4C,MAAMyH,MAAMrF,SAAS,aAChDsI,EAAgB1iB,EAAMugB,WAC5B,IAAI0B,EAAWH,EAAY,EAI3B,IAHA9hB,EAAMugB,WAAa,YAGZ0B,EAAWF,IAAY/hB,EAAM2gB,QAAQsB,GAAWA,IAAY,CAGjE,GAAIjiB,EAAM+f,OAAOkC,GAAYjiB,EAAMigB,UAAY,EAAK,SAGpD,GAAIjgB,EAAM+f,OAAOkC,GAAY,EAAK,SAGlC,IAAImB,GAAY,EAChB,IAAK,IAAIxmB,EAAI,EAAGwJ,EAAIuc,EAAgBhgB,OAAQ/F,EAAIwJ,EAAGxJ,IACjD,GAAI+lB,EAAgB/lB,GAAGoD,EAAOiiB,EAAUF,GAAS,GAAO,CACtDqB,GAAY,EACZ,KACF,CAEF,GAAIA,EAAa,KACnB,CAEA,MAAM7M,EAAUvW,EAAMkhB,SAASY,EAAWG,EAAUjiB,EAAMigB,WAAW,GAAOvW,OAE5E1J,EAAMkgB,KAAO+B,EAEb,MAAM5F,EAAarc,EAAM2F,KAAK,iBAAkB,IAAK,GACrD0W,EAAQpR,IAAW,CAAC6W,EAAW9hB,EAAMkgB,MAErC,MAAM2H,EAAa7nB,EAAM2F,KAAK,SAAU,GAAI,GAS5C,OARAkiB,EAAQtR,QAAWA,EACnBsR,EAAQ5c,IAAW,CAAC6W,EAAW9hB,EAAMkgB,MACrC2H,EAAQvQ,SAAW,GAEnBtX,EAAM2F,KAAK,kBAAmB,KAAM,GAEpC3F,EAAMugB,WAAamC,GAEZ,CACT,CCxBA,MAAM1D,GAAS,CAGb,CAAC,QAAcgJ,GAAc,CAAC,YAAa,cAC3C,CAAC,OAAcC,IACf,CAAC,QAAcC,GAAc,CAAC,YAAa,YAAa,aAAc,SACtE,CAAC,aAAcC,GAAc,CAAC,YAAa,YAAa,aAAc,SACtE,CAAC,KAAcC,GAAc,CAAC,YAAa,YAAa,aAAc,SACtE,CAAC,OAAcC,GAAc,CAAC,YAAa,YAAa,eACxD,CAAC,YAAcC,IACf,CAAC,aAAcC,GAAc,CAAC,YAAa,YAAa,eACxD,CAAC,UAAcC,GAAc,CAAC,YAAa,YAAa,eACxD,CAAC,WAAcC,IACf,CAAC,YAAcC,KAMjB,SAASC,KAMP5nB,KAAK0e,MAAQ,IAAIjH,GAEjB,IAAK,IAAI5b,EAAI,EAAGA,EAAIoiB,GAAOrc,OAAQ/F,IACjCmE,KAAK0e,MAAM9Z,KAAKqZ,GAAOpiB,GAAG,GAAIoiB,GAAOpiB,GAAG,GAAI,CAAEqc,KAAM+F,GAAOpiB,GAAG,IAAM,IAAI5B,SAE5E,CAIA2tB,GAAYjuB,UAAU8pB,SAAW,SAAUxkB,EAAO8hB,EAAWC,GAC3D,MAAMhM,EAAQhV,KAAK0e,MAAMrF,SAAS,IAC5B9Y,EAAMyU,EAAMpT,OACZimB,EAAa5oB,EAAMoV,GAAG5Y,QAAQosB,WACpC,IAAI1I,EAAO4B,EACP+G,GAAgB,EAEpB,MAAO3I,EAAO6B,EAAS,CAErB,GADA/hB,EAAMkgB,KAAOA,EAAOlgB,EAAM4gB,eAAeV,GACrCA,GAAQ6B,EAAW,MAIvB,GAAI/hB,EAAM+f,OAAOG,GAAQlgB,EAAMigB,UAAa,MAI5C,GAAIjgB,EAAM8U,OAAS8T,EAAY,CAC7B5oB,EAAMkgB,KAAO6B,EACb,KACF,CAQA,MAAM+G,EAAW9oB,EAAMkgB,KACvB,IAAIzK,GAAK,EAET,IAAK,IAAI7Y,EAAI,EAAGA,EAAI0E,EAAK1E,IAEvB,GADA6Y,EAAKM,EAAMnZ,GAAGoD,EAAOkgB,EAAM6B,GAAS,GAChCtM,EAAI,CACN,GAAIqT,GAAY9oB,EAAMkgB,KACpB,MAAM,IAAI3G,MAAM,0CAElB,KACF,CAIF,IAAK9D,EAAI,MAAM,IAAI8D,MAAM,mCAIzBvZ,EAAMogB,OAASyI,EAGX7oB,EAAM2gB,QAAQ3gB,EAAMkgB,KAAO,KAC7B2I,GAAgB,GAGlB3I,EAAOlgB,EAAMkgB,KAETA,EAAO6B,GAAW/hB,EAAM2gB,QAAQT,KAClC2I,GAAgB,EAChB3I,IACAlgB,EAAMkgB,KAAOA,EAEjB,CACF,EAOAyI,GAAYjuB,UAAU4O,MAAQ,SAAUsJ,EAAKwC,EAAIe,EAAK4S,GACpD,IAAKnW,EAAO,OAEZ,MAAM5S,EAAQ,IAAIe,KAAK2e,MAAM9M,EAAKwC,EAAIe,EAAK4S,GAE3ChoB,KAAKyjB,SAASxkB,EAAOA,EAAMkgB,KAAMlgB,EAAMmgB,QACzC,EAEAwI,GAAYjuB,UAAUglB,MAAQC,GAE9B,UChIA,SAASqJ,GAAapW,EAAKwC,EAAIe,EAAK4S,GAClChoB,KAAK6R,IAAMA,EACX7R,KAAKoV,IAAMA,EACXpV,KAAKqU,GAAKA,EACVrU,KAAKkV,OAAS8S,EACdhoB,KAAKkoB,YAAcvlB,MAAMqlB,EAAUpmB,QAEnC5B,KAAK8R,IAAM,EACX9R,KAAKmU,OAASnU,KAAK6R,IAAIjQ,OACvB5B,KAAK+T,MAAQ,EACb/T,KAAKmoB,QAAU,GACfnoB,KAAKooB,aAAe,EAIpBpoB,KAAKyE,MAAQ,CAAC,EAGdzE,KAAKqoB,WAAa,GAGlBroB,KAAKsoB,iBAAmB,GAGxBtoB,KAAKuoB,UAAY,CAAC,EAClBvoB,KAAKwoB,kBAAmB,EAIxBxoB,KAAKyoB,UAAY,CACnB,CAIAR,GAAYtuB,UAAU+uB,YAAc,WAClC,MAAMpT,EAAQ,IAAIiE,GAAM,OAAQ,GAAI,GAKpC,OAJAjE,EAAME,QAAUxV,KAAKmoB,QACrB7S,EAAMvB,MAAQ/T,KAAKooB,aACnBpoB,KAAKkV,OAAOtQ,KAAK0Q,GACjBtV,KAAKmoB,QAAU,GACR7S,CACT,EAKA2S,GAAYtuB,UAAUiL,KAAO,SAAU0S,EAAMH,EAAKD,GAC5ClX,KAAKmoB,SACPnoB,KAAK0oB,cAGP,MAAMpT,EAAQ,IAAIiE,GAAMjC,EAAMH,EAAKD,GACnC,IAAIyR,EAAa,KAqBjB,OAnBIzR,EAAU,IAEZlX,KAAK+T,QACL/T,KAAKqoB,WAAaroB,KAAKsoB,iBAAiB7G,OAG1CnM,EAAMvB,MAAQ/T,KAAK+T,MAEfmD,EAAU,IAEZlX,KAAK+T,QACL/T,KAAKsoB,iBAAiB1jB,KAAK5E,KAAKqoB,YAChCroB,KAAKqoB,WAAa,GAClBM,EAAa,CAAEN,WAAYroB,KAAKqoB,aAGlCroB,KAAKooB,aAAepoB,KAAK+T,MACzB/T,KAAKkV,OAAOtQ,KAAK0Q,GACjBtV,KAAKkoB,YAAYtjB,KAAK+jB,GACfrT,CACT,EAQA2S,GAAYtuB,UAAUivB,WAAa,SAAUrb,EAAOsb,GAClD,MAAMpa,EAAMzO,KAAKmU,OACXF,EAASjU,KAAK6R,IAAIhN,WAAW0I,GAG7B2P,EAAW3P,EAAQ,EAAIvN,KAAK6R,IAAIhN,WAAW0I,EAAQ,GAAK,GAE9D,IAAIuE,EAAMvE,EACV,MAAOuE,EAAMrD,GAAOzO,KAAK6R,IAAIhN,WAAWiN,KAASmC,EAAUnC,IAE3D,MAAMgX,EAAQhX,EAAMvE,EAGd4P,EAAWrL,EAAMrD,EAAMzO,KAAK6R,IAAIhN,WAAWiN,GAAO,GAElDsL,EAAkB3J,GAAeyJ,IAAa3J,GAAYva,OAAO2L,aAAauY,IAC9EG,EAAkB5J,GAAe0J,IAAa5J,GAAYva,OAAO2L,aAAawY,IAE9EG,EAAmBhK,GAAa4J,GAChCK,EAAmBjK,GAAa6J,GAEhC4L,GACHxL,KAAsBF,GAAmBC,GAAoBF,GAC1D4L,GACH1L,KAAsBF,GAAmBG,GAAoBF,GAE1D4L,EAAYF,IAAmBF,IAAiBG,GAAkB5L,GAClE8L,EAAYF,IAAmBH,IAAiBE,GAAkB1L,GAExE,MAAO,CAAE4L,WAAUC,YAAWtnB,OAAQknB,EACxC,EAGAb,GAAYtuB,UAAU4f,MAAQA,GAE9B,UChHA,SAAS4P,GAAkBzkB,GACzB,OAAQA,GACN,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,IACL,KAAK,IACH,OAAO,EACT,QACE,OAAO,EAEb,CAEe,SAASmS,GAAM5X,EAAOgiB,GACnC,IAAInP,EAAM7S,EAAM6S,IAEhB,MAAOA,EAAM7S,EAAMkV,SAAWgV,GAAiBlqB,EAAM4S,IAAIhN,WAAWiN,IAClEA,IAGF,OAAIA,IAAQ7S,EAAM6S,MAEbmP,IAAUhiB,EAAMkpB,SAAWlpB,EAAM4S,IAAI5X,MAAMgF,EAAM6S,IAAKA,IAE3D7S,EAAM6S,IAAMA,GAEL,EACT,CCpDA,MAAMsX,GAAY,0CAEH,SAAS7O,GAAStb,EAAOgiB,GACtC,IAAKhiB,EAAMoV,GAAG5Y,QAAQ8e,QAAS,OAAO,EACtC,GAAItb,EAAMwpB,UAAY,EAAG,OAAO,EAEhC,MAAM3W,EAAM7S,EAAM6S,IACZrD,EAAMxP,EAAMkV,OAElB,GAAIrC,EAAM,EAAIrD,EAAK,OAAO,EAC1B,GAAkC,KAA9BxP,EAAM4S,IAAIhN,WAAWiN,GAAsB,OAAO,EACtD,GAAsC,KAAlC7S,EAAM4S,IAAIhN,WAAWiN,EAAM,GAAoB,OAAO,EAC1D,GAAsC,KAAlC7S,EAAM4S,IAAIhN,WAAWiN,EAAM,GAAoB,OAAO,EAE1D,MAAM7I,EAAQhK,EAAMkpB,QAAQlf,MAAMmgB,IAClC,IAAKngB,EAAO,OAAO,EAEnB,MAAMjK,EAAQiK,EAAM,GAEdogB,EAAOpqB,EAAMoV,GAAGkG,QAAQ+O,aAAarqB,EAAM4S,IAAI5X,MAAM6X,EAAM9S,EAAM4C,SACvE,IAAKynB,EAAM,OAAO,EAElB,IAAIhjB,EAAMgjB,EAAKhjB,IAIf,GAAIA,EAAIzE,QAAU5C,EAAM4C,OAAQ,OAAO,EAGvCyE,EAAMA,EAAInB,QAAQ,OAAQ,IAE1B,MAAM8V,EAAU/b,EAAMoV,GAAG4G,cAAc5U,GACvC,IAAKpH,EAAMoV,GAAG6G,aAAaF,GAAU,OAAO,EAE5C,IAAKiG,EAAQ,CACXhiB,EAAMkpB,QAAUlpB,EAAMkpB,QAAQluB,MAAM,GAAI+E,EAAM4C,QAE9C,MAAM0Z,EAAUrc,EAAM2F,KAAK,YAAa,IAAK,GAC7C0W,EAAQpF,MAAQ,CAAC,CAAC,OAAQ8E,IAC1BM,EAAQ9B,OAAS,UACjB8B,EAAQ3F,KAAO,OAEf,MAAM4F,EAAUtc,EAAM2F,KAAK,OAAQ,GAAI,GACvC2W,EAAQ/F,QAAUvW,EAAMoV,GAAGgH,kBAAkBhV,GAE7C,MAAMmV,EAAUvc,EAAM2F,KAAK,aAAc,KAAM,GAC/C4W,EAAQhC,OAAS,UACjBgC,EAAQ7F,KAAO,MACjB,CAGA,OADA1W,EAAM6S,KAAOzL,EAAIzE,OAAS5C,EAAM4C,QACzB,CACT,CCnDe,SAAS2nB,GAAStqB,EAAOgiB,GACtC,IAAInP,EAAM7S,EAAM6S,IAEhB,GAAkC,KAA9B7S,EAAM4S,IAAIhN,WAAWiN,GAAyB,OAAO,EAEzD,MAAM0X,EAAOvqB,EAAMkpB,QAAQvmB,OAAS,EAC9B6M,EAAMxP,EAAMkV,OAMlB,IAAK8M,EACH,GAAIuI,GAAQ,GAAwC,KAAnCvqB,EAAMkpB,QAAQtjB,WAAW2kB,GACxC,GAAIA,GAAQ,GAA4C,KAAvCvqB,EAAMkpB,QAAQtjB,WAAW2kB,EAAO,GAAa,CAE5D,IAAIC,EAAKD,EAAO,EAChB,MAAOC,GAAM,GAA0C,KAArCxqB,EAAMkpB,QAAQtjB,WAAW4kB,EAAK,GAAaA,IAE7DxqB,EAAMkpB,QAAUlpB,EAAMkpB,QAAQluB,MAAM,EAAGwvB,GACvCxqB,EAAM2F,KAAK,YAAa,KAAM,EAChC,MACE3F,EAAMkpB,QAAUlpB,EAAMkpB,QAAQluB,MAAM,GAAI,GACxCgF,EAAM2F,KAAK,YAAa,KAAM,QAGhC3F,EAAM2F,KAAK,YAAa,KAAM,GAIlCkN,IAGA,MAAOA,EAAMrD,GAAO4E,GAAQpU,EAAM4S,IAAIhN,WAAWiN,IAASA,IAG1D,OADA7S,EAAM6S,IAAMA,GACL,CACT,CCrCA,MAAM4X,GAAU,GAEhB,IAAK,IAAI7tB,GAAI,EAAGA,GAAI,IAAKA,KAAO6tB,GAAQ9kB,KAAK,GAK9B,SAAS+kB,GAAQ1qB,EAAOgiB,GACrC,IAAInP,EAAM7S,EAAM6S,IAChB,MAAMrD,EAAMxP,EAAMkV,OAElB,GAAkC,KAA9BlV,EAAM4S,IAAIhN,WAAWiN,GAAsB,OAAO,EAItD,GAHAA,IAGIA,GAAOrD,EAAK,OAAO,EAEvB,IAAImb,EAAM3qB,EAAM4S,IAAIhN,WAAWiN,GAE/B,GAAY,KAAR8X,EAAc,CACX3I,GACHhiB,EAAM2F,KAAK,YAAa,KAAM,GAGhCkN,IAEA,MAAOA,EAAMrD,EAAK,CAEhB,GADAmb,EAAM3qB,EAAM4S,IAAIhN,WAAWiN,IACtBuB,GAAQuW,GAAM,MACnB9X,GACF,CAGA,OADA7S,EAAM6S,IAAMA,GACL,CACT,CAEA,IAAI+X,EAAa5qB,EAAM4S,IAAIC,GAE3B,GAAI8X,GAAO,OAAUA,GAAO,OAAU9X,EAAM,EAAIrD,EAAK,CACnD,MAAMqb,EAAM7qB,EAAM4S,IAAIhN,WAAWiN,EAAM,GAEnCgY,GAAO,OAAUA,GAAO,QAC1BD,GAAc5qB,EAAM4S,IAAIC,EAAM,GAC9BA,IAEJ,CAEA,MAAMiY,EAAU,KAAOF,EAEvB,IAAK5I,EAAQ,CACX,MAAM3L,EAAQrW,EAAM2F,KAAK,eAAgB,GAAI,GAEzCglB,EAAM,KAAwB,IAAjBF,GAAQE,GACvBtU,EAAME,QAAUqU,EAEhBvU,EAAME,QAAUuU,EAGlBzU,EAAMkE,OAASuQ,EACfzU,EAAMK,KAAS,QACjB,CAGA,OADA1W,EAAM6S,IAAMA,EAAM,GACX,CACT,CClEe,SAASkY,GAAU/qB,EAAOgiB,GACvC,IAAInP,EAAM7S,EAAM6S,IAChB,MAAMpN,EAAKzF,EAAM4S,IAAIhN,WAAWiN,GAEhC,GAAW,KAAPpN,EAAsB,OAAO,EAEjC,MAAM6I,EAAQuE,EACdA,IACA,MAAMrD,EAAMxP,EAAMkV,OAGlB,MAAOrC,EAAMrD,GAAqC,KAA9BxP,EAAM4S,IAAIhN,WAAWiN,GAAwBA,IAEjE,MAAMmC,EAAShV,EAAM4S,IAAI5X,MAAMsT,EAAOuE,GAChCmY,EAAehW,EAAOrS,OAE5B,GAAI3C,EAAMupB,mBAAqBvpB,EAAMspB,UAAU0B,IAAiB,IAAM1c,EAGpE,OAFK0T,IAAQhiB,EAAMkpB,SAAWlU,GAC9BhV,EAAM6S,KAAOmY,GACN,EAGT,IACIC,EADAC,EAAWrY,EAIf,OAA4D,KAApDoY,EAAajrB,EAAM4S,IAAInL,QAAQ,IAAKyjB,IAAmB,CAC7DA,EAAWD,EAAa,EAGxB,MAAOC,EAAW1b,GAA0C,KAAnCxP,EAAM4S,IAAIhN,WAAWslB,GAA6BA,IAE3E,MAAMC,EAAeD,EAAWD,EAEhC,GAAIE,IAAiBH,EAAc,CAEjC,IAAKhJ,EAAQ,CACX,MAAM3L,EAAQrW,EAAM2F,KAAK,cAAe,OAAQ,GAChD0Q,EAAMkE,OAASvF,EACfqB,EAAME,QAAUvW,EAAM4S,IAAI5X,MAAM6X,EAAKoY,GAClChlB,QAAQ,MAAO,KACfA,QAAQ,WAAY,KACzB,CAEA,OADAjG,EAAM6S,IAAMqY,GACL,CACT,CAGAlrB,EAAMspB,UAAU6B,GAAgBF,CAClC,CAOA,OAJAjrB,EAAMupB,kBAAmB,EAEpBvH,IAAQhiB,EAAMkpB,SAAWlU,GAC9BhV,EAAM6S,KAAOmY,GACN,CACT,CCtDA,SAASI,GAAwBprB,EAAOgiB,GACtC,MAAM1T,EAAQtO,EAAM6S,IACdmC,EAAShV,EAAM4S,IAAIhN,WAAW0I,GAEpC,GAAI0T,EAAU,OAAO,EAErB,GAAe,MAAXhN,EAA0B,OAAO,EAErC,MAAMqW,EAAUrrB,EAAM2pB,WAAW3pB,EAAM6S,KAAK,GAC5C,IAAIvR,EAAM+pB,EAAQ1oB,OAClB,MAAM8C,EAAK1L,OAAO2L,aAAasP,GAE/B,GAAI1T,EAAM,EAAK,OAAO,EAEtB,IAAI+U,EAEA/U,EAAM,IACR+U,EAAgBrW,EAAM2F,KAAK,OAAQ,GAAI,GACvC0Q,EAAME,QAAU9Q,EAChBnE,KAGF,IAAK,IAAI1E,EAAI,EAAGA,EAAI0E,EAAK1E,GAAK,EAC5ByZ,EAAgBrW,EAAM2F,KAAK,OAAQ,GAAI,GACvC0Q,EAAME,QAAU9Q,EAAKA,EAErBzF,EAAMopB,WAAWzjB,KAAK,CACpBqP,SACArS,OAAQ,EACR0T,MAAOrW,EAAMiW,OAAOtT,OAAS,EAC7B4L,KAAM,EACN+c,KAAMD,EAAQrB,SACduB,MAAOF,EAAQpB,YAMnB,OAFAjqB,EAAM6S,KAAOwY,EAAQ1oB,QAEd,CACT,CAEA,SAAS6oB,GAAaxrB,EAAOopB,GAC3B,IAAI/S,EACJ,MAAMoV,EAAc,GACdjc,EAAM4Z,EAAWzmB,OAEvB,IAAK,IAAI/F,EAAI,EAAGA,EAAI4S,EAAK5S,IAAK,CAC5B,MAAM8uB,EAAatC,EAAWxsB,GAE9B,GAA0B,MAAtB8uB,EAAW1W,OACb,SAGF,IAAwB,IAApB0W,EAAWnd,IACb,SAGF,MAAMod,EAAWvC,EAAWsC,EAAWnd,KAEvC8H,EAAgBrW,EAAMiW,OAAOyV,EAAWrV,OACxCA,EAAMgC,KAAU,SAChBhC,EAAM6B,IAAU,IAChB7B,EAAM4B,QAAU,EAChB5B,EAAMkE,OAAU,KAChBlE,EAAME,QAAU,GAEhBF,EAAgBrW,EAAMiW,OAAO0V,EAAStV,OACtCA,EAAMgC,KAAU,UAChBhC,EAAM6B,IAAU,IAChB7B,EAAM4B,SAAW,EACjB5B,EAAMkE,OAAU,KAChBlE,EAAME,QAAU,GAE8B,SAA1CvW,EAAMiW,OAAO0V,EAAStV,MAAQ,GAAGgC,MACY,MAA7CrY,EAAMiW,OAAO0V,EAAStV,MAAQ,GAAGE,SACnCkV,EAAY9lB,KAAKgmB,EAAStV,MAAQ,EAEtC,CAQA,MAAOoV,EAAY9oB,OAAQ,CACzB,MAAM/F,EAAI6uB,EAAYjJ,MACtB,IAAI9X,EAAI9N,EAAI,EAEZ,MAAO8N,EAAI1K,EAAMiW,OAAOtT,QAAmC,YAAzB3C,EAAMiW,OAAOvL,GAAG2N,KAChD3N,IAGFA,IAEI9N,IAAM8N,IACR2L,EAAQrW,EAAMiW,OAAOvL,GACrB1K,EAAMiW,OAAOvL,GAAK1K,EAAMiW,OAAOrZ,GAC/BoD,EAAMiW,OAAOrZ,GAAKyZ,EAEtB,CACF,CAIA,SAASuV,GAA2B5rB,GAClC,MAAMipB,EAAcjpB,EAAMipB,YACpBzZ,EAAMxP,EAAMipB,YAAYtmB,OAE9B6oB,GAAYxrB,EAAOA,EAAMopB,YAEzB,IAAK,IAAItK,EAAO,EAAGA,EAAOtP,EAAKsP,IACzBmK,EAAYnK,IAASmK,EAAYnK,GAAMsK,YACzCoC,GAAYxrB,EAAOipB,EAAYnK,GAAMsK,WAG3C,CFjHA,qCACGzf,MAAM,IAAI6I,SAAQ,SAAU/M,GAAMglB,GAAQhlB,EAAGG,WAAW,IAAM,CAAE,IEkHnE,QACE4e,SAAU4G,GACVI,YAAaI,ICxHf,SAASC,GAAmB7rB,EAAOgiB,GACjC,MAAM1T,EAAQtO,EAAM6S,IACdmC,EAAShV,EAAM4S,IAAIhN,WAAW0I,GAEpC,GAAI0T,EAAU,OAAO,EAErB,GAAe,KAAXhN,GAAsC,KAAXA,EAA2B,OAAO,EAEjE,MAAMqW,EAAUrrB,EAAM2pB,WAAW3pB,EAAM6S,IAAgB,KAAXmC,GAE5C,IAAK,IAAIpY,EAAI,EAAGA,EAAIyuB,EAAQ1oB,OAAQ/F,IAAK,CACvC,MAAMyZ,EAAQrW,EAAM2F,KAAK,OAAQ,GAAI,GACrC0Q,EAAME,QAAUxc,OAAO2L,aAAasP,GAEpChV,EAAMopB,WAAWzjB,KAAK,CAGpBqP,SAIArS,OAAQ0oB,EAAQ1oB,OAIhB0T,MAAOrW,EAAMiW,OAAOtT,OAAS,EAK7B4L,KAAM,EAKN+c,KAAMD,EAAQrB,SACduB,MAAOF,EAAQpB,WAEnB,CAIA,OAFAjqB,EAAM6S,KAAOwY,EAAQ1oB,QAEd,CACT,CAEA,SAAS6oB,GAAaxrB,EAAOopB,GAC3B,MAAM5Z,EAAM4Z,EAAWzmB,OAEvB,IAAK,IAAI/F,EAAI4S,EAAM,EAAG5S,GAAK,EAAGA,IAAK,CACjC,MAAM8uB,EAAatC,EAAWxsB,GAE9B,GAA0B,KAAtB8uB,EAAW1W,QAAgD,KAAtB0W,EAAW1W,OAClD,SAIF,IAAwB,IAApB0W,EAAWnd,IACb,SAGF,MAAMod,EAAWvC,EAAWsC,EAAWnd,KAOjCud,EAAWlvB,EAAI,GACVwsB,EAAWxsB,EAAI,GAAG2R,MAAQmd,EAAWnd,IAAM,GAE3C6a,EAAWxsB,EAAI,GAAGoY,SAAW0W,EAAW1W,QACxCoU,EAAWxsB,EAAI,GAAGyZ,QAAUqV,EAAWrV,MAAQ,GAE/C+S,EAAWsC,EAAWnd,IAAM,GAAG8H,QAAUsV,EAAStV,MAAQ,EAE/D5Q,EAAK1L,OAAO2L,aAAagmB,EAAW1W,QAEpCqH,EAAYrc,EAAMiW,OAAOyV,EAAWrV,OAC1CgG,EAAQhE,KAAUyT,EAAW,cAAgB,UAC7CzP,EAAQnE,IAAU4T,EAAW,SAAW,KACxCzP,EAAQpE,QAAU,EAClBoE,EAAQ9B,OAAUuR,EAAWrmB,EAAKA,EAAKA,EACvC4W,EAAQ9F,QAAU,GAElB,MAAMgG,EAAYvc,EAAMiW,OAAO0V,EAAStV,OACxCkG,EAAQlE,KAAUyT,EAAW,eAAiB,WAC9CvP,EAAQrE,IAAU4T,EAAW,SAAW,KACxCvP,EAAQtE,SAAW,EACnBsE,EAAQhC,OAAUuR,EAAWrmB,EAAKA,EAAKA,EACvC8W,EAAQhG,QAAU,GAEduV,IACF9rB,EAAMiW,OAAOmT,EAAWxsB,EAAI,GAAGyZ,OAAOE,QAAU,GAChDvW,EAAMiW,OAAOmT,EAAWsC,EAAWnd,IAAM,GAAG8H,OAAOE,QAAU,GAC7D3Z,IAEJ,CACF,CAIA,SAASmvB,GAAuB/rB,GAC9B,MAAMipB,EAAcjpB,EAAMipB,YACpBzZ,EAAMxP,EAAMipB,YAAYtmB,OAE9B6oB,GAAYxrB,EAAOA,EAAMopB,YAEzB,IAAK,IAAItK,EAAO,EAAGA,EAAOtP,EAAKsP,IACzBmK,EAAYnK,IAASmK,EAAYnK,GAAMsK,YACzCoC,GAAYxrB,EAAOipB,EAAYnK,GAAMsK,WAG3C,CAEA,QACE5E,SAAUqH,GACVL,YAAaO,ICrHA,SAAS3B,GAAMpqB,EAAOgiB,GACnC,IAAIhb,EAAMwf,EAAOwF,EAAKC,EAClB9F,EAAO,GACPG,EAAQ,GACRhY,EAAQtO,EAAM6S,IACdqZ,GAAiB,EAErB,GAAwC,KAApClsB,EAAM4S,IAAIhN,WAAW5F,EAAM6S,KAAwB,OAAO,EAE9D,MAAMsC,EAASnV,EAAM6S,IACfrD,EAAMxP,EAAMkV,OACZiX,EAAansB,EAAM6S,IAAM,EACzB0C,EAAWvV,EAAMoV,GAAG8Q,QAAQtR,eAAe5U,EAAOA,EAAM6S,KAAK,GAGnE,GAAI0C,EAAW,EAAK,OAAO,EAE3B,IAAI1C,EAAM0C,EAAW,EACrB,GAAI1C,EAAMrD,GAAqC,KAA9BxP,EAAM4S,IAAIhN,WAAWiN,GAAsB,CAW1D,IALAqZ,GAAiB,EAIjBrZ,IACOA,EAAMrD,EAAKqD,IAEhB,GADA7L,EAAOhH,EAAM4S,IAAIhN,WAAWiN,IACvBuB,GAAQpN,IAAkB,KAATA,EAAiB,MAEzC,GAAI6L,GAAOrD,EAAO,OAAO,EAMzB,GAFAlB,EAAQuE,EACRmZ,EAAMhsB,EAAMoV,GAAG8Q,QAAQ1Q,qBAAqBxV,EAAM4S,IAAKC,EAAK7S,EAAMkV,QAC9D8W,EAAIvW,GAAI,CAWV,IAVA0Q,EAAOnmB,EAAMoV,GAAG4G,cAAcgQ,EAAIve,KAC9BzN,EAAMoV,GAAG6G,aAAakK,GACxBtT,EAAMmZ,EAAInZ,IAEVsT,EAAO,GAKT7X,EAAQuE,EACDA,EAAMrD,EAAKqD,IAEhB,GADA7L,EAAOhH,EAAM4S,IAAIhN,WAAWiN,IACvBuB,GAAQpN,IAAkB,KAATA,EAAiB,MAMzC,GADAglB,EAAMhsB,EAAMoV,GAAG8Q,QAAQxQ,eAAe1V,EAAM4S,IAAKC,EAAK7S,EAAMkV,QACxDrC,EAAMrD,GAAOlB,IAAUuE,GAAOmZ,EAAIvW,GAMpC,IALA6Q,EAAQ0F,EAAIve,IACZoF,EAAMmZ,EAAInZ,IAIHA,EAAMrD,EAAKqD,IAEhB,GADA7L,EAAOhH,EAAM4S,IAAIhN,WAAWiN,IACvBuB,GAAQpN,IAAkB,KAATA,EAAiB,KAG7C,EAEI6L,GAAOrD,GAAqC,KAA9BxP,EAAM4S,IAAIhN,WAAWiN,MAErCqZ,GAAiB,GAEnBrZ,GACF,CAEA,GAAIqZ,EAAgB,CAIlB,GAAoC,qBAAzBlsB,EAAMmW,IAAIsQ,WAA8B,OAAO,EAmB1D,GAjBI5T,EAAMrD,GAAqC,KAA9BxP,EAAM4S,IAAIhN,WAAWiN,IACpCvE,EAAQuE,EAAM,EACdA,EAAM7S,EAAMoV,GAAG8Q,QAAQtR,eAAe5U,EAAO6S,GACzCA,GAAO,EACT2T,EAAQxmB,EAAM4S,IAAI5X,MAAMsT,EAAOuE,KAE/BA,EAAM0C,EAAW,GAGnB1C,EAAM0C,EAAW,EAKdiR,IAASA,EAAQxmB,EAAM4S,IAAI5X,MAAMmxB,EAAY5W,IAElD0W,EAAMjsB,EAAMmW,IAAIsQ,WAAWhS,GAAmB+R,KACzCyF,EAEH,OADAjsB,EAAM6S,IAAMsC,GACL,EAETgR,EAAO8F,EAAI9F,KACXG,EAAQ2F,EAAI3F,KACd,CAMA,IAAKtE,EAAQ,CACXhiB,EAAM6S,IAAMsZ,EACZnsB,EAAMkV,OAASK,EAEf,MAAM8G,EAAUrc,EAAM2F,KAAK,YAAa,IAAK,GACvCsR,EAAQ,CAAC,CAAC,OAAQkP,IACxB9J,EAAQpF,MAASA,EACbqP,GACFrP,EAAMtR,KAAK,CAAC,QAAS2gB,IAGvBtmB,EAAMwpB,YACNxpB,EAAMoV,GAAGC,OAAOmP,SAASxkB,GACzBA,EAAMwpB,YAENxpB,EAAM2F,KAAK,aAAc,KAAM,EACjC,CAIA,OAFA3F,EAAM6S,IAAMA,EACZ7S,EAAMkV,OAAS1F,GACR,CACT,CCtIe,SAAS4H,GAAOpX,EAAOgiB,GACpC,IAAIhb,EAAMuP,EAASiQ,EAAO3T,EAAKoZ,EAAKD,EAAK1F,EAAOhY,EAC5C6X,EAAO,GACX,MAAMhR,EAASnV,EAAM6S,IACfrD,EAAMxP,EAAMkV,OAElB,GAAwC,KAApClV,EAAM4S,IAAIhN,WAAW5F,EAAM6S,KAAwB,OAAO,EAC9D,GAA4C,KAAxC7S,EAAM4S,IAAIhN,WAAW5F,EAAM6S,IAAM,GAAsB,OAAO,EAElE,MAAMsZ,EAAansB,EAAM6S,IAAM,EACzB0C,EAAWvV,EAAMoV,GAAG8Q,QAAQtR,eAAe5U,EAAOA,EAAM6S,IAAM,GAAG,GAGvE,GAAI0C,EAAW,EAAK,OAAO,EAG3B,GADA1C,EAAM0C,EAAW,EACb1C,EAAMrD,GAAqC,KAA9BxP,EAAM4S,IAAIhN,WAAWiN,GAAsB,CAQ1D,IADAA,IACOA,EAAMrD,EAAKqD,IAEhB,GADA7L,EAAOhH,EAAM4S,IAAIhN,WAAWiN,IACvBuB,GAAQpN,IAAkB,KAATA,EAAiB,MAEzC,GAAI6L,GAAOrD,EAAO,OAAO,EAkBzB,IAdAlB,EAAQuE,EACRmZ,EAAMhsB,EAAMoV,GAAG8Q,QAAQ1Q,qBAAqBxV,EAAM4S,IAAKC,EAAK7S,EAAMkV,QAC9D8W,EAAIvW,KACN0Q,EAAOnmB,EAAMoV,GAAG4G,cAAcgQ,EAAIve,KAC9BzN,EAAMoV,GAAG6G,aAAakK,GACxBtT,EAAMmZ,EAAInZ,IAEVsT,EAAO,IAMX7X,EAAQuE,EACDA,EAAMrD,EAAKqD,IAEhB,GADA7L,EAAOhH,EAAM4S,IAAIhN,WAAWiN,IACvBuB,GAAQpN,IAAkB,KAATA,EAAiB,MAMzC,GADAglB,EAAMhsB,EAAMoV,GAAG8Q,QAAQxQ,eAAe1V,EAAM4S,IAAKC,EAAK7S,EAAMkV,QACxDrC,EAAMrD,GAAOlB,IAAUuE,GAAOmZ,EAAIvW,IAMpC,IALA6Q,EAAQ0F,EAAIve,IACZoF,EAAMmZ,EAAInZ,IAIHA,EAAMrD,EAAKqD,IAEhB,GADA7L,EAAOhH,EAAM4S,IAAIhN,WAAWiN,IACvBuB,GAAQpN,IAAkB,KAATA,EAAiB,WAGzCsf,EAAQ,GAGV,GAAIzT,GAAOrD,GAAqC,KAA9BxP,EAAM4S,IAAIhN,WAAWiN,GAErC,OADA7S,EAAM6S,IAAMsC,GACL,EAETtC,GACF,KAAO,CAIL,GAAoC,qBAAzB7S,EAAMmW,IAAIsQ,WAA8B,OAAO,EAmB1D,GAjBI5T,EAAMrD,GAAqC,KAA9BxP,EAAM4S,IAAIhN,WAAWiN,IACpCvE,EAAQuE,EAAM,EACdA,EAAM7S,EAAMoV,GAAG8Q,QAAQtR,eAAe5U,EAAO6S,GACzCA,GAAO,EACT2T,EAAQxmB,EAAM4S,IAAI5X,MAAMsT,EAAOuE,KAE/BA,EAAM0C,EAAW,GAGnB1C,EAAM0C,EAAW,EAKdiR,IAASA,EAAQxmB,EAAM4S,IAAI5X,MAAMmxB,EAAY5W,IAElD0W,EAAMjsB,EAAMmW,IAAIsQ,WAAWhS,GAAmB+R,KACzCyF,EAEH,OADAjsB,EAAM6S,IAAMsC,GACL,EAETgR,EAAO8F,EAAI9F,KACXG,EAAQ2F,EAAI3F,KACd,CAMA,IAAKtE,EAAQ,CACXzL,EAAUvW,EAAM4S,IAAI5X,MAAMmxB,EAAY5W,GAEtC,MAAMU,EAAS,GACfjW,EAAMoV,GAAGC,OAAO/L,MACdiN,EACAvW,EAAMoV,GACNpV,EAAMmW,IACNF,GAGF,MAAMI,EAAQrW,EAAM2F,KAAK,QAAS,MAAO,GACnCsR,EAAQ,CAAC,CAAC,MAAOkP,GAAO,CAAC,MAAO,KACtC9P,EAAMY,MAAQA,EACdZ,EAAMiB,SAAWrB,EACjBI,EAAME,QAAUA,EAEZ+P,GACFrP,EAAMtR,KAAK,CAAC,QAAS2gB,GAEzB,CAIA,OAFAtmB,EAAM6S,IAAMA,EACZ7S,EAAMkV,OAAS1F,GACR,CACT,CCtIA,MAAM4c,GAAc,yIAEdC,GAAc,qDAEL,SAASC,GAAUtsB,EAAOgiB,GACvC,IAAInP,EAAM7S,EAAM6S,IAEhB,GAAkC,KAA9B7S,EAAM4S,IAAIhN,WAAWiN,GAAwB,OAAO,EAExD,MAAMvE,EAAQtO,EAAM6S,IACdrD,EAAMxP,EAAMkV,OAElB,OAAS,CACP,KAAMrC,GAAOrD,EAAK,OAAO,EAEzB,MAAM/J,EAAKzF,EAAM4S,IAAIhN,WAAWiN,GAEhC,GAAW,KAAPpN,EAAqB,OAAO,EAChC,GAAW,KAAPA,EAAqB,KAC3B,CAEA,MAAM2B,EAAMpH,EAAM4S,IAAI5X,MAAMsT,EAAQ,EAAGuE,GAEvC,GAAIwZ,GAAY5oB,KAAK2D,GAAM,CACzB,MAAM2U,EAAU/b,EAAMoV,GAAG4G,cAAc5U,GACvC,IAAKpH,EAAMoV,GAAG6G,aAAaF,GAAY,OAAO,EAE9C,IAAKiG,EAAQ,CACX,MAAM3F,EAAYrc,EAAM2F,KAAK,YAAa,IAAK,GAC/C0W,EAAQpF,MAAU,CAAC,CAAC,OAAQ8E,IAC5BM,EAAQ9B,OAAU,WAClB8B,EAAQ3F,KAAU,OAElB,MAAM4F,EAAYtc,EAAM2F,KAAK,OAAQ,GAAI,GACzC2W,EAAQ/F,QAAUvW,EAAMoV,GAAGgH,kBAAkBhV,GAE7C,MAAMmV,EAAYvc,EAAM2F,KAAK,aAAc,KAAM,GACjD4W,EAAQhC,OAAU,WAClBgC,EAAQ7F,KAAU,MACpB,CAGA,OADA1W,EAAM6S,KAAOzL,EAAIzE,OAAS,GACnB,CACT,CAEA,GAAIypB,GAAS3oB,KAAK2D,GAAM,CACtB,MAAM2U,EAAU/b,EAAMoV,GAAG4G,cAAc,UAAY5U,GACnD,IAAKpH,EAAMoV,GAAG6G,aAAaF,GAAY,OAAO,EAE9C,IAAKiG,EAAQ,CACX,MAAM3F,EAAYrc,EAAM2F,KAAK,YAAa,IAAK,GAC/C0W,EAAQpF,MAAU,CAAC,CAAC,OAAQ8E,IAC5BM,EAAQ9B,OAAU,WAClB8B,EAAQ3F,KAAU,OAElB,MAAM4F,EAAYtc,EAAM2F,KAAK,OAAQ,GAAI,GACzC2W,EAAQ/F,QAAUvW,EAAMoV,GAAGgH,kBAAkBhV,GAE7C,MAAMmV,EAAYvc,EAAM2F,KAAK,aAAc,KAAM,GACjD4W,EAAQhC,OAAU,WAClBgC,EAAQ7F,KAAU,MACpB,CAGA,OADA1W,EAAM6S,KAAOzL,EAAIzE,OAAS,GACnB,CACT,CAEA,OAAO,CACT,CCnEA,SAASyY,GAAY3N,GACnB,MAAO,YAAYhK,KAAKgK,EAC1B,CACA,SAAS4N,GAAa5N,GACpB,MAAO,aAAahK,KAAKgK,EAC3B,CAEA,SAAS8e,GAAU9mB,GAEjB,MAAM+mB,EAAU,GAAL/mB,EACX,OAAQ+mB,GAAM,IAAiBA,GAAM,GACvC,CAEe,SAAS1U,GAAa9X,EAAOgiB,GAC1C,IAAKhiB,EAAMoV,GAAG5Y,QAAQkrB,KAAQ,OAAO,EAGrC,MAAMlY,EAAMxP,EAAMkV,OACZrC,EAAM7S,EAAM6S,IAClB,GAAkC,KAA9B7S,EAAM4S,IAAIhN,WAAWiN,IACrBA,EAAM,GAAKrD,EACb,OAAO,EAIT,MAAM/J,EAAKzF,EAAM4S,IAAIhN,WAAWiN,EAAM,GACtC,GAAW,KAAPpN,GACO,KAAPA,GACO,KAAPA,IACC8mB,GAAS9mB,GACZ,OAAO,EAGT,MAAMuE,EAAQhK,EAAM4S,IAAI5X,MAAM6X,GAAK7I,MAAMsd,IACzC,IAAKtd,EAAS,OAAO,EAErB,IAAKgY,EAAQ,CACX,MAAM3L,EAAQrW,EAAM2F,KAAK,cAAe,GAAI,GAC5C0Q,EAAME,QAAUvM,EAAM,GAElBoR,GAAW/E,EAAME,UAAWvW,EAAMwpB,YAClCnO,GAAYhF,EAAME,UAAUvW,EAAMwpB,WACxC,CAEA,OADAxpB,EAAM6S,KAAO7I,EAAM,GAAGrH,QACf,CACT,CC5CA,MAAM8pB,GAAa,uCACbC,GAAa,4BAEJ,SAAS9Y,GAAQ5T,EAAOgiB,GACrC,MAAMnP,EAAM7S,EAAM6S,IACZrD,EAAMxP,EAAMkV,OAElB,GAAkC,KAA9BlV,EAAM4S,IAAIhN,WAAWiN,GAAsB,OAAO,EAEtD,GAAIA,EAAM,GAAKrD,EAAK,OAAO,EAE3B,MAAM/J,EAAKzF,EAAM4S,IAAIhN,WAAWiN,EAAM,GAEtC,GAAW,KAAPpN,EAAqB,CACvB,MAAMuE,EAAQhK,EAAM4S,IAAI5X,MAAM6X,GAAK7I,MAAMyiB,IACzC,GAAIziB,EAAO,CACT,IAAKgY,EAAQ,CACX,MAAMhb,EAAqC,MAA9BgD,EAAM,GAAG,GAAGF,cAAwBxD,SAAS0D,EAAM,GAAGhP,MAAM,GAAI,IAAMsL,SAAS0D,EAAM,GAAI,IAEhGqM,EAAUrW,EAAM2F,KAAK,eAAgB,GAAI,GAC/C0Q,EAAME,QAAUxD,GAAkB/L,GAAQqE,GAAcrE,GAAQqE,GAAc,OAC9EgL,EAAMkE,OAAUvQ,EAAM,GACtBqM,EAAMK,KAAU,QAClB,CAEA,OADA1W,EAAM6S,KAAO7I,EAAM,GAAGrH,QACf,CACT,CACF,KAAO,CACL,MAAMqH,EAAQhK,EAAM4S,IAAI5X,MAAM6X,GAAK7I,MAAM0iB,IACzC,GAAI1iB,EAAO,CACT,MAAMwJ,EAAU5C,GAAW5G,EAAM,IACjC,GAAIwJ,IAAYxJ,EAAM,GAAI,CACxB,IAAKgY,EAAQ,CACX,MAAM3L,EAAUrW,EAAM2F,KAAK,eAAgB,GAAI,GAC/C0Q,EAAME,QAAU/C,EAChB6C,EAAMkE,OAAUvQ,EAAM,GACtBqM,EAAMK,KAAU,QAClB,CAEA,OADA1W,EAAM6S,KAAO7I,EAAM,GAAGrH,QACf,CACT,CACF,CACF,CAEA,OAAO,CACT,CC/CA,SAASgqB,GAAmBvD,GAC1B,MAAMwD,EAAgB,CAAC,EACjBpd,EAAM4Z,EAAWzmB,OAEvB,IAAK6M,EAAK,OAGV,IAAIqd,EAAY,EACZC,GAAgB,EACpB,MAAMC,EAAQ,GAEd,IAAK,IAAIC,EAAY,EAAGA,EAAYxd,EAAKwd,IAAa,CACpD,MAAMC,EAAS7D,EAAW4D,GAoB1B,GAlBAD,EAAMpnB,KAAK,GAMPyjB,EAAWyD,GAAW7X,SAAWiY,EAAOjY,QAAU8X,IAAiBG,EAAO5W,MAAQ,IACpFwW,EAAYG,GAGdF,EAAeG,EAAO5W,MAMtB4W,EAAOtqB,OAASsqB,EAAOtqB,QAAU,GAE5BsqB,EAAO1B,MAAO,SAOdqB,EAAc1a,eAAe+a,EAAOjY,UACvC4X,EAAcK,EAAOjY,QAAU,EAAE,GAAI,GAAI,GAAI,GAAI,GAAI,IAGvD,MAAMkY,EAAeN,EAAcK,EAAOjY,SAASiY,EAAO3B,KAAO,EAAI,GAAM2B,EAAOtqB,OAAS,GAE3F,IAAIwqB,EAAYN,EAAYE,EAAMF,GAAa,EAE3CO,EAAkBD,EAEtB,KAAOA,EAAYD,EAAcC,GAAaJ,EAAMI,GAAa,EAAG,CAClE,MAAME,EAASjE,EAAW+D,GAE1B,GAAIE,EAAOrY,SAAWiY,EAAOjY,SAEzBqY,EAAO/B,MAAQ+B,EAAO9e,IAAM,GAAG,CACjC,IAAI+e,GAAa,EAiBjB,IARID,EAAO9B,OAAS0B,EAAO3B,QACpB+B,EAAO1qB,OAASsqB,EAAOtqB,QAAU,IAAM,IACtC0qB,EAAO1qB,OAAS,IAAM,GAAKsqB,EAAOtqB,OAAS,IAAM,IACnD2qB,GAAa,KAKdA,EAAY,CAKf,MAAMC,EAAWJ,EAAY,IAAM/D,EAAW+D,EAAY,GAAG7B,KACzDyB,EAAMI,EAAY,GAAK,EACvB,EAEJJ,EAAMC,GAAaA,EAAYG,EAAYI,EAC3CR,EAAMI,GAAaI,EAEnBN,EAAO3B,MAAQ,EACf+B,EAAO9e,IAAQye,EACfK,EAAO9B,OAAQ,EACf6B,GAAmB,EAGnBN,GAAgB,EAChB,KACF,CACF,CACF,EAEyB,IAArBM,IAQFR,EAAcK,EAAOjY,SAASiY,EAAO3B,KAAO,EAAI,IAAO2B,EAAOtqB,QAAU,GAAK,GAAMyqB,EAEvF,CACF,CAEe,SAASI,GAAYxtB,GAClC,MAAMipB,EAAcjpB,EAAMipB,YACpBzZ,EAAMxP,EAAMipB,YAAYtmB,OAE9BgqB,GAAkB3sB,EAAMopB,YAExB,IAAK,IAAItK,EAAO,EAAGA,EAAOtP,EAAKsP,IACzBmK,EAAYnK,IAASmK,EAAYnK,GAAMsK,YACzCuD,GAAkB1D,EAAYnK,GAAMsK,WAG1C,CClHe,SAASqE,GAAgBztB,GACtC,IAAI8e,EAAMC,EACNjK,EAAQ,EACZ,MAAMmB,EAASjW,EAAMiW,OACfzG,EAAMxP,EAAMiW,OAAOtT,OAEzB,IAAKmc,EAAOC,EAAO,EAAGD,EAAOtP,EAAKsP,IAG5B7I,EAAO6I,GAAM7G,QAAU,GAAGnD,IAC9BmB,EAAO6I,GAAMhK,MAAQA,EACjBmB,EAAO6I,GAAM7G,QAAU,GAAGnD,IAEJ,SAAtBmB,EAAO6I,GAAMzG,MACbyG,EAAO,EAAItP,GACe,SAA1ByG,EAAO6I,EAAO,GAAGzG,KAEnBpC,EAAO6I,EAAO,GAAGvI,QAAUN,EAAO6I,GAAMvI,QAAUN,EAAO6I,EAAO,GAAGvI,SAE/DuI,IAASC,IAAQ9I,EAAO8I,GAAQ9I,EAAO6I,IAE3CC,KAIAD,IAASC,IACX9I,EAAOtT,OAASoc,EAEpB,CCVA,MAAMC,GAAS,CACb,CAAC,OAAmB0O,IACpB,CAAC,UAAmBtO,IACpB,CAAC,UAAmBuO,IACpB,CAAC,SAAmBC,IACpB,CAAC,YAAmBC,IACpB,CAAC,gBAAmBC,GAAgBtJ,UACpC,CAAC,WAAmBuJ,GAAWvJ,UAC/B,CAAC,OAAmBwJ,IACpB,CAAC,QAAmBC,IACpB,CAAC,WAAmBC,IACpB,CAAC,cAAmBC,IACpB,CAAC,SAAmBC,KAQhBC,GAAU,CACd,CAAC,gBAAmBC,IACpB,CAAC,gBAAmBR,GAAgBtC,aACpC,CAAC,WAAmBuC,GAAWvC,aAG/B,CAAC,iBAAmB+C,KAMtB,SAASC,KAMPztB,KAAK0e,MAAQ,IAAIjH,GAEjB,IAAK,IAAI5b,EAAI,EAAGA,EAAIoiB,GAAOrc,OAAQ/F,IACjCmE,KAAK0e,MAAM9Z,KAAKqZ,GAAOpiB,GAAG,GAAIoiB,GAAOpiB,GAAG,IAS1CmE,KAAK0tB,OAAS,IAAIjW,GAElB,IAAK,IAAI5b,EAAI,EAAGA,EAAIyxB,GAAQ1rB,OAAQ/F,IAClCmE,KAAK0tB,OAAO9oB,KAAK0oB,GAAQzxB,GAAG,GAAIyxB,GAAQzxB,GAAG,GAE/C,CAKA4xB,GAAa9zB,UAAU4a,UAAY,SAAUtV,GAC3C,MAAM6S,EAAM7S,EAAM6S,IACZkD,EAAQhV,KAAK0e,MAAMrF,SAAS,IAC5B9Y,EAAMyU,EAAMpT,OACZimB,EAAa5oB,EAAMoV,GAAG5Y,QAAQosB,WAC9BpjB,EAAQxF,EAAMwF,MAEpB,GAA0B,qBAAfA,EAAMqN,GAEf,YADA7S,EAAM6S,IAAMrN,EAAMqN,IAIpB,IAAI4C,GAAK,EAET,GAAIzV,EAAM8U,MAAQ8T,GAChB,IAAK,IAAIhsB,EAAI,EAAGA,EAAI0E,EAAK1E,IASvB,GAJAoD,EAAM8U,QACNW,EAAKM,EAAMnZ,GAAGoD,GAAO,GACrBA,EAAM8U,QAEFW,EAAI,CACN,GAAI5C,GAAO7S,EAAM6S,IAAO,MAAM,IAAI0G,MAAM,0CACxC,KACF,OAcFvZ,EAAM6S,IAAM7S,EAAMkV,OAGfO,GAAMzV,EAAM6S,MACjBrN,EAAMqN,GAAO7S,EAAM6S,GACrB,EAIA2b,GAAa9zB,UAAU8pB,SAAW,SAAUxkB,GAC1C,MAAM+V,EAAQhV,KAAK0e,MAAMrF,SAAS,IAC5B9Y,EAAMyU,EAAMpT,OACZ4L,EAAMvO,EAAMkV,OACZ0T,EAAa5oB,EAAMoV,GAAG5Y,QAAQosB,WAEpC,MAAO5oB,EAAM6S,IAAMtE,EAAK,CAOtB,MAAM0G,EAAUjV,EAAM6S,IACtB,IAAI4C,GAAK,EAET,GAAIzV,EAAM8U,MAAQ8T,EAChB,IAAK,IAAIhsB,EAAI,EAAGA,EAAI0E,EAAK1E,IAEvB,GADA6Y,EAAKM,EAAMnZ,GAAGoD,GAAO,GACjByV,EAAI,CACN,GAAIR,GAAWjV,EAAM6S,IAAO,MAAM,IAAI0G,MAAM,0CAC5C,KACF,CAIJ,GAAI9D,GACF,GAAIzV,EAAM6S,KAAOtE,EAAO,WAI1BvO,EAAMkpB,SAAWlpB,EAAM4S,IAAI5S,EAAM6S,MACnC,CAEI7S,EAAMkpB,SACRlpB,EAAMypB,aAEV,EAOA+E,GAAa9zB,UAAU4O,MAAQ,SAAUmE,EAAK2H,EAAIe,EAAK4S,GACrD,MAAM/oB,EAAQ,IAAIe,KAAK2e,MAAMjS,EAAK2H,EAAIe,EAAK4S,GAE3ChoB,KAAKyjB,SAASxkB,GAEd,MAAM+V,EAAQhV,KAAK0tB,OAAOrU,SAAS,IAC7B9Y,EAAMyU,EAAMpT,OAElB,IAAK,IAAI/F,EAAI,EAAGA,EAAI0E,EAAK1E,IACvBmZ,EAAMnZ,GAAGoD,EAEb,EAEAwuB,GAAa9zB,UAAUglB,MAAQsJ,GAE/B,U,QClMe,SAAS,GAAC0F,GACvB,MAAMC,EAAK,CAAC,EACZD,EAAOA,GAAQ,CAAC,EAEhBC,EAAGC,QAAUC,EAAIpc,OACjBkc,EAAGG,OAASC,EAAGtc,OACfkc,EAAGK,MAAQC,EAAExc,OACbkc,EAAGO,MAAQC,EAAE1c,OAGbkc,EAAGS,SAAW,CAACT,EAAGK,MAAOL,EAAGO,MAAOP,EAAGG,QAAQ/jB,KAAK,KAGnD4jB,EAAGU,QAAU,CAACV,EAAGK,MAAOL,EAAGG,QAAQ/jB,KAAK,KAIxC,MAAMukB,EAAkB,QAwKxB,OAnKAX,EAAGY,kBAAoB,SAAWD,EAAkB,IAAMX,EAAGS,SAAW,IAAMT,EAAGC,QAAU,IAI3FD,EAAGa,QAED,yFAGFb,EAAGc,SAAW,YAAcd,EAAGU,QAAU,uBAEzCV,EAAGe,SAED,kFAEFf,EAAGgB,oBAED,QAAUL,EAAkB,IAAMX,EAAGS,SAArC,QACSV,EAAK,OAAS,WAAa,MAAQ,uBAAyBC,EAAGS,SAAW,KAErFT,EAAGiB,SAED,iBAGcjB,EAAGU,QAAU,IAAMC,EAHjC,qCAIoBX,EAAGU,QAJvB,wBAKoBV,EAAGU,QALvB,wBAMoBV,EAAGU,QANvB,wBAOoBV,EAAGU,QAPvB,yBAQoBV,EAAGU,QARvB,qBAWiBV,EAAGY,kBAXpB,qCAuBiBZ,EAAGU,QAAU,YACvBX,EAAK,OACF,6BACA,SAGJ,OAASC,EAAGU,QA7BlB,WAgCeV,EAAGU,QAhClB,cAmCkBV,EAAGU,QAnCrB,iBAqCiBV,EAAGU,QArCpB,kBA4CFV,EAAGkB,eAED,iEAEFlB,EAAGmB,OAED,wBAKFnB,EAAGoB,gBAGD,MACEpB,EAAGmB,OACH,IACAnB,EAAGY,kBAHL,UAMFZ,EAAGqB,WAED,MACErB,EAAGmB,OADL,OAGUnB,EAAGY,kBAHb,QAKUZ,EAAGY,kBAAoB,QAAUZ,EAAGY,kBAAoB,UAAYZ,EAAGY,kBALjF,KAQFZ,EAAGsB,SAED,eAIgBtB,EAAGqB,WAAa,SAAWrB,EAAGqB,WAJ9C,KAOFrB,EAAGuB,eAED,MACEvB,EAAGa,QADL,aAGgBb,EAAGqB,WAHnB,qBAMFrB,EAAGwB,qBAED,YAAcxB,EAAGqB,WAAa,oBAEhCrB,EAAGyB,gBAEDzB,EAAGsB,SAAWtB,EAAGgB,oBAEnBhB,EAAG0B,sBAED1B,EAAGuB,eAAiBvB,EAAGgB,oBAEzBhB,EAAG2B,qBAED3B,EAAGsB,SAAWtB,EAAGe,SAAWf,EAAGgB,oBAEjChB,EAAG4B,2BAED5B,EAAGuB,eAAiBvB,EAAGe,SAAWf,EAAGgB,oBAEvChB,EAAG6B,iCAED7B,EAAGwB,qBAAuBxB,EAAGe,SAAWf,EAAGgB,oBAO7ChB,EAAG8B,oBAED,sDAAwD9B,EAAGS,SAAW,SAExET,EAAG+B,gBAEC,MAAQpB,EAAkB,UAAYX,EAAGU,QAAzC,KACMV,EAAGkB,eAAiB,IAAMlB,EAAG0B,sBAAwB,IAE/D1B,EAAGgC,eAGC,mCAA0ChC,EAAGS,SAA7C,qBAC0BT,EAAG4B,2BAA6B5B,EAAGiB,SAAW,IAE5EjB,EAAGiC,qBAGC,mCAA0CjC,EAAGS,SAA7C,qBAC0BT,EAAG6B,iCAAmC7B,EAAGiB,SAAW,IAE3EjB,CACT,CCpLA,SAASrc,GAAQR,GACf,MAAMS,EAAU7O,MAAMhJ,UAAUM,MAAM+W,KAAKvN,UAAW,GAUtD,OARA+N,EAAQC,SAAQ,SAAUC,GACnBA,GAEL/T,OAAOgU,KAAKD,GAAQD,SAAQ,SAAUH,GACpCP,EAAIO,GAAOI,EAAOJ,EACpB,GACF,IAEOP,CACT,CAEA,SAASD,GAAQC,GAAO,OAAOpT,OAAOhE,UAAUmL,SAASkM,KAAKD,EAAK,CACnE,SAASE,GAAUF,GAAO,MAAuB,oBAAhBD,GAAOC,EAA2B,CACnE,SAAS3U,GAAU2U,GAAO,MAAuB,oBAAhBD,GAAOC,EAA2B,CACnE,SAAS+e,GAAU/e,GAAO,MAAuB,oBAAhBD,GAAOC,EAA2B,CACnE,SAASgf,GAAYhf,GAAO,MAAuB,sBAAhBD,GAAOC,EAA6B,CAEvE,SAASqC,GAAU1G,GAAO,OAAOA,EAAIxH,QAAQ,uBAAwB,OAAQ,CAI7E,MAAM8qB,GAAiB,CACrBC,WAAW,EACXC,YAAY,EACZC,SAAS,GAGX,SAASC,GAAcrf,GACrB,OAAOpT,OAAOgU,KAAKZ,GAAO,CAAC,GAAGsf,QAAO,SAAUC,EAAK3vB,GAElD,OAAO2vB,GAAON,GAAe7e,eAAexQ,EAC9C,IAAG,EACL,CAEA,MAAM4vB,GAAiB,CACrB,QAAS,CACPC,SAAU,SAAU3Z,EAAM/E,EAAKgG,GAC7B,MAAM2Y,EAAO5Z,EAAK5c,MAAM6X,GAQxB,OANKgG,EAAK8V,GAAG7lB,OAEX+P,EAAK8V,GAAG7lB,KAAO,IAAIuK,OACjB,UAAYwF,EAAK8V,GAAGc,SAAW5W,EAAK8V,GAAG2B,qBAAuBzX,EAAK8V,GAAGiB,SAAU,MAGhF/W,EAAK8V,GAAG7lB,KAAKrF,KAAK+tB,GACbA,EAAKxnB,MAAM6O,EAAK8V,GAAG7lB,MAAM,GAAGnG,OAE9B,CACT,GAEF,SAAU,QACV,OAAQ,QACR,KAAM,CACJ4uB,SAAU,SAAU3Z,EAAM/E,EAAKgG,GAC7B,MAAM2Y,EAAO5Z,EAAK5c,MAAM6X,GAkBxB,OAhBKgG,EAAK8V,GAAG8C,UAEX5Y,EAAK8V,GAAG8C,QAAU,IAAIpe,OACpB,IACAwF,EAAK8V,GAAGc,SAGR,sBAAwB5W,EAAK8V,GAAGqB,WAAa,SAAWnX,EAAK8V,GAAGoB,gBAAkB,IAClFlX,EAAK8V,GAAGe,SACR7W,EAAK8V,GAAGgB,oBACR9W,EAAK8V,GAAGiB,SAER,MAIA/W,EAAK8V,GAAG8C,QAAQhuB,KAAK+tB,GAEnB3e,GAAO,GAAuB,MAAlB+E,EAAK/E,EAAM,IACvBA,GAAO,GAAuB,MAAlB+E,EAAK/E,EAAM,GADqB,EAEzC2e,EAAKxnB,MAAM6O,EAAK8V,GAAG8C,SAAS,GAAG9uB,OAEjC,CACT,GAEF,UAAW,CACT4uB,SAAU,SAAU3Z,EAAM/E,EAAKgG,GAC7B,MAAM2Y,EAAO5Z,EAAK5c,MAAM6X,GAOxB,OALKgG,EAAK8V,GAAG+C,SACX7Y,EAAK8V,GAAG+C,OAAS,IAAIre,OACnB,IAAMwF,EAAK8V,GAAGkB,eAAiB,IAAMhX,EAAK8V,GAAGyB,gBAAiB,MAG9DvX,EAAK8V,GAAG+C,OAAOjuB,KAAK+tB,GACfA,EAAKxnB,MAAM6O,EAAK8V,GAAG+C,QAAQ,GAAG/uB,OAEhC,CACT,IAMEgvB,GAAkB,0VAGlBC,GAAe,8EAA8EjoB,MAAM,KAEzG,SAASkoB,GAAgBhZ,GACvBA,EAAKiZ,WAAa,EAClBjZ,EAAKkZ,eAAiB,EACxB,CAEA,SAASC,GAAiBrD,GACxB,OAAO,SAAU/W,EAAM/E,GACrB,MAAM2e,EAAO5Z,EAAK5c,MAAM6X,GAExB,OAAI8b,EAAGlrB,KAAK+tB,GACHA,EAAKxnB,MAAM2kB,GAAI,GAAGhsB,OAEpB,CACT,CACF,CAEA,SAASsvB,KACP,OAAO,SAAUjoB,EAAO6O,GACtBA,EAAKqC,UAAUlR,EACjB,CACF,CAIA,SAASkoB,GAASrZ,GAEhB,MAAM8V,EAAK9V,EAAK8V,GAAKwD,GAAUtZ,EAAKuZ,UAG9BC,EAAOxZ,EAAKyZ,SAASt3B,QAW3B,SAASu3B,EAAOC,GAAO,OAAOA,EAAIvsB,QAAQ,SAAU0oB,EAAG8D,SAAU,CATjE5Z,EAAK6Z,YAEA7Z,EAAK8Z,mBACRN,EAAK1sB,KAAKgsB,IAEZU,EAAK1sB,KAAKgpB,EAAGmB,QAEbnB,EAAG8D,SAAWJ,EAAKtnB,KAAK,KAIxB4jB,EAAGiE,YAAcvf,OAAOkf,EAAM5D,EAAG+B,iBAAkB,KACnD/B,EAAGkE,WAAaxf,OAAOkf,EAAM5D,EAAGgC,gBAAiB,KACjDhC,EAAGmE,iBAAmBzf,OAAOkf,EAAM5D,EAAGiC,sBAAuB,KAC7DjC,EAAGoE,gBAAkB1f,OAAOkf,EAAM5D,EAAG8B,qBAAsB,KAM3D,MAAMuC,EAAU,GAIhB,SAASC,EAAa9vB,EAAM+vB,GAC1B,MAAM,IAAI3Z,MAAM,+BAAiCpW,EAAO,MAAQ+vB,EAClE,CAJAra,EAAKsa,aAAe,CAAC,EAMrBz0B,OAAOgU,KAAKmG,EAAKua,aAAa5gB,SAAQ,SAAUrP,GAC9C,MAAM+vB,EAAMra,EAAKua,YAAYjwB,GAG7B,GAAY,OAAR+vB,EAAgB,OAEpB,MAAMG,EAAW,CAAE9B,SAAU,KAAMnH,KAAM,MAIzC,GAFAvR,EAAKsa,aAAahwB,GAAQkwB,EAEtBl2B,GAAS+1B,GAiBX,OAhBIrC,GAASqC,EAAI3B,UACf8B,EAAS9B,SAAWS,GAAgBkB,EAAI3B,UAC/BT,GAAWoC,EAAI3B,UACxB8B,EAAS9B,SAAW2B,EAAI3B,SAExB0B,EAAY9vB,EAAM+vB,QAGhBpC,GAAWoC,EAAIhY,WACjBmY,EAASnY,UAAYgY,EAAIhY,UACfgY,EAAIhY,UAGd+X,EAAY9vB,EAAM+vB,GAFlBG,EAASnY,UAAY+W,MAQrBjgB,GAASkhB,GACXF,EAAQrtB,KAAKxC,GAIf8vB,EAAY9vB,EAAM+vB,EACpB,IAMAF,EAAQxgB,SAAQ,SAAU8gB,GACnBza,EAAKsa,aAAata,EAAKua,YAAYE,MAMxCza,EAAKsa,aAAaG,GAAO/B,SACvB1Y,EAAKsa,aAAata,EAAKua,YAAYE,IAAQ/B,SAC7C1Y,EAAKsa,aAAaG,GAAOpY,UACvBrC,EAAKsa,aAAata,EAAKua,YAAYE,IAAQpY,UAC/C,IAKArC,EAAKsa,aAAa,IAAM,CAAE5B,SAAU,KAAMrW,UAAW+W,MAKrD,MAAMsB,EAAQ70B,OAAOgU,KAAKmG,EAAKsa,cAC5BK,QAAO,SAAUrwB,GAEhB,OAAOA,EAAKR,OAAS,GAAKkW,EAAKsa,aAAahwB,EAC9C,IACC8H,IAAIkJ,IACJpJ,KAAK,KAER8N,EAAK8V,GAAG8E,YAAcpgB,OAAO,oBAA2Bsb,EAAGS,SAAW,MAAQmE,EAAQ,IAAK,KAC3F1a,EAAK8V,GAAG+E,cAAgBrgB,OAAO,oBAA2Bsb,EAAGS,SAAW,MAAQmE,EAAQ,IAAK,MAC7F1a,EAAK8V,GAAGgF,gBAAkBtgB,OAAO,IAAMwF,EAAK8V,GAAG+E,cAAcjhB,OAAQ,KAErEoG,EAAK8V,GAAGnT,QAAUnI,OAChB,IAAMwF,EAAK8V,GAAG8E,YAAYhhB,OAAS,MAAQoG,EAAK8V,GAAGoE,gBAAgBtgB,OAAS,MAC5E,KAOFof,GAAehZ,EACjB,CAOA,SAAS+a,GAAO/a,EAAM0J,GACpB,MAAMjU,EAAQuK,EAAKiZ,UACbvjB,EAAMsK,EAAKgb,eACXjc,EAAOiB,EAAKkZ,eAAe/2B,MAAMsT,EAAOC,GAO9CxN,KAAKob,OAAStD,EAAKib,WAAWhqB,cAM9B/I,KAAKK,MAAQkN,EAAQiU,EAMrBxhB,KAAKgP,UAAYxB,EAAMgU,EAMvBxhB,KAAKgzB,IAAMnc,EAMX7W,KAAK6W,KAAOA,EAMZ7W,KAAKqG,IAAMwQ,CACb,CAEA,SAASoc,GAAanb,EAAM0J,GAC1B,MAAMvY,EAAQ,IAAI4pB,GAAM/a,EAAM0J,GAI9B,OAFA1J,EAAKsa,aAAanpB,EAAMmS,QAAQjB,UAAUlR,EAAO6O,GAE1C7O,CACT,CAwCA,SAASiqB,GAAWC,EAAS13B,GAC3B,KAAMuE,gBAAgBkzB,IACpB,OAAO,IAAIA,GAAUC,EAAS13B,GAG3BA,GACC20B,GAAa+C,KACf13B,EAAU03B,EACVA,EAAU,CAAC,GAIfnzB,KAAKqxB,SAAW9f,GAAO,CAAC,EAAGye,GAAgBv0B,GAG3CuE,KAAK+wB,WAAa,EAClB/wB,KAAK8yB,gBAAkB,EACvB9yB,KAAK+yB,WAAa,GAClB/yB,KAAKgxB,eAAiB,GAEtBhxB,KAAKqyB,YAAc9gB,GAAO,CAAC,EAAGgf,GAAgB4C,GAC9CnzB,KAAKoyB,aAAe,CAAC,EAErBpyB,KAAKuxB,SAAWV,GAChB7wB,KAAK4xB,mBAAoB,EAEzB5xB,KAAK4tB,GAAK,CAAC,EAEXuD,GAAQnxB,KACV,CASAkzB,GAAUv5B,UAAUy5B,IAAM,SAAchY,EAAQiY,GAG9C,OAFArzB,KAAKqyB,YAAYjX,GAAUiY,EAC3BlC,GAAQnxB,MACDA,IACT,EAQAkzB,GAAUv5B,UAAU25B,IAAM,SAAc73B,GAEtC,OADAuE,KAAKqxB,SAAW9f,GAAOvR,KAAKqxB,SAAU51B,GAC/BuE,IACT,EAOAkzB,GAAUv5B,UAAU+I,KAAO,SAAemU,GAKxC,GAHA7W,KAAKgxB,eAAiBna,EACtB7W,KAAK+wB,WAAa,GAEbla,EAAKjV,OAAU,OAAO,EAE3B,IAAI2xB,EAAGC,EAAIC,EAAIlzB,EAAKihB,EAAOkS,EAAM9F,EAAI+F,EAASC,EAG9C,GAAI5zB,KAAK4tB,GAAG8E,YAAYhwB,KAAKmU,GAAO,CAClC+W,EAAK5tB,KAAK4tB,GAAG+E,cACb/E,EAAG5e,UAAY,EACf,MAA+B,QAAvBukB,EAAI3F,EAAG9kB,KAAK+N,IAElB,GADAtW,EAAMP,KAAK6zB,aAAahd,EAAM0c,EAAE,GAAI3F,EAAG5e,WACnCzO,EAAK,CACPP,KAAK+yB,WAAaQ,EAAE,GACpBvzB,KAAK+wB,UAAYwC,EAAElzB,MAAQkzB,EAAE,GAAG3xB,OAChC5B,KAAK8yB,eAAiBS,EAAElzB,MAAQkzB,EAAE,GAAG3xB,OAASrB,EAC9C,KACF,CAEJ,CAyCA,OAvCIP,KAAKqxB,SAASpB,WAAajwB,KAAKoyB,aAAa,WAE/CuB,EAAU9c,EAAKhQ,OAAO7G,KAAK4tB,GAAGoE,iBAC1B2B,GAAW,IAET3zB,KAAK+wB,UAAY,GAAK4C,EAAU3zB,KAAK+wB,YAC0D,QAA5FyC,EAAK3c,EAAK5N,MAAMjJ,KAAKqxB,SAASlB,QAAUnwB,KAAK4tB,GAAGkE,WAAa9xB,KAAK4tB,GAAGmE,qBACxEvQ,EAAQgS,EAAGnzB,MAAQmzB,EAAG,GAAG5xB,QAErB5B,KAAK+wB,UAAY,GAAKvP,EAAQxhB,KAAK+wB,aACrC/wB,KAAK+yB,WAAa,GAClB/yB,KAAK+wB,UAAYvP,EACjBxhB,KAAK8yB,eAAiBU,EAAGnzB,MAAQmzB,EAAG,GAAG5xB,UAO7C5B,KAAKqxB,SAASnB,YAAclwB,KAAKoyB,aAAa,aAEhDwB,EAAS/c,EAAKnQ,QAAQ,KAClBktB,GAAU,GAGmC,QAA1CH,EAAK5c,EAAK5N,MAAMjJ,KAAK4tB,GAAGiE,gBAC3BrQ,EAAQiS,EAAGpzB,MAAQozB,EAAG,GAAG7xB,OACzB8xB,EAAOD,EAAGpzB,MAAQozB,EAAG,GAAG7xB,QAEpB5B,KAAK+wB,UAAY,GAAKvP,EAAQxhB,KAAK+wB,WAClCvP,IAAUxhB,KAAK+wB,WAAa2C,EAAO1zB,KAAK8yB,kBAC3C9yB,KAAK+yB,WAAa,UAClB/yB,KAAK+wB,UAAYvP,EACjBxhB,KAAK8yB,eAAiBY,KAMvB1zB,KAAK+wB,WAAa,CAC3B,EASAmC,GAAUv5B,UAAU8gB,QAAU,SAAkB5D,GAC9C,OAAO7W,KAAK4tB,GAAGnT,QAAQ/X,KAAKmU,EAC9B,EAWAqc,GAAUv5B,UAAUk6B,aAAe,SAAuBhd,EAAMuE,EAAQtJ,GAEtE,OAAK9R,KAAKoyB,aAAahX,EAAOrS,eAGvB/I,KAAKoyB,aAAahX,EAAOrS,eAAeynB,SAAS3Z,EAAM/E,EAAK9R,MAF1D,CAGX,EAkBAkzB,GAAUv5B,UAAUsP,MAAQ,SAAgB4N,GAC1C,MAAMzR,EAAS,GACf,IAAIoc,EAAQ,EAGRxhB,KAAK+wB,WAAa,GAAK/wB,KAAKgxB,iBAAmBna,IACjDzR,EAAOR,KAAKquB,GAAYjzB,KAAMwhB,IAC9BA,EAAQxhB,KAAK8yB,gBAIf,IAAIrC,EAAOjP,EAAQ3K,EAAK5c,MAAMunB,GAAS3K,EAGvC,MAAO7W,KAAK0C,KAAK+tB,GACfrrB,EAAOR,KAAKquB,GAAYjzB,KAAMwhB,IAE9BiP,EAAOA,EAAKx2B,MAAM+F,KAAK8yB,gBACvBtR,GAASxhB,KAAK8yB,eAGhB,OAAI1tB,EAAOxD,OACFwD,EAGF,IACT,EAQA8tB,GAAUv5B,UAAU2vB,aAAe,SAAuBzS,GAKxD,GAHA7W,KAAKgxB,eAAiBna,EACtB7W,KAAK+wB,WAAa,GAEbla,EAAKjV,OAAQ,OAAO,KAEzB,MAAM2xB,EAAIvzB,KAAK4tB,GAAGgF,gBAAgB9pB,KAAK+N,GACvC,IAAK0c,EAAG,OAAO,KAEf,MAAMhzB,EAAMP,KAAK6zB,aAAahd,EAAM0c,EAAE,GAAIA,EAAE,GAAG3xB,QAC/C,OAAKrB,GAELP,KAAK+yB,WAAaQ,EAAE,GACpBvzB,KAAK+wB,UAAYwC,EAAElzB,MAAQkzB,EAAE,GAAG3xB,OAChC5B,KAAK8yB,eAAiBS,EAAElzB,MAAQkzB,EAAE,GAAG3xB,OAASrB,EAEvC0yB,GAAYjzB,KAAM,IANR,IAOnB,EAiBAkzB,GAAUv5B,UAAU23B,KAAO,SAAetY,EAAM8a,GAG9C,OAFA9a,EAAOrW,MAAMuW,QAAQF,GAAQA,EAAO,CAACA,GAEhC8a,GAOL9zB,KAAKuxB,SAAWvxB,KAAKuxB,SAASlqB,OAAO2R,GAClClV,OACA2uB,QAAO,SAAUsB,EAAI5e,EAAKlF,GACzB,OAAO8jB,IAAO9jB,EAAIkF,EAAM,EAC1B,IACC6e,UAEH7C,GAAQnxB,MACDA,OAdLA,KAAKuxB,SAAWvY,EAAK/e,QACrB+F,KAAK4xB,mBAAoB,EACzBT,GAAQnxB,MACDA,KAYX,EAOAkzB,GAAUv5B,UAAUwgB,UAAY,SAAoBlR,GAI7CA,EAAMmS,SAAUnS,EAAM5C,IAAM,UAAY4C,EAAM5C,KAE9B,YAAjB4C,EAAMmS,QAAyB,YAAY1Y,KAAKuG,EAAM5C,OACxD4C,EAAM5C,IAAM,UAAY4C,EAAM5C,IAElC,EAOA6sB,GAAUv5B,UAAUg4B,UAAY,WAChC,EAEA,UC9nBA,MAAMsC,GAAS,WAGTxmB,GAAO,GACPymB,GAAO,EACPC,GAAO,GACPC,GAAO,GACPC,GAAO,IACPC,GAAc,GACdC,GAAW,IACXC,GAAY,IAGZC,GAAgB,QAChBC,GAAgB,aAChBC,GAAkB,4BAGlB1oB,GAAS,CACd,SAAY,kDACZ,YAAa,iDACb,gBAAiB,iBAIZ2oB,GAAgBnnB,GAAOymB,GACvBW,GAAQl6B,KAAKk6B,MACbC,GAAqB97B,OAAO2L,aAUlC,SAASzK,GAAMod,GACd,MAAM,IAAIlX,WAAW6L,GAAOqL,GAC7B,CAUA,SAASpN,GAAI6qB,EAAOC,GACnB,MAAM5vB,EAAS,GACf,IAAIxD,EAASmzB,EAAMnzB,OACnB,MAAOA,IACNwD,EAAOxD,GAAUozB,EAASD,EAAMnzB,IAEjC,OAAOwD,CACR,CAYA,SAAS6vB,GAAUC,EAAQF,GAC1B,MAAMG,EAAQD,EAAOtsB,MAAM,KAC3B,IAAIxD,EAAS,GACT+vB,EAAMvzB,OAAS,IAGlBwD,EAAS+vB,EAAM,GAAK,IACpBD,EAASC,EAAM,IAGhBD,EAASA,EAAOhwB,QAAQyvB,GAAiB,KACzC,MAAMS,EAASF,EAAOtsB,MAAM,KACtBysB,EAAUnrB,GAAIkrB,EAAQJ,GAAUhrB,KAAK,KAC3C,OAAO5E,EAASiwB,CACjB,CAeA,SAASC,GAAW3zB,GACnB,MAAM8I,EAAS,GACf,IAAI8qB,EAAU,EACd,MAAM3zB,EAASD,EAAOC,OACtB,MAAO2zB,EAAU3zB,EAAQ,CACxB,MAAMtB,EAAQqB,EAAOkD,WAAW0wB,KAChC,GAAIj1B,GAAS,OAAUA,GAAS,OAAUi1B,EAAU3zB,EAAQ,CAE3D,MAAM4zB,EAAQ7zB,EAAOkD,WAAW0wB,KACR,QAAX,MAARC,GACJ/qB,EAAO7F,OAAe,KAARtE,IAAkB,KAAe,KAARk1B,GAAiB,QAIxD/qB,EAAO7F,KAAKtE,GACZi1B,IAEF,MACC9qB,EAAO7F,KAAKtE,EAEd,CACA,OAAOmK,CACR,CAUA,MAAMgrB,GAAaC,GAAc18B,OAAOsR,iBAAiBorB,GAWnDC,GAAe,SAASnrB,GAC7B,OAAIA,GAAa,IAAQA,EAAY,GACvBA,EAAY,GAAlB,GAEJA,GAAa,IAAQA,EAAY,GAC7BA,EAAY,GAEhBA,GAAa,IAAQA,EAAY,IAC7BA,EAAY,GAEbiD,EACR,EAaMmoB,GAAe,SAASC,EAAOC,GAGpC,OAAOD,EAAQ,GAAK,IAAMA,EAAQ,MAAgB,GAARC,IAAc,EACzD,EAOMC,GAAQ,SAASC,EAAOC,EAAWC,GACxC,IAAIv1B,EAAI,EAGR,IAFAq1B,EAAQE,EAAYrB,GAAMmB,EAAQ3B,IAAQ2B,GAAS,EACnDA,GAASnB,GAAMmB,EAAQC,GACOD,EAAQpB,GAAgBT,IAAQ,EAAGxzB,GAAK8M,GACrEuoB,EAAQnB,GAAMmB,EAAQpB,IAEvB,OAAOC,GAAMl0B,GAAKi0B,GAAgB,GAAKoB,GAASA,EAAQ5B,IACzD,EASMpvB,GAAS,SAASmxB,GAEvB,MAAM1rB,EAAS,GACT2rB,EAAcD,EAAMv0B,OAC1B,IAAI/F,EAAI,EACJsU,EAAIokB,GACJ8B,EAAO/B,GAMPgC,EAAQH,EAAM/sB,YAAYorB,IAC1B8B,EAAQ,IACXA,EAAQ,GAGT,IAAK,IAAI3sB,EAAI,EAAGA,EAAI2sB,IAAS3sB,EAExBwsB,EAAMtxB,WAAW8E,IAAM,KAC1BzP,GAAM,aAEPuQ,EAAO7F,KAAKuxB,EAAMtxB,WAAW8E,IAM9B,IAAK,IAAItJ,EAAQi2B,EAAQ,EAAIA,EAAQ,EAAI,EAAGj2B,EAAQ+1B,GAAwC,CAO3F,MAAMG,EAAO16B,EACb,IAAK,IAAI26B,EAAI,EAAG71B,EAAI8M,IAA0B9M,GAAK8M,GAAM,CAEpDpN,GAAS+1B,GACZl8B,GAAM,iBAGP,MAAM27B,EAAQF,GAAaQ,EAAMtxB,WAAWxE,MAExCw1B,GAASpoB,IACZvT,GAAM,iBAEH27B,EAAQhB,IAAOZ,GAASp4B,GAAK26B,IAChCt8B,GAAM,YAGP2B,GAAKg6B,EAAQW,EACb,MAAM1Z,EAAInc,GAAK01B,EAAOnC,GAAQvzB,GAAK01B,EAAOlC,GAAOA,GAAOxzB,EAAI01B,EAE5D,GAAIR,EAAQ/Y,EACX,MAGD,MAAM2Z,EAAahpB,GAAOqP,EACtB0Z,EAAI3B,GAAMZ,GAASwC,IACtBv8B,GAAM,YAGPs8B,GAAKC,CAEN,CAEA,MAAMC,EAAMjsB,EAAO7I,OAAS,EAC5By0B,EAAON,GAAMl6B,EAAI06B,EAAMG,EAAa,GAARH,GAIxB1B,GAAMh5B,EAAI66B,GAAOzC,GAAS9jB,GAC7BjW,GAAM,YAGPiW,GAAK0kB,GAAMh5B,EAAI66B,GACf76B,GAAK66B,EAGLjsB,EAAOmO,OAAO/c,IAAK,EAAGsU,EAEvB,CAEA,OAAOnX,OAAOsR,iBAAiBG,EAChC,EASM1E,GAAS,SAASowB,GACvB,MAAM1rB,EAAS,GAGf0rB,EAAQb,GAAWa,GAGnB,MAAMC,EAAcD,EAAMv0B,OAG1B,IAAIuO,EAAIokB,GACJyB,EAAQ,EACRK,EAAO/B,GAGX,IAAK,MAAMqC,KAAgBR,EACtBQ,EAAe,KAClBlsB,EAAO7F,KAAKkwB,GAAmB6B,IAIjC,MAAMC,EAAcnsB,EAAO7I,OAC3B,IAAIi1B,EAAiBD,EAMjBA,GACHnsB,EAAO7F,KAAK4vB,IAIb,MAAOqC,EAAiBT,EAAa,CAIpC,IAAI7C,EAAIU,GACR,IAAK,MAAM0C,KAAgBR,EACtBQ,GAAgBxmB,GAAKwmB,EAAepD,IACvCA,EAAIoD,GAMN,MAAMG,EAAwBD,EAAiB,EAC3CtD,EAAIpjB,EAAI0kB,IAAOZ,GAAS+B,GAASc,IACpC58B,GAAM,YAGP87B,IAAUzC,EAAIpjB,GAAK2mB,EACnB3mB,EAAIojB,EAEJ,IAAK,MAAMoD,KAAgBR,EAI1B,GAHIQ,EAAexmB,KAAO6lB,EAAQ/B,IACjC/5B,GAAM,YAEHy8B,IAAiBxmB,EAAG,CAEvB,IAAI4mB,EAAIf,EACR,IAAK,IAAIr1B,EAAI8M,IAA0B9M,GAAK8M,GAAM,CACjD,MAAMqP,EAAInc,GAAK01B,EAAOnC,GAAQvzB,GAAK01B,EAAOlC,GAAOA,GAAOxzB,EAAI01B,EAC5D,GAAIU,EAAIja,EACP,MAED,MAAMka,EAAUD,EAAIja,EACd2Z,EAAahpB,GAAOqP,EAC1BrS,EAAO7F,KACNkwB,GAAmBc,GAAa9Y,EAAIka,EAAUP,EAAY,KAE3DM,EAAIlC,GAAMmC,EAAUP,EACrB,CAEAhsB,EAAO7F,KAAKkwB,GAAmBc,GAAamB,EAAG,KAC/CV,EAAON,GAAMC,EAAOc,EAAuBD,IAAmBD,GAC9DZ,EAAQ,IACNa,CACH,GAGCb,IACA7lB,CAEH,CACA,OAAO1F,EAAOT,KAAK,GACpB,EAaMitB,GAAY,SAASd,GAC1B,OAAOlB,GAAUkB,GAAO,SAASx0B,GAChC,OAAO8yB,GAAc/xB,KAAKf,GACvBqD,GAAOrD,EAAO1H,MAAM,GAAG8O,eACvBpH,CACJ,GACD,EAaMu1B,GAAU,SAASf,GACxB,OAAOlB,GAAUkB,GAAO,SAASx0B,GAChC,OAAO+yB,GAAchyB,KAAKf,GACvB,OAASoE,GAAOpE,GAChBA,CACJ,GACD,EAKMw1B,GAAW,CAMhB,QAAW,QAQX,KAAQ,CACP,OAAU7B,GACV,OAAUG,IAEX,OAAUzwB,GACV,OAAUe,GACV,QAAWmxB,GACX,UAAaD,IAId,UCzbA,IACEx7B,QAAS,CAEPkrB,MAAM,EAGNjQ,UAAU,EAGVE,QAAQ,EAGRT,WAAY,YAGZoE,SAAS,EAGT8B,aAAa,EAObuB,OAAQ,OAQR7H,UAAW,KAGX8R,WAAY,KAGduP,WAAY,CACVC,KAAM,CAAC,EACPpgB,MAAO,CAAC,EACR3C,OAAQ,CAAC,ICzCb,IACE7Y,QAAS,CAEPkrB,MAAM,EAGNjQ,UAAU,EAGVE,QAAQ,EAGRT,WAAY,YAGZoE,SAAS,EAGT8B,aAAa,EAObuB,OAAQ,OAQR7H,UAAW,KAGX8R,WAAY,IAGduP,WAAY,CAEVC,KAAM,CACJriB,MAAO,CACL,YACA,QACA,SACA,cAIJiC,MAAO,CACLjC,MAAO,CACL,cAIJV,OAAQ,CACNU,MAAO,CACL,QAEFsiB,OAAQ,CACN,gBACA,qBC/DR,IACE77B,QAAS,CAEPkrB,MAAM,EAGNjQ,UAAU,EAGVE,QAAQ,EAGRT,WAAY,YAGZoE,SAAS,EAGT8B,aAAa,EAObuB,OAAQ,OAQR7H,UAAW,KAGX8R,WAAY,IAGduP,WAAY,CAEVC,KAAM,CACJriB,MAAO,CACL,YACA,QACA,SACA,cAIJiC,MAAO,CACLjC,MAAO,CACL,aACA,OACA,QACA,UACA,KACA,aACA,WACA,OACA,YACA,cAIJV,OAAQ,CACNU,MAAO,CACL,WACA,YACA,WACA,SACA,SACA,cACA,QACA,OACA,UACA,QAEFsiB,OAAQ,CACN,gBACA,WACA,qBCnER,MAAMC,GAAS,CACbC,QAASC,GACTC,KAAMC,GACNC,WAAYC,IAWRC,GAAe,oCACfC,GAAe,oCAErB,SAAS7c,GAAc7U,GAErB,MAAMqG,EAAMrG,EAAIsC,OAAOI,cAEvB,OAAO+uB,GAAap1B,KAAKgK,IAAOqrB,GAAar1B,KAAKgK,EACpD,CAEA,MAAMsrB,GAAsB,CAAC,QAAS,SAAU,WAEhD,SAAS/c,GAAe5U,GACtB,MAAM4xB,EAASrkB,EAAYvN,GAAK,GAEhC,GAAI4xB,EAAOxxB,YAOJwxB,EAAO3xB,UAAY0xB,GAAoBtxB,QAAQuxB,EAAO3xB,WAAa,GACtE,IACE2xB,EAAOxxB,SAAW0wB,GAAAA,QAAiBc,EAAOxxB,SAC5C,CAAE,MAAOyxB,GAAU,CAIvB,OAAOtkB,EAAaA,EAAaqkB,GACnC,CAEA,SAAS5c,GAAmBhV,GAC1B,MAAM4xB,EAASrkB,EAAYvN,GAAK,GAEhC,GAAI4xB,EAAOxxB,YAOJwxB,EAAO3xB,UAAY0xB,GAAoBtxB,QAAQuxB,EAAO3xB,WAAa,GACtE,IACE2xB,EAAOxxB,SAAW0wB,GAAAA,UAAmBc,EAAOxxB,SAC9C,CAAE,MAAOyxB,GAAU,CAKvB,OAAOtkB,EAAaA,EAAaqkB,GAASrkB,EAAa3O,aAAe,IACxE,CAuIA,SAASkzB,GAAYC,EAAY38B,GAC/B,KAAMuE,gBAAgBm4B,IACpB,OAAO,IAAIA,GAAWC,EAAY38B,GAG/BA,GACE48B,GAAeD,KAClB38B,EAAU28B,GAAc,CAAC,EACzBA,EAAa,WAWjBp4B,KAAKsU,OAAS,IAAImZ,GASlBztB,KAAKiX,MAAQ,IAAI2Q,GASjB5nB,KAAKq3B,KAAO,IAAIiB,GAuBhBt4B,KAAKu4B,SAAW,IAAIxjB,GASpB/U,KAAKua,QAAU,IAAI2Y,GAiBnBlzB,KAAKkb,aAAeA,GAQpBlb,KAAKib,cAAgBA,GAOrBjb,KAAKqb,kBAAoBA,GAUzBrb,KAAKq4B,MAAQA,EAQbr4B,KAAKmlB,QAAUkT,GAAa,CAAC,EAAGlT,GAEhCnlB,KAAKvE,QAAU,CAAC,EAChBuE,KAAKw4B,UAAUJ,GAEX38B,GAAWuE,KAAKszB,IAAI73B,EAC1B,CAqBA08B,GAAWx+B,UAAU25B,IAAM,SAAU73B,GAEnC,OADA48B,GAAar4B,KAAKvE,QAASA,GACpBuE,IACT,EAYAm4B,GAAWx+B,UAAU6+B,UAAY,SAAUC,GACzC,MAAM3gB,EAAO9X,KAEb,GAAIq4B,GAAeI,GAAU,CAC3B,MAAML,EAAaK,EAEnB,GADAA,EAAUlB,GAAOa,IACZK,EAAW,MAAM,IAAIjgB,MAAM,+BAAiC4f,EAAa,gBAChF,CAEA,IAAKK,EAAW,MAAM,IAAIjgB,MAAM,8CAchC,OAZIigB,EAAQh9B,SAAWqc,EAAKwb,IAAImF,EAAQh9B,SAEpCg9B,EAAQrB,YACVz5B,OAAOgU,KAAK8mB,EAAQrB,YAAY3lB,SAAQ,SAAUrP,GAC5Cq2B,EAAQrB,WAAWh1B,GAAM4S,OAC3B8C,EAAK1V,GAAMsc,MAAMvF,WAAWsf,EAAQrB,WAAWh1B,GAAM4S,OAEnDyjB,EAAQrB,WAAWh1B,GAAMk1B,QAC3Bxf,EAAK1V,GAAMsrB,OAAOvU,WAAWsf,EAAQrB,WAAWh1B,GAAMk1B,OAE1D,IAEKt3B,IACT,EAmBAm4B,GAAWx+B,UAAUof,OAAS,SAAUC,EAAMC,GAC5C,IAAI7T,EAAS,GAERzC,MAAMuW,QAAQF,KAASA,EAAO,CAACA,IAEpC,CAAC,OAAQ,QAAS,UAAUvH,SAAQ,SAAU2G,GAC5ChT,EAASA,EAAOiC,OAAOrH,KAAKoY,GAAOsG,MAAM3F,OAAOC,GAAM,GACxD,GAAGhZ,MAEHoF,EAASA,EAAOiC,OAAOrH,KAAKsU,OAAOoZ,OAAO3U,OAAOC,GAAM,IAEvD,MAAM0f,EAAS1f,EAAKyZ,QAAO,SAAUrwB,GAAQ,OAAOgD,EAAOsB,QAAQtE,GAAQ,CAAE,IAE7E,GAAIs2B,EAAO92B,SAAWqX,EACpB,MAAM,IAAIT,MAAM,iDAAmDkgB,GAGrE,OAAO14B,IACT,EASAm4B,GAAWx+B,UAAUyf,QAAU,SAAUJ,EAAMC,GAC7C,IAAI7T,EAAS,GAERzC,MAAMuW,QAAQF,KAASA,EAAO,CAACA,IAEpC,CAAC,OAAQ,QAAS,UAAUvH,SAAQ,SAAU2G,GAC5ChT,EAASA,EAAOiC,OAAOrH,KAAKoY,GAAOsG,MAAMtF,QAAQJ,GAAM,GACzD,GAAGhZ,MAEHoF,EAASA,EAAOiC,OAAOrH,KAAKsU,OAAOoZ,OAAOtU,QAAQJ,GAAM,IAExD,MAAM0f,EAAS1f,EAAKyZ,QAAO,SAAUrwB,GAAQ,OAAOgD,EAAOsB,QAAQtE,GAAQ,CAAE,IAE7E,GAAIs2B,EAAO92B,SAAWqX,EACpB,MAAM,IAAIT,MAAM,kDAAoDkgB,GAEtE,OAAO14B,IACT,EAkBAm4B,GAAWx+B,UAAUg/B,IAAM,SAAUC,GACnC,MAAMC,EAAO,CAAC74B,MAAMqH,OAAO1E,MAAMhJ,UAAUM,MAAM+W,KAAKvN,UAAW,IAEjE,OADAm1B,EAAOE,MAAMF,EAAQC,GACd74B,IACT,EAiBAm4B,GAAWx+B,UAAU4O,MAAQ,SAAUsJ,EAAKuD,GAC1C,GAAmB,kBAARvD,EACT,MAAM,IAAI2G,MAAM,iCAGlB,MAAMvZ,EAAQ,IAAIe,KAAKq3B,KAAK1Y,MAAM9M,EAAK7R,KAAMoV,GAI7C,OAFApV,KAAKq3B,KAAKr1B,QAAQ/C,GAEXA,EAAMiW,MACf,EAaAijB,GAAWx+B,UAAU6d,OAAS,SAAU3F,EAAKuD,GAG3C,OAFAA,EAAMA,GAAO,CAAC,EAEPpV,KAAKu4B,SAAS/gB,OAAOxX,KAAKuI,MAAMsJ,EAAKuD,GAAMpV,KAAKvE,QAAS2Z,EAClE,EAWA+iB,GAAWx+B,UAAUo/B,YAAc,SAAUlnB,EAAKuD,GAChD,MAAMnW,EAAQ,IAAIe,KAAKq3B,KAAK1Y,MAAM9M,EAAK7R,KAAMoV,GAK7C,OAHAnW,EAAM+a,YAAa,EACnBha,KAAKq3B,KAAKr1B,QAAQ/C,GAEXA,EAAMiW,MACf,EAUAijB,GAAWx+B,UAAU4d,aAAe,SAAU1F,EAAKuD,GAGjD,OAFAA,EAAMA,GAAO,CAAC,EAEPpV,KAAKu4B,SAAS/gB,OAAOxX,KAAK+4B,YAAYlnB,EAAKuD,GAAMpV,KAAKvE,QAAS2Z,EACxE,EAEA,S","sources":["webpack://game-sprunki/./node_modules/core-js/internals/a-possible-prototype.js","webpack://game-sprunki/./node_modules/core-js/internals/array-buffer-basic-detection.js","webpack://game-sprunki/./node_modules/core-js/internals/array-buffer-byte-length.js","webpack://game-sprunki/./node_modules/core-js/internals/array-buffer-is-detached.js","webpack://game-sprunki/./node_modules/core-js/internals/array-buffer-not-detached.js","webpack://game-sprunki/./node_modules/core-js/internals/array-buffer-transfer.js","webpack://game-sprunki/./node_modules/core-js/internals/array-buffer-view-core.js","webpack://game-sprunki/./node_modules/core-js/internals/array-with.js","webpack://game-sprunki/./node_modules/core-js/internals/detach-transferable.js","webpack://game-sprunki/./node_modules/core-js/internals/environment-is-node.js","webpack://game-sprunki/./node_modules/core-js/internals/environment.js","webpack://game-sprunki/./node_modules/core-js/internals/get-built-in-node-module.js","webpack://game-sprunki/./node_modules/core-js/internals/is-big-int-array.js","webpack://game-sprunki/./node_modules/core-js/internals/is-possible-prototype.js","webpack://game-sprunki/./node_modules/core-js/internals/object-set-prototype-of.js","webpack://game-sprunki/./node_modules/core-js/internals/structured-clone-proper-transfer.js","webpack://game-sprunki/./node_modules/core-js/internals/to-big-int.js","webpack://game-sprunki/./node_modules/core-js/internals/to-index.js","webpack://game-sprunki/./node_modules/core-js/modules/es.array-buffer.detached.js","webpack://game-sprunki/./node_modules/core-js/modules/es.array-buffer.transfer-to-fixed-length.js","webpack://game-sprunki/./node_modules/core-js/modules/es.array-buffer.transfer.js","webpack://game-sprunki/./node_modules/core-js/modules/es.typed-array.to-reversed.js","webpack://game-sprunki/./node_modules/core-js/modules/es.typed-array.to-sorted.js","webpack://game-sprunki/./node_modules/core-js/modules/es.typed-array.with.js","webpack://game-sprunki/./node_modules/mdurl/lib/decode.mjs","webpack://game-sprunki/./node_modules/mdurl/lib/encode.mjs","webpack://game-sprunki/./node_modules/mdurl/lib/format.mjs","webpack://game-sprunki/./node_modules/mdurl/lib/parse.mjs","webpack://game-sprunki/./node_modules/uc.micro/categories/P/regex.mjs","webpack://game-sprunki/./node_modules/uc.micro/categories/S/regex.mjs","webpack://game-sprunki/./node_modules/uc.micro/properties/Any/regex.mjs","webpack://game-sprunki/./node_modules/uc.micro/categories/Cc/regex.mjs","webpack://game-sprunki/./node_modules/uc.micro/categories/Cf/regex.mjs","webpack://game-sprunki/./node_modules/uc.micro/categories/Z/regex.mjs","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/encode-html.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/index.ts","webpack://game-sprunki/./node_modules/markdown-it/lib/common/utils.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/helpers/parse_link_label.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/helpers/parse_link_destination.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/helpers/parse_link_title.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/renderer.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/ruler.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/token.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_core/state_core.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_core/normalize.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_core/block.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_core/inline.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_core/linkify.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_core/replacements.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_core/smartquotes.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_core/text_join.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/parser_core.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_block/state_block.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_block/table.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_block/code.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_block/fence.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_block/blockquote.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_block/hr.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_block/list.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_block/reference.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/common/html_blocks.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/common/html_re.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_block/html_block.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_block/heading.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_block/lheading.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_block/paragraph.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/parser_block.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/state_inline.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/text.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/linkify.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/newline.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/escape.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/backticks.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/strikethrough.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/emphasis.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/link.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/image.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/autolink.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/html_inline.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/entity.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/rules_inline/fragments_join.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/parser_inline.mjs","webpack://game-sprunki/./node_modules/linkify-it/lib/re.mjs","webpack://game-sprunki/./node_modules/linkify-it/index.mjs","webpack://game-sprunki/./node_modules/punycode.js/punycode.es6.js","webpack://game-sprunki/./node_modules/markdown-it/lib/presets/default.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/presets/zero.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/presets/commonmark.mjs","webpack://game-sprunki/./node_modules/markdown-it/lib/index.mjs"],"sourcesContent":["'use strict';\nvar isPossiblePrototype = require('../internals/is-possible-prototype');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (isPossiblePrototype(argument)) return argument;\n  throw new $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};\n","'use strict';\n// eslint-disable-next-line es/no-typed-arrays -- safe\nmodule.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar classof = require('../internals/classof-raw');\n\nvar ArrayBuffer = globalThis.ArrayBuffer;\nvar TypeError = globalThis.TypeError;\n\n// Includes\n// - Perform ? RequireInternalSlot(O, [[ArrayBufferData]]).\n// - If IsSharedArrayBuffer(O) is true, throw a TypeError exception.\nmodule.exports = ArrayBuffer && uncurryThisAccessor(ArrayBuffer.prototype, 'byteLength', 'get') || function (O) {\n  if (classof(O) !== 'ArrayBuffer') throw new TypeError('ArrayBuffer expected');\n  return O.byteLength;\n};\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar arrayBufferByteLength = require('../internals/array-buffer-byte-length');\n\nvar ArrayBuffer = globalThis.ArrayBuffer;\nvar ArrayBufferPrototype = ArrayBuffer && ArrayBuffer.prototype;\nvar slice = ArrayBufferPrototype && uncurryThis(ArrayBufferPrototype.slice);\n\nmodule.exports = function (O) {\n  if (arrayBufferByteLength(O) !== 0) return false;\n  if (!slice) return false;\n  try {\n    slice(O, 0, 0);\n    return false;\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar isDetached = require('../internals/array-buffer-is-detached');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it) {\n  if (isDetached(it)) throw new $TypeError('ArrayBuffer is detached');\n  return it;\n};\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar toIndex = require('../internals/to-index');\nvar notDetached = require('../internals/array-buffer-not-detached');\nvar arrayBufferByteLength = require('../internals/array-buffer-byte-length');\nvar detachTransferable = require('../internals/detach-transferable');\nvar PROPER_STRUCTURED_CLONE_TRANSFER = require('../internals/structured-clone-proper-transfer');\n\nvar structuredClone = globalThis.structuredClone;\nvar ArrayBuffer = globalThis.ArrayBuffer;\nvar DataView = globalThis.DataView;\nvar min = Math.min;\nvar ArrayBufferPrototype = ArrayBuffer.prototype;\nvar DataViewPrototype = DataView.prototype;\nvar slice = uncurryThis(ArrayBufferPrototype.slice);\nvar isResizable = uncurryThisAccessor(ArrayBufferPrototype, 'resizable', 'get');\nvar maxByteLength = uncurryThisAccessor(ArrayBufferPrototype, 'maxByteLength', 'get');\nvar getInt8 = uncurryThis(DataViewPrototype.getInt8);\nvar setInt8 = uncurryThis(DataViewPrototype.setInt8);\n\nmodule.exports = (PROPER_STRUCTURED_CLONE_TRANSFER || detachTransferable) && function (arrayBuffer, newLength, preserveResizability) {\n  var byteLength = arrayBufferByteLength(arrayBuffer);\n  var newByteLength = newLength === undefined ? byteLength : toIndex(newLength);\n  var fixedLength = !isResizable || !isResizable(arrayBuffer);\n  var newBuffer;\n  notDetached(arrayBuffer);\n  if (PROPER_STRUCTURED_CLONE_TRANSFER) {\n    arrayBuffer = structuredClone(arrayBuffer, { transfer: [arrayBuffer] });\n    if (byteLength === newByteLength && (preserveResizability || fixedLength)) return arrayBuffer;\n  }\n  if (byteLength >= newByteLength && (!preserveResizability || fixedLength)) {\n    newBuffer = slice(arrayBuffer, 0, newByteLength);\n  } else {\n    var options = preserveResizability && !fixedLength && maxByteLength ? { maxByteLength: maxByteLength(arrayBuffer) } : undefined;\n    newBuffer = new ArrayBuffer(newByteLength, options);\n    var a = new DataView(arrayBuffer);\n    var b = new DataView(newBuffer);\n    var copyLength = min(newByteLength, byteLength);\n    for (var i = 0; i < copyLength; i++) setInt8(b, i, getInt8(a, i));\n  }\n  if (!PROPER_STRUCTURED_CLONE_TRANSFER) detachTransferable(arrayBuffer);\n  return newBuffer;\n};\n","'use strict';\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-basic-detection');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar globalThis = require('../internals/global-this');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar hasOwn = require('../internals/has-own-property');\nvar classof = require('../internals/classof');\nvar tryToString = require('../internals/try-to-string');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar uid = require('../internals/uid');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar Int8Array = globalThis.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = globalThis.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar TypeError = globalThis.TypeError;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\nvar TYPED_ARRAY_CONSTRUCTOR = 'TypedArrayConstructor';\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(globalThis.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQUIRED = false;\nvar NAME, Constructor, Prototype;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar BigIntArrayConstructorsList = {\n  BigInt64Array: 8,\n  BigUint64Array: 8\n};\n\nvar isView = function isView(it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return klass === 'DataView'\n    || hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar getTypedArrayConstructor = function (it) {\n  var proto = getPrototypeOf(it);\n  if (!isObject(proto)) return;\n  var state = getInternalState(proto);\n  return (state && hasOwn(state, TYPED_ARRAY_CONSTRUCTOR)) ? state[TYPED_ARRAY_CONSTRUCTOR] : getTypedArrayConstructor(proto);\n};\n\nvar isTypedArray = function (it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw new TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C))) return C;\n  throw new TypeError(tryToString(C) + ' is not a typed array constructor');\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced, options) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = globalThis[ARRAY];\n    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {\n      delete TypedArrayConstructor.prototype[KEY];\n    } catch (error) {\n      // old WebKit bug - some methods are non-configurable\n      try {\n        TypedArrayConstructor.prototype[KEY] = property;\n      } catch (error2) { /* empty */ }\n    }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    defineBuiltIn(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = globalThis[ARRAY];\n      if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {\n        delete TypedArrayConstructor[KEY];\n      } catch (error) { /* empty */ }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return defineBuiltIn(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = globalThis[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      defineBuiltIn(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  Constructor = globalThis[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n  else NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\nfor (NAME in BigIntArrayConstructorsList) {\n  Constructor = globalThis[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow -- safe\n  TypedArray = function TypedArray() {\n    throw new TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (globalThis[NAME]) setPrototypeOf(globalThis[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (globalThis[NAME]) setPrototypeOf(globalThis[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQUIRED = true;\n  defineBuiltInAccessor(TypedArrayPrototype, TO_STRING_TAG, {\n    configurable: true,\n    get: function () {\n      return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n    }\n  });\n  for (NAME in TypedArrayConstructorsList) if (globalThis[NAME]) {\n    createNonEnumerableProperty(globalThis[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  getTypedArrayConstructor: getTypedArrayConstructor,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n","'use strict';\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar $RangeError = RangeError;\n\n// https://tc39.es/proposal-change-array-by-copy/#sec-array.prototype.with\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.with\nmodule.exports = function (O, C, index, value) {\n  var len = lengthOfArrayLike(O);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var actualIndex = relativeIndex < 0 ? len + relativeIndex : relativeIndex;\n  if (actualIndex >= len || actualIndex < 0) throw new $RangeError('Incorrect index');\n  var A = new C(len);\n  var k = 0;\n  for (; k < len; k++) A[k] = k === actualIndex ? value : O[k];\n  return A;\n};\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar getBuiltInNodeModule = require('../internals/get-built-in-node-module');\nvar PROPER_STRUCTURED_CLONE_TRANSFER = require('../internals/structured-clone-proper-transfer');\n\nvar structuredClone = globalThis.structuredClone;\nvar $ArrayBuffer = globalThis.ArrayBuffer;\nvar $MessageChannel = globalThis.MessageChannel;\nvar detach = false;\nvar WorkerThreads, channel, buffer, $detach;\n\nif (PROPER_STRUCTURED_CLONE_TRANSFER) {\n  detach = function (transferable) {\n    structuredClone(transferable, { transfer: [transferable] });\n  };\n} else if ($ArrayBuffer) try {\n  if (!$MessageChannel) {\n    WorkerThreads = getBuiltInNodeModule('worker_threads');\n    if (WorkerThreads) $MessageChannel = WorkerThreads.MessageChannel;\n  }\n\n  if ($MessageChannel) {\n    channel = new $MessageChannel();\n    buffer = new $ArrayBuffer(2);\n\n    $detach = function (transferable) {\n      channel.port1.postMessage(null, [transferable]);\n    };\n\n    if (buffer.byteLength === 2) {\n      $detach(buffer);\n      if (buffer.byteLength === 0) detach = $detach;\n    }\n  }\n} catch (error) { /* empty */ }\n\nmodule.exports = detach;\n","'use strict';\nvar ENVIRONMENT = require('../internals/environment');\n\nmodule.exports = ENVIRONMENT === 'NODE';\n","'use strict';\n/* global Bun, Deno -- detection */\nvar globalThis = require('../internals/global-this');\nvar userAgent = require('../internals/environment-user-agent');\nvar classof = require('../internals/classof-raw');\n\nvar userAgentStartsWith = function (string) {\n  return userAgent.slice(0, string.length) === string;\n};\n\nmodule.exports = (function () {\n  if (userAgentStartsWith('Bun/')) return 'BUN';\n  if (userAgentStartsWith('Cloudflare-Workers')) return 'CLOUDFLARE';\n  if (userAgentStartsWith('Deno/')) return 'DENO';\n  if (userAgentStartsWith('Node.js/')) return 'NODE';\n  if (globalThis.Bun && typeof Bun.version == 'string') return 'BUN';\n  if (globalThis.Deno && typeof Deno.version == 'object') return 'DENO';\n  if (classof(globalThis.process) === 'process') return 'NODE';\n  if (globalThis.window && globalThis.document) return 'BROWSER';\n  return 'REST';\n})();\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar IS_NODE = require('../internals/environment-is-node');\n\nmodule.exports = function (name) {\n  if (IS_NODE) {\n    try {\n      return globalThis.process.getBuiltinModule(name);\n    } catch (error) { /* empty */ }\n    try {\n      // eslint-disable-next-line no-new-func -- safe\n      return Function('return require(\"' + name + '\")')();\n    } catch (error) { /* empty */ }\n  }\n};\n","'use strict';\nvar classof = require('../internals/classof');\n\nmodule.exports = function (it) {\n  var klass = classof(it);\n  return klass === 'BigInt64Array' || klass === 'BigUint64Array';\n};\n","'use strict';\nvar isObject = require('../internals/is-object');\n\nmodule.exports = function (argument) {\n  return isObject(argument) || argument === null;\n};\n","'use strict';\n/* eslint-disable no-proto -- safe */\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar isObject = require('../internals/is-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    requireObjectCoercible(O);\n    aPossiblePrototype(proto);\n    if (!isObject(O)) return O;\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar fails = require('../internals/fails');\nvar V8 = require('../internals/environment-v8-version');\nvar ENVIRONMENT = require('../internals/environment');\n\nvar structuredClone = globalThis.structuredClone;\n\nmodule.exports = !!structuredClone && !fails(function () {\n  // prevent V8 ArrayBufferDetaching protector cell invalidation and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if ((ENVIRONMENT === 'DENO' && V8 > 92) || (ENVIRONMENT === 'NODE' && V8 > 94) || (ENVIRONMENT === 'BROWSER' && V8 > 97)) return false;\n  var buffer = new ArrayBuffer(8);\n  var clone = structuredClone(buffer, { transfer: [buffer] });\n  return buffer.byteLength !== 0 || clone.byteLength !== 8;\n});\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\n\nvar $TypeError = TypeError;\n\n// `ToBigInt` abstract operation\n// https://tc39.es/ecma262/#sec-tobigint\nmodule.exports = function (argument) {\n  var prim = toPrimitive(argument, 'number');\n  if (typeof prim == 'number') throw new $TypeError(\"Can't convert number to bigint\");\n  // eslint-disable-next-line es/no-bigint -- safe\n  return BigInt(prim);\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toLength = require('../internals/to-length');\n\nvar $RangeError = RangeError;\n\n// `ToIndex` abstract operation\n// https://tc39.es/ecma262/#sec-toindex\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toIntegerOrInfinity(it);\n  var length = toLength(number);\n  if (number !== length) throw new $RangeError('Wrong length or index');\n  return length;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar isDetached = require('../internals/array-buffer-is-detached');\n\nvar ArrayBufferPrototype = ArrayBuffer.prototype;\n\n// `ArrayBuffer.prototype.detached` getter\n// https://tc39.es/ecma262/#sec-get-arraybuffer.prototype.detached\nif (DESCRIPTORS && !('detached' in ArrayBufferPrototype)) {\n  defineBuiltInAccessor(ArrayBufferPrototype, 'detached', {\n    configurable: true,\n    get: function detached() {\n      return isDetached(this);\n    }\n  });\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $transfer = require('../internals/array-buffer-transfer');\n\n// `ArrayBuffer.prototype.transferToFixedLength` method\n// https://tc39.es/proposal-arraybuffer-transfer/#sec-arraybuffer.prototype.transfertofixedlength\nif ($transfer) $({ target: 'ArrayBuffer', proto: true }, {\n  transferToFixedLength: function transferToFixedLength() {\n    return $transfer(this, arguments.length ? arguments[0] : undefined, false);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $transfer = require('../internals/array-buffer-transfer');\n\n// `ArrayBuffer.prototype.transfer` method\n// https://tc39.es/proposal-arraybuffer-transfer/#sec-arraybuffer.prototype.transfer\nif ($transfer) $({ target: 'ArrayBuffer', proto: true }, {\n  transfer: function transfer() {\n    return $transfer(this, arguments.length ? arguments[0] : undefined, true);\n  }\n});\n","'use strict';\nvar arrayToReversed = require('../internals/array-to-reversed');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\n\n// `%TypedArray%.prototype.toReversed` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.toreversed\nexportTypedArrayMethod('toReversed', function toReversed() {\n  return arrayToReversed(aTypedArray(this), getTypedArrayConstructor(this));\n});\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar arrayFromConstructorAndList = require('../internals/array-from-constructor-and-list');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar sort = uncurryThis(ArrayBufferViewCore.TypedArrayPrototype.sort);\n\n// `%TypedArray%.prototype.toSorted` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tosorted\nexportTypedArrayMethod('toSorted', function toSorted(compareFn) {\n  if (compareFn !== undefined) aCallable(compareFn);\n  var O = aTypedArray(this);\n  var A = arrayFromConstructorAndList(getTypedArrayConstructor(O), O);\n  return sort(A, compareFn);\n});\n","'use strict';\nvar arrayWith = require('../internals/array-with');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar isBigIntArray = require('../internals/is-big-int-array');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toBigInt = require('../internals/to-big-int');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar PROPER_ORDER = !!function () {\n  try {\n    // eslint-disable-next-line no-throw-literal, es/no-typed-arrays, es/no-array-prototype-with -- required for testing\n    new Int8Array(1)['with'](2, { valueOf: function () { throw 8; } });\n  } catch (error) {\n    // some early implementations, like WebKit, does not follow the final semantic\n    // https://github.com/tc39/proposal-change-array-by-copy/pull/86\n    return error === 8;\n  }\n}();\n\n// `%TypedArray%.prototype.with` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.with\nexportTypedArrayMethod('with', { 'with': function (index, value) {\n  var O = aTypedArray(this);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var actualValue = isBigIntArray(O) ? toBigInt(value) : +value;\n  return arrayWith(O, getTypedArrayConstructor(O), relativeIndex, actualValue);\n} }['with'], !PROPER_ORDER);\n","/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n","const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n","export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n","export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/","export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","export default /[\\0-\\x1F\\x7F-\\x9F]/","export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/",null,null,null,null,null,null,null,"// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n","// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n","// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n","// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n","// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n","// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n","export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n","export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n","// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* ’ */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n","// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n","// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n","// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n","// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n","import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n","// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n","// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n","// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n","// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n","// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n","// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n","// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n","// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n","// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n","// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n","// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n","// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n","// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n","// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n","import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n","import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n"],"names":["isPossiblePrototype","$String","String","$TypeError","TypeError","module","exports","argument","ArrayBuffer","DataView","globalThis","uncurryThisAccessor","classof","prototype","O","byteLength","uncurryThis","arrayBufferByteLength","ArrayBufferPrototype","slice","error","isDetached","it","toIndex","notDetached","detachTransferable","PROPER_STRUCTURED_CLONE_TRANSFER","structuredClone","min","Math","DataViewPrototype","isResizable","maxByteLength","getInt8","setInt8","arrayBuffer","newLength","preserveResizability","newBuffer","newByteLength","undefined","fixedLength","transfer","options","a","b","copyLength","i","NAME","Constructor","Prototype","NATIVE_ARRAY_BUFFER","DESCRIPTORS","isCallable","isObject","hasOwn","tryToString","createNonEnumerableProperty","defineBuiltIn","defineBuiltInAccessor","isPrototypeOf","getPrototypeOf","setPrototypeOf","wellKnownSymbol","uid","InternalStateModule","enforceInternalState","enforce","getInternalState","get","Int8Array","Int8ArrayPrototype","Uint8ClampedArray","Uint8ClampedArrayPrototype","TypedArray","TypedArrayPrototype","ObjectPrototype","Object","TO_STRING_TAG","TYPED_ARRAY_TAG","TYPED_ARRAY_CONSTRUCTOR","NATIVE_ARRAY_BUFFER_VIEWS","opera","TYPED_ARRAY_TAG_REQUIRED","TypedArrayConstructorsList","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigIntArrayConstructorsList","BigInt64Array","BigUint64Array","isView","klass","getTypedArrayConstructor","proto","state","isTypedArray","aTypedArray","aTypedArrayConstructor","C","exportTypedArrayMethod","KEY","property","forced","ARRAY","TypedArrayConstructor","error2","exportTypedArrayStaticMethod","Function","configurable","this","lengthOfArrayLike","toIntegerOrInfinity","$RangeError","RangeError","index","value","len","relativeIndex","actualIndex","A","k","WorkerThreads","channel","buffer","$detach","getBuiltInNodeModule","$ArrayBuffer","$MessageChannel","MessageChannel","detach","transferable","port1","postMessage","ENVIRONMENT","userAgent","userAgentStartsWith","string","length","Bun","version","Deno","process","window","document","IS_NODE","name","getBuiltinModule","requireObjectCoercible","aPossiblePrototype","setter","CORRECT_SETTER","test","Array","__proto__","fails","V8","clone","toPrimitive","prim","BigInt","toLength","number","$","$transfer","target","transferToFixedLength","arguments","arrayToReversed","ArrayBufferViewCore","aCallable","arrayFromConstructorAndList","sort","compareFn","arrayWith","isBigIntArray","toBigInt","PROPER_ORDER","valueOf","actualValue","decodeCache","getDecodeCache","exclude","cache","ch","fromCharCode","push","charCodeAt","toString","toUpperCase","decode","defaultChars","replace","seq","result","l","b1","parseInt","b2","chr","b3","b4","componentChars","encodeCache","getEncodeCache","encode","keepEscaped","code","nextCode","encodeURIComponent","format","url","protocol","slashes","auth","hostname","indexOf","port","pathname","search","hash","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","slashedProtocol","http","https","ftp","gopher","file","urlParse","slashesDenoteHost","u","parse","lowerProto","hec","rest","trim","split","simplePath","exec","toLowerCase","substr","match","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","validParts","notHost","bit","unshift","join","qm","map","c","decodeMap","Map","fromCodePoint","_a","codePoint","output","replaceCodePoint","CharCodes","TO_LOWER_BIT","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isAsciiAlphaNumeric","UPPER_Z","LOWER_Z","isEntityInAttributeInvalidEnd","EQUALS","EntityDecoder","constructor","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","write","str","offset","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","start","end","base","digitCount","pow","startIdx","char","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","lastIndex","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecoder","htmlDecodeTree","xmlDecodeTree","decodeHTML","mode","Legacy","restoreDiff","arr","v","n","o","xmlCodeMap","codePointAt","getEscaper","regex","data","lastIdx","substring","EntityLevel","EncodingMode","_class","obj","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","forEach","source","keys","arrayReplaceAt","src","pos","newElements","isValidEntityCode","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","decoded","unescapeMd","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","isPunctChar","ucmicro","isMdAsciiPunct","normalizeReference","lib","mdurl","parseLinkLabel","disableNested","level","found","marker","prevPos","posMax","oldPos","md","inline","skipToken","labelEnd","parseLinkDestination","ok","parseLinkTitle","prev_state","can_continue","default_rules","Renderer","rules","code_inline","tokens","idx","env","slf","token","renderAttrs","content","code_block","fence","info","highlighted","langName","langAttrs","highlight","attrIndex","tmpAttrs","attrs","langPrefix","tmpToken","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","hidden","block","nesting","tag","needLf","nextToken","type","renderInline","render","Ruler","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","Token","markup","meta","attrPush","attrData","attrSet","attrGet","attrJoin","StateCore","inlineMode","NEWLINES_RE","NULL_RE","normalize","tok","isLinkOpen","isLinkClose","linkify","blockTokens","pretest","htmlLinkLevel","currentToken","links","nodes","lastPos","ln","fullUrl","normalizeLink","validateLink","urlText","schema","normalizeLinkText","token_o","token_t","token_c","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","stack","thisLevel","OUTER","t","canOpen","canClose","isSingle","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","item","single","openQuote","closeQuote","quotes","smartquotes","text_join","curr","last","_rules","r_normalize","r_block","r_inline","r_linkify","r_replacements","r_smartquotes","r_text_join","Core","ruler","State","StateBlock","bMarks","eMarks","tShift","sCount","bsCount","blkIndent","line","lineMax","tight","ddIndent","listIndent","parentType","s","indent","indent_found","isEmpty","skipEmptyLines","from","skipSpaces","skipSpacesBack","skipChars","skipCharsBack","getLines","begin","keepLastLF","queue","lineIndent","lineStart","first","MAX_AUTOCOMPLETED_CELLS","getLine","escapedSplit","isEscaped","table","startLine","endLine","silent","nextLine","firstCh","secondCh","lineText","columns","aligns","shift","pop","columnCount","oldParentType","terminatorRules","token_to","tableLines","token_tho","token_htro","token_ho","token_il","tbodyLines","autocompletedCells","terminate","token_tbo","token_tro","token_tdo","mem","params","haveEndMarker","blockquote","oldLineMax","oldBMarks","oldBSCount","oldSCount","oldTShift","lastLineEmpty","isOutdented","spaceAfterMarker","adjustTab","initial","oldIndent","lines","tokenize","hr","cnt","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","isOrdered","markerValue","posAfterMarker","isTerminatingParagraph","Number","markerCharCode","listTokIdx","listLines","prevEmptyEnd","contentStart","indentAfterMarker","itemLines","oldTight","oldListIndent","reference","_endLine","getNextLine","isContinuation","lineContent","destRes","helpers","href","destEndPos","destEndLineNo","title","titleRes","label","references","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","block_names","html","heading","tmp","token_i","lheading","paragraph","r_table","r_code","r_fence","r_blockquote","r_hr","r_list","r_reference","r_html_block","r_heading","r_lheading","r_paragraph","ParserBlock","maxNesting","hasEmptyLines","prevLine","outTokens","StateInline","tokens_meta","pending","pendingLevel","delimiters","_prev_delimiters","backticks","backticksScanned","linkLevel","pushPending","token_meta","scanDelims","canSplitWord","count","left_flanking","right_flanking","can_open","can_close","isTerminatorChar","SCHEME_RE","link","matchAtStart","newline","pmax","ws","ESCAPED","escape","ch1","escapedStr","ch2","origStr","backtick","openerLength","matchStart","matchEnd","closerLength","strikethrough_tokenize","scanned","open","close","postProcess","loneMarkers","startDelim","endDelim","strikethrough_postProcess","emphasis_tokenize","isStrong","emphasis_post_process","res","ref","parseReference","labelStart","EMAIL_RE","AUTOLINK_RE","autolink","isLetter","lc","DIGITAL_RE","NAMED_RE","processDelimiters","openersBottom","headerIdx","lastTokenIdx","jumps","closerIdx","closer","minOpenerIdx","openerIdx","newMinOpenerIdx","opener","isOddMatch","lastJump","link_pairs","fragments_join","r_text","r_newline","r_escape","r_backticks","r_strikethrough","r_emphasis","r_link","r_image","r_autolink","r_html_inline","r_entity","_rules2","r_balance_pairs","r_fragments_join","ParserInline","ruler2","opts","re","src_Any","Any","src_Cc","Cc","src_Z","Z","src_P","P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isRegExp","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","defaultSchemas","validate","tail","no_http","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","compile","reFactory","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","alias","slist","filter","schema_test","schema_search","schema_at_start","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","add","definition","set","m","ml","me","next","tld_pos","at_pos","testSchemaAt","keepOld","el","reverse","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","baseMinusTMin","floor","stringFromCharCode","array","callback","mapDomain","domain","parts","labels","encoded","ucs2decode","counter","extra","ucs2encode","codePoints","basicToDigit","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","inputLength","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","toUnicode","toASCII","punycode","components","core","rules2","config","default","cfg_default","zero","cfg_zero","commonmark","cfg_commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","er","MarkdownIt","presetName","utils","ParserCore","renderer","configure","presets","missed","use","plugin","args","apply","parseInline"],"sourceRoot":""}